{
	"info": {
		"_postman_id": "9cf05d4b-919e-4aa5-b328-753bd14208b7",
		"name": "ServeRest",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "27209089"
	},
	"item": [
		{
			"name": "usuarios",
			"item": [
				{
					"name": "Cadastrar usuário",
					"item": [
						{
							"name": "CT_001: Realizar cadastro como administrador válido",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"pm.test(\"Checks response body\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.message).to.eql(\"Cadastro realizado com sucesso\");\r",
											"    pm.expect(jsonData.id).not.null;\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"nome\": \"{{$randomFullName}}\",\r\n  \"email\": \"{{$randomExampleEmail}}\",\r\n  \"password\": \"{{validPassword}}\",\r\n  \"administrador\": \"true\"\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/usuarios",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"usuarios"
									]
								}
							},
							"response": [
								{
									"name": "Cadastro realizado com sucesso",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"nome\": \"{{$randomFullName}}\",\r\n  \"email\": \"{{$randomExampleEmail}}\",\r\n  \"password\": \"{{validPassword}}\",\r\n  \"administrador\": \"true\"\r\n}\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/usuarios",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"usuarios"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "x-dns-prefetch-control",
											"value": "off"
										},
										{
											"key": "x-frame-options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "strict-transport-security",
											"value": "max-age=15552000; includeSubDomains"
										},
										{
											"key": "x-download-options",
											"value": "noopen"
										},
										{
											"key": "x-content-type-options",
											"value": "nosniff"
										},
										{
											"key": "x-xss-protection",
											"value": "1; mode=block"
										},
										{
											"key": "x-moesif-transaction-id",
											"value": "a774980d-8960-413e-b808-01d26d041cc0"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "82"
										},
										{
											"key": "Date",
											"value": "Fri, 06 Oct 2023 17:15:44 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"body": "{\n    \"message\": \"Cadastro realizado com sucesso\",\n    \"_id\": \"xPEyXQS8gTe3U0lk\"\n}"
								}
							]
						},
						{
							"name": "CT_002: Realizar cadastro como usuário comum válido",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"pm.test(\"Checks response body\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.message).to.eql(\"Cadastro realizado com sucesso\");\r",
											"    pm.expect(jsonData.id).not.null;\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"nome\": \"{{$randomFullName}}\",\r\n  \"email\": \"{{$randomExampleEmail}}\",\r\n  \"password\": \"{{validPassword}}\",\r\n  \"administrador\": \"false\"\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/usuarios",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"usuarios"
									]
								}
							},
							"response": [
								{
									"name": "Cadastro realizado com sucesso",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"nome\": \"{{$randomFullName}}\",\r\n  \"email\": \"{{$randomExampleEmail}}\",\r\n  \"password\": \"{{validPassword}}\",\r\n  \"administrador\": \"false\"\r\n}\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/usuarios",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"usuarios"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "x-dns-prefetch-control",
											"value": "off"
										},
										{
											"key": "x-frame-options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "strict-transport-security",
											"value": "max-age=15552000; includeSubDomains"
										},
										{
											"key": "x-download-options",
											"value": "noopen"
										},
										{
											"key": "x-content-type-options",
											"value": "nosniff"
										},
										{
											"key": "x-xss-protection",
											"value": "1; mode=block"
										},
										{
											"key": "x-moesif-transaction-id",
											"value": "c2503959-94b5-4f41-8bbe-a22b2f593eb9"
										},
										{
											"key": "Content-Type",
											"value": "application/json",
											"name": "Content-Type",
											"description": "",
											"type": "text"
										},
										{
											"key": "Content-Length",
											"value": "82"
										},
										{
											"key": "Date",
											"value": "Fri, 06 Oct 2023 17:17:15 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"body": "{\n    \"message\": \"Cadastro realizado com sucesso\",\n    \"_id\": \"IW0Wf4IdWMHkHn5N\"\n}"
								}
							]
						},
						{
							"name": "CT_003: Realizar cadastro com nome em branco",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Checks response body\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.nome).to.eql(\"nome não pode ficar em branco\");\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"nome\": \" \",\r\n  \"email\": \"{{$randomExampleEmail}}\",\r\n  \"password\": \"{{validPassword}}\",\r\n  \"administrador\": \"false\"\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/usuarios",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"usuarios"
									]
								}
							},
							"response": []
						},
						{
							"name": "CT_004: Realizar cadastro com e-mail em branco",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Checks response body\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.email).to.eql(\"email não pode ficar em branco\");\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"nome\": \"{{$randomFullName}}\",\r\n  \"email\": \"\",\r\n  \"password\": \"{{validPassword}}\",\r\n  \"administrador\": \"false\"\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/usuarios",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"usuarios"
									]
								}
							},
							"response": [
								{
									"name": "E-mail é obrigatório",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"nome\": \"{{$randomFullName}}\",\r\n  \"email\": \"\",\r\n  \"password\": \"{{validPassword}}\",\r\n  \"administrador\": \"false\"\r\n}\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/usuarios",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"usuarios"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "x-dns-prefetch-control",
											"value": "off"
										},
										{
											"key": "x-frame-options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "strict-transport-security",
											"value": "max-age=15552000; includeSubDomains"
										},
										{
											"key": "x-download-options",
											"value": "noopen"
										},
										{
											"key": "x-content-type-options",
											"value": "nosniff"
										},
										{
											"key": "x-xss-protection",
											"value": "1; mode=block"
										},
										{
											"key": "x-moesif-transaction-id",
											"value": "74a96dd9-48f4-48b4-ac40-1fb7150bce6d"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "50"
										},
										{
											"key": "Date",
											"value": "Fri, 06 Oct 2023 17:20:44 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"body": "{\n    \"email\": \"email não pode ficar em branco\"\n}"
								}
							]
						},
						{
							"name": "CT_005: Realizar cadastro com password em branco",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Checks response body\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.password).to.eql(\"password não pode ficar em branco\");\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"nome\": \"{{$randomFullName}}\",\r\n  \"email\": \"{{$randomExampleEmail}}\",\r\n  \"password\": \" \",\r\n  \"administrador\": \"false\"\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/usuarios",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"usuarios"
									]
								}
							},
							"response": []
						},
						{
							"name": "CT_006: Realizar cadastro com administrador em branco",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Checks response body\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.administrador).to.eql(\"administrador deve ser 'true' ou 'false'\");\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"nome\": \"{{$randomFullName}}\",\r\n  \"email\": \"{{$randomExampleEmail}}\",\r\n  \"password\": \"{{validPassword}}\",\r\n  \"administrador\": \"\"\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/usuarios",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"usuarios"
									]
								}
							},
							"response": [
								{
									"name": "Administrador é obrigatório",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"nome\": \"{{$randomFullName}}\",\r\n  \"email\": \"{{$randomExampleEmail}}\",\r\n  \"password\": \"{{validPassword}}\",\r\n  \"administrador\": \"\"\r\n}\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/usuarios",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"usuarios"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "x-dns-prefetch-control",
											"value": "off"
										},
										{
											"key": "x-frame-options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "strict-transport-security",
											"value": "max-age=15552000; includeSubDomains"
										},
										{
											"key": "x-download-options",
											"value": "noopen"
										},
										{
											"key": "x-content-type-options",
											"value": "nosniff"
										},
										{
											"key": "x-xss-protection",
											"value": "1; mode=block"
										},
										{
											"key": "x-moesif-transaction-id",
											"value": "59bfe3a1-16f3-44ea-8ea7-b51cfaca373b"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "67"
										},
										{
											"key": "Date",
											"value": "Fri, 06 Oct 2023 17:23:22 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"body": "{\n    \"administrador\": \"administrador deve ser 'true' ou 'false'\"\n}"
								}
							]
						},
						{
							"name": "CT_007: Realizar cadastro com e-mail inválido",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Checks response body\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.email).to.eql(\"email deve ser um email válido\");\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"nome\": \"{{$randomFullName}}\",\r\n  \"email\": \"{{$randomUserName}}.com\",\r\n  \"password\": \"{{validPassword}}\",\r\n  \"administrador\": \"false\"\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/usuarios",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"usuarios"
									]
								}
							},
							"response": [
								{
									"name": "E-mail deve ser válido",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"nome\": \"{{$randomFullName}}\",\r\n  \"email\": \"{{$randomUserName}}.com\",\r\n  \"password\": \"{{validPassword}}\",\r\n  \"administrador\": \"false\"\r\n}\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/usuarios",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"usuarios"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "x-dns-prefetch-control",
											"value": "off"
										},
										{
											"key": "x-frame-options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "strict-transport-security",
											"value": "max-age=15552000; includeSubDomains"
										},
										{
											"key": "x-download-options",
											"value": "noopen"
										},
										{
											"key": "x-content-type-options",
											"value": "nosniff"
										},
										{
											"key": "x-xss-protection",
											"value": "1; mode=block"
										},
										{
											"key": "x-moesif-transaction-id",
											"value": "fab63923-3eca-4dfc-9968-bef6b8477cdc"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "50"
										},
										{
											"key": "Date",
											"value": "Fri, 06 Oct 2023 17:24:29 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"body": "{\n    \"email\": \"email deve ser um email válido\"\n}"
								}
							]
						},
						{
							"name": "CT_008: Realizar cadastro com e-mail já cadastrado",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Checks response body\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.message).to.eql(\"Este email já está sendo usado\");\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"nome\": \"{{$randomFullName}}\",\r\n  \"email\": \"{{adminEmail}}\",\r\n  \"password\": \"{{validPassword}}\",\r\n  \"administrador\": \"false\"\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/usuarios",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"usuarios"
									]
								}
							},
							"response": [
								{
									"name": "E-mail já cadastrado",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"nome\": \"{{$randomFullName}}\",\r\n  \"email\": \"{{adminEmail}}\",\r\n  \"password\": \"{{validPassword}}\",\r\n  \"administrador\": \"false\"\r\n}\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/usuarios",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"usuarios"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "x-dns-prefetch-control",
											"value": "off"
										},
										{
											"key": "x-frame-options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "strict-transport-security",
											"value": "max-age=15552000; includeSubDomains"
										},
										{
											"key": "x-download-options",
											"value": "noopen"
										},
										{
											"key": "x-content-type-options",
											"value": "nosniff"
										},
										{
											"key": "x-xss-protection",
											"value": "1; mode=block"
										},
										{
											"key": "x-moesif-transaction-id",
											"value": "72acbb3b-c279-4a54-96ca-d40f58c29e0f"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "53"
										},
										{
											"key": "Date",
											"value": "Fri, 06 Oct 2023 17:25:43 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"body": "{\n    \"message\": \"Este email já está sendo usado\"\n}"
								}
							]
						},
						{
							"name": "CT_009: Realizar cadastro com provedor de e-mail Hotmail",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Checks response body\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.message).to.eql(\"Não é possível realizar cadastro com provedor de e-mail Hotmail\");\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"nome\": \"{{$randomFullName}}\",\r\n  \"email\": \"{{$randomUserName}}@hotmail.com\",\r\n  \"password\": \"{{validPassword}}\",\r\n  \"administrador\": \"false\"\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/usuarios",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"usuarios"
									]
								}
							},
							"response": []
						},
						{
							"name": "CT_010: Realizar cadastro com provedor de e-mail Gmail",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Checks response body\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.message).to.eql(\"Não é possível realizar cadastro com provedor de e-mail Gmail\");\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"nome\": \"{{$randomFullName}}\",\r\n  \"email\": \"{{$randomUserName}}@gmail.com\",\r\n  \"password\": \"{{validPassword}}\",\r\n  \"administrador\": \"false\"\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/usuarios",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"usuarios"
									]
								}
							},
							"response": []
						},
						{
							"name": "CT_011: Realizar cadastro com senha < 5 caracteres",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const password = pm.variables.replaceIn('{{$randomPassword}}').slice(0, 4);\r",
											"pm.collectionVariables.set(\"shortPassword\", password);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Checks response body\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.message).to.eql(\"A senha deve ter no mínimo 5 caracteres\");\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"nome\": \"{{$randomFullName}}\",\r\n  \"email\": \"{{$randomExampleEmail}}\",\r\n  \"password\": \"{{shortPassword}}\",\r\n  \"administrador\": \"false\"\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/usuarios",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"usuarios"
									]
								}
							},
							"response": []
						},
						{
							"name": "CT_012: Realizar cadastro com senha > 10 caracteres",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const password = pm.variables.replaceIn('{{$randomPassword}}').slice(0, 11);\r",
											"pm.collectionVariables.set(\"longPassword\", password);\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Checks response body\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.message).to.eql(\"A senha deve ter no máximo 10 caracteres\");\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"nome\": \"{{$randomFullName}}\",\r\n  \"email\": \"{{$randomExampleEmail}}\",\r\n  \"password\": \"{{longPassword}}\",\r\n  \"administrador\": \"false\"\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/usuarios",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"usuarios"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Listar usuários cadastrados",
					"item": [
						{
							"name": "CT_013: Obter uma lista de usuários",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Checks the response body\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.quantidade).to.be.a('number');\r",
											"    pm.expect(jsonData.usuarios).lengthOf(jsonData.quantidade);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/usuarios",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"usuarios"
									]
								}
							},
							"response": [
								{
									"name": "Listar usuários cadastrados",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/usuarios",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"usuarios"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "x-dns-prefetch-control",
											"value": "off"
										},
										{
											"key": "x-frame-options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "strict-transport-security",
											"value": "max-age=15552000; includeSubDomains"
										},
										{
											"key": "x-download-options",
											"value": "noopen"
										},
										{
											"key": "x-content-type-options",
											"value": "nosniff"
										},
										{
											"key": "x-xss-protection",
											"value": "1; mode=block"
										},
										{
											"key": "x-moesif-transaction-id",
											"value": "b58a92f2-aa67-4d9c-8777-85bc04aad667"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "32852"
										},
										{
											"key": "Date",
											"value": "Fri, 06 Oct 2023 18:50:13 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"body": "{\n    \"quantidade\": 149,\n    \"usuarios\": [\n        {\n            \"nome\": \"Kristine Hahn\",\n            \"email\": \"Hope_Steuber10@example.net\",\n            \"password\": \"hVybqYUX\",\n            \"administrador\": \"false\",\n            \"_id\": \"0Ycs4TQdWplfwwFD\"\n        },\n        {\n            \"nome\": \"Fulano da Silva\",\n            \"email\": \"fulano@qa.com\",\n            \"password\": \"teste\",\n            \"administrador\": \"true\",\n            \"_id\": \"0uxuPY0cbmQhpEz1\"\n        },\n        {\n            \"nome\": \"Gregg Lang\",\n            \"email\": \"Scottie.Lakin80@example.org\",\n            \"password\": \"eWGszNoX\",\n            \"administrador\": \"true\",\n            \"_id\": \"1R2PJQD0fFaU04fR\"\n        },\n        {\n            \"nome\": \"Irene Prohaska MD\",\n            \"email\": \"Grady18@example.org\",\n            \"password\": \"X5fkJI1u\",\n            \"administrador\": \"false\",\n            \"_id\": \"2cwZ6GVto1Oa6Tjm\"\n        },\n        {\n            \"nome\": \"Charlene Lockman\",\n            \"email\": \"Reuben40@example.net\",\n            \"password\": \"pOOG8cJg\",\n            \"administrador\": \"false\",\n            \"_id\": \"2nxSPtIs9fcuXNS8\"\n        },\n        {\n            \"nome\": \"Lucia Mueller IV\",\n            \"email\": \"Sophia_Okuneva34@example.com\",\n            \"password\": \"a6KacN30\",\n            \"administrador\": \"true\",\n            \"_id\": \"2tIUfTMZxjDKbPqV\"\n        },\n        {\n            \"nome\": \"Perry Green\",\n            \"email\": \"Wilbert.Pfeffer@example.org\",\n            \"password\": \"9m_ajUqL\",\n            \"administrador\": \"false\",\n            \"_id\": \"3rLVdnawSi9NZPut\"\n        },\n        {\n            \"nome\": \"Arnold Bogan\",\n            \"email\": \"Roxane_Durgan42@gmail.com\",\n            \"password\": \"C2Xqjw5Q\",\n            \"administrador\": \"false\",\n            \"_id\": \"3wi23YpvIHNuj1Cn\"\n        },\n        {\n            \"nome\": \"Toni Altenwerth V\",\n            \"email\": \"Winnifred_Miller@example.net\",\n            \"password\": \"d_MN\",\n            \"administrador\": \"false\",\n            \"_id\": \"409oAwYvi9073Fo4\"\n        },\n        {\n            \"nome\": \"Richard Hermiston\",\n            \"email\": \"Ashlee.Emard@example.net\",\n            \"password\": \"FdPjdfKeDxO\",\n            \"administrador\": \"true\",\n            \"_id\": \"40ixxB3hdBfpWzxN\"\n        },\n        {\n            \"nome\": \"Carol Beahan\",\n            \"email\": \"Citlalli11@hotmail.com\",\n            \"password\": \"o9avJLw6\",\n            \"administrador\": \"true\",\n            \"_id\": \"42Ehl2Ygp72m81U9\"\n        },\n        {\n            \"nome\": \"Lucy Steuber\",\n            \"email\": \"Theodore.Rohan59@example.com\",\n            \"password\": \"hVybqYUX\",\n            \"administrador\": \"false\",\n            \"_id\": \"4daFrPv7pIn7s7Di\"\n        },\n        {\n            \"nome\": \"Gwen Wintheiser\",\n            \"email\": \"Clovis_Gerlach@example.net\",\n            \"password\": \"0gPi_lsx\",\n            \"administrador\": \"false\",\n            \"_id\": \"4yvWAV5vnQSC4Doz\"\n        },\n        {\n            \"nome\": \"May Graham\",\n            \"email\": \"Rosanna23@example.net\",\n            \"password\": \"9sFaG4eA\",\n            \"administrador\": \"false\",\n            \"_id\": \"51JSeuKCQ62UA9J0\"\n        },\n        {\n            \"nome\": \"Ms. Shane Baumbach\",\n            \"email\": \"Jaden.Baumbach@example.org\",\n            \"password\": \"Y7Cqcrq0KGM\",\n            \"administrador\": \"true\",\n            \"_id\": \"7McRYSYmH7Y0vNC4\"\n        },\n        {\n            \"nome\": \"Elsie Collier\",\n            \"email\": \"Mafalda.Larson@example.com\",\n            \"password\": \"wjb2C7qh\",\n            \"administrador\": \"false\",\n            \"_id\": \"7cZQq0WsKHgVNfaK\"\n        },\n        {\n            \"nome\": \"Gina DuBuque\",\n            \"email\": \"Foster_Gleichner@example.org\",\n            \"password\": \"yGPyXQ57vUF\",\n            \"administrador\": \"false\",\n            \"_id\": \"7d0JTmvjZxxQkHh8\"\n        },\n        {\n            \"nome\": \"Miss Shelly Upton\",\n            \"email\": \"Deven13@example.net\",\n            \"password\": \"5Bk96s2j\",\n            \"administrador\": \"false\",\n            \"_id\": \"89duEPuj6mmqMYUU\"\n        },\n        {\n            \"nome\": \"Gretchen Walter\",\n            \"email\": \"Kiarra.Streich@example.com\",\n            \"password\": \"9m_ajUqL\",\n            \"administrador\": \"false\",\n            \"_id\": \"8DX91qsqkWeo93jl\"\n        },\n        {\n            \"nome\": \"Van Littel\",\n            \"email\": \"Annabel_Feest@example.org\",\n            \"password\": \"9sFaG4eA\",\n            \"administrador\": \"false\",\n            \"_id\": \"940V8NbpbdGlyQKM\"\n        },\n        {\n            \"nome\": \"Stewart Koelpin\",\n            \"email\": \"Paolo.Stoltenberg@example.com\",\n            \"password\": \"hVybqYUX\",\n            \"administrador\": \"false\",\n            \"_id\": \"A5iZylAiKXtdXVU5\"\n        },\n        {\n            \"nome\": \"Todd Yundt\",\n            \"email\": \"Aimee.Cronin14@example.org\",\n            \"password\": \"r17LZNiJ\",\n            \"administrador\": \"true\",\n            \"_id\": \"A8iKK6YCwg0xFbOh\"\n        },\n        {\n            \"nome\": \"Kerry Labadie Sr.\",\n            \"email\": \"Ettie_Hettinger@example.net\",\n            \"password\": \"9sFaG4eA\",\n            \"administrador\": \"false\",\n            \"_id\": \"ARgEHncVYXzamGOW\"\n        },\n        {\n            \"nome\": \"Shannon Towne\",\n            \"email\": \"Kelley_Pfannerstill@example.org\",\n            \"password\": \"co_XyDjYAT_\",\n            \"administrador\": \"false\",\n            \"_id\": \"AyoCxlWwQoH66WpK\"\n        },\n        {\n            \"nome\": \"Myra Feil\",\n            \"email\": \"Bethany49@example.net\",\n            \"password\": \"9sFaG4eA\",\n            \"administrador\": \"false\",\n            \"_id\": \"BDwCdVUkR1kG1j1z\"\n        },\n        {\n            \"nome\": \"Katherine Quigley\",\n            \"email\": \"Camron.Lueilwitz61@example.org\",\n            \"password\": \"9m_ajUqL\",\n            \"administrador\": \"false\",\n            \"_id\": \"BbIV560J88dWRuXa\"\n        },\n        {\n            \"nome\": \"Roy Koelpin\",\n            \"email\": \"Aurelia_Daniel@example.org\",\n            \"password\": \"9m_ajUqL\",\n            \"administrador\": \"false\",\n            \"_id\": \"CNkdgTgoybvcvX0I\"\n        },\n        {\n            \"nome\": \"Ross McCullough\",\n            \"email\": \"Conor.Kuphal@example.org\",\n            \"password\": \"hVybqYUX\",\n            \"administrador\": \"false\",\n            \"_id\": \"CwnVxOKvg5c3aDiN\"\n        },\n        {\n            \"nome\": \"Joanne Hayes\",\n            \"email\": \"Gay_Muller@example.com\",\n            \"password\": \"snvvlpfJ\",\n            \"administrador\": \"false\",\n            \"_id\": \"D2EsT5Q1cMWO7cqs\"\n        },\n        {\n            \"nome\": \"Kendra Daniel\",\n            \"email\": \"Dangelo37@example.org\",\n            \"password\": \"kUAf86Ug\",\n            \"administrador\": \"false\",\n            \"_id\": \"Dd1kgNFGHJClBIo0\"\n        },\n        {\n            \"nome\": \"Nora Kreiger\",\n            \"email\": \"Porter.Ratke30@gmail.com\",\n            \"password\": \"51RAcTFd\",\n            \"administrador\": \"true\",\n            \"_id\": \"EWJfLvJscJUNdzUn\"\n        },\n        {\n            \"nome\": \"Leroy Hahn\",\n            \"email\": \"Madonna_Ruecker64@example.com\",\n            \"password\": \"f_xvkBJfZvw\",\n            \"administrador\": \"true\",\n            \"_id\": \"EgVubt8xQIVye6ZR\"\n        },\n        {\n            \"nome\": \"Jerome Ferry\",\n            \"email\": \"Destin63@hotmail.com\",\n            \"password\": \"7ge1EDji\",\n            \"administrador\": \"false\",\n            \"_id\": \"EiJI9umFdHN0axqe\"\n        },\n        {\n            \"nome\": \"Betty Jacobi\",\n            \"email\": \"Emilio.Davis@hotmail.com\",\n            \"password\": \"NC9JuVpL\",\n            \"administrador\": \"true\",\n            \"_id\": \"ElNP8owSh8tfw7Ze\"\n        },\n        {\n            \"nome\": \"Bertha O'Keefe\",\n            \"email\": \"Mae.Lubowitz38@example.org\",\n            \"password\": \"ywTbjjeu\",\n            \"administrador\": \"false\",\n            \"_id\": \"EmCIrgwo9S5sTbTm\"\n        },\n        {\n            \"nome\": \"Dominic Murazik DDS\",\n            \"email\": \"Destiney_Bogisich68@example.org\",\n            \"password\": \"WRUs\",\n            \"administrador\": \"false\",\n            \"_id\": \"EmhDzSt08Jy4hDwY\"\n        },\n        {\n            \"nome\": \"Miss Jessica Toy\",\n            \"email\": \"Rodolfo.Hudson84@example.com\",\n            \"password\": \"9sFaG4eA\",\n            \"administrador\": \"false\",\n            \"_id\": \"ErM5utPn24OOYJJY\"\n        },\n        {\n            \"nome\": \"Gretchen Kuphal\",\n            \"email\": \"Myriam_Nienow4@example.org\",\n            \"password\": \"ek8Hrqgp\",\n            \"administrador\": \"false\",\n            \"_id\": \"F2VwOo6MVqKqm3gT\"\n        },\n        {\n            \"nome\": \"Don Auer DDS\",\n            \"email\": \"Michaela.Stiedemann88@example.org\",\n            \"password\": \"STgWPwJh\",\n            \"administrador\": \"false\",\n            \"_id\": \"FticRElbZNvu9qxX\"\n        },\n        {\n            \"nome\": \"Jana Von\",\n            \"email\": \"Bryce41@example.net\",\n            \"password\": \"9m_ajUqL\",\n            \"administrador\": \"false\",\n            \"_id\": \"FvNKQ7WP52VG4F1S\"\n        },\n        {\n            \"nome\": \"Marguerite Mante\",\n            \"email\": \"Darrell_Paucek@example.org\",\n            \"password\": \"n68Vvshy\",\n            \"administrador\": \"false\",\n            \"_id\": \"G5BPA25DXT4M6wPA\"\n        },\n        {\n            \"nome\": \"Marcos Dibbert\",\n            \"email\": \"Keagan77@example.org\",\n            \"password\": \"hVybqYUX\",\n            \"administrador\": \"false\",\n            \"_id\": \"HPWoiBO1VtpzbnNF\"\n        },\n        {\n            \"nome\": \"Jorge Frami\",\n            \"email\": \"Keegan91@example.net\",\n            \"password\": \"45SNNWcA\",\n            \"administrador\": \"false\",\n            \"_id\": \"IW0Wf4IdWMHkHn5N\"\n        },\n        {\n            \"nome\": \"Mrs. Ramiro Treutel\",\n            \"email\": \"Mireille39@example.org\",\n            \"password\": \"ejuR\",\n            \"administrador\": \"true\",\n            \"_id\": \"IZh08xjHxuzxwYkX\"\n        },\n        {\n            \"nome\": \"Martha Corwin\",\n            \"email\": \"Celestine76@example.net\",\n            \"password\": \"9sFaG4eA\",\n            \"administrador\": \"false\",\n            \"_id\": \"Iavfh3TfVNoBuRbN\"\n        },\n        {\n            \"nome\": \"Miss Todd Lebsack\",\n            \"email\": \"Regan.Kuhlman@example.net\",\n            \"password\": \"qtc7_FZ_\",\n            \"administrador\": \"false\",\n            \"_id\": \"Ii4I9IQRvToupvdZ\"\n        },\n        {\n            \"nome\": \"Tomas Stanton\",\n            \"email\": \"Katheryn32@example.org\",\n            \"password\": \"9sFaG4eA\",\n            \"administrador\": \"false\",\n            \"_id\": \"ItV3rGlyTLSQPlwE\"\n        },\n        {\n            \"nome\": \"Erma Brown\",\n            \"email\": \"Carlos22@example.com\",\n            \"password\": \"67ih9F_4X2Q\",\n            \"administrador\": \"false\",\n            \"_id\": \"J5wsESx1xp7asmrY\"\n        },\n        {\n            \"nome\": \"Dr. Lorenzo Ruecker\",\n            \"email\": \"Cleora_Muller51@example.com\",\n            \"password\": \"9sFaG4eA\",\n            \"administrador\": \"false\",\n            \"_id\": \"JLbHzzrPmhHPCZ68\"\n        },\n        {\n            \"nome\": \"Rufus Ullrich\",\n            \"email\": \"Elisa31@example.com\",\n            \"password\": \"9sFaG4eA\",\n            \"administrador\": \"false\",\n            \"_id\": \"JjdR4g7P1ntH68zR\"\n        },\n        {\n            \"nome\": \"Danielle Crona III\",\n            \"email\": \"Clint80@example.net\",\n            \"password\": \"9sFaG4eA\",\n            \"administrador\": \"false\",\n            \"_id\": \"KwukliTj9FMROMyt\"\n        },\n        {\n            \"nome\": \"Julius Waelchi\",\n            \"email\": \"Janae.Doyle20@gmail.com\",\n            \"password\": \"ABP9PAWF\",\n            \"administrador\": \"true\",\n            \"_id\": \"L0MpgoPYzQbHFmGA\"\n        },\n        {\n            \"nome\": \"Wendy Schowalter\",\n            \"email\": \"Collin.Weber@example.org\",\n            \"password\": \"p5rGqiRj\",\n            \"administrador\": \"false\",\n            \"_id\": \"L3sNwUw4j9nFNWsK\"\n        },\n        {\n            \"nome\": \"Mr. Alfred Champlin\",\n            \"email\": \"Oceane54@example.net\",\n            \"password\": \"9sFaG4eA\",\n            \"administrador\": \"false\",\n            \"_id\": \"L8hfdQskRzJxNl3r\"\n        },\n        {\n            \"nome\": \"Naomi Reinger\",\n            \"email\": \"Frances_Kassulke@example.com\",\n            \"password\": \"9m_ajUqL\",\n            \"administrador\": \"false\",\n            \"_id\": \"LUuoQ1bS9yj6OOX5\"\n        },\n        {\n            \"nome\": \"Shawn Murazik\",\n            \"email\": \"Ellis57@gmail.com\",\n            \"password\": \"FsnHPAoH\",\n            \"administrador\": \"false\",\n            \"_id\": \"Lrm3YWXorg7YByEk\"\n        },\n        {\n            \"nome\": \"Samantha Schuster\",\n            \"email\": \"Sasha.Simonis@example.org\",\n            \"password\": \"kRQDTd2t\",\n            \"administrador\": \"false\",\n            \"_id\": \"M806pqbu0GJls7UL\"\n        },\n        {\n            \"nome\": \"Pablo Mertz\",\n            \"email\": \"Asia8@example.net\",\n            \"password\": \"hVybqYUX\",\n            \"administrador\": \"false\",\n            \"_id\": \"MUk5eWSSq6hkt4L5\"\n        },\n        {\n            \"nome\": \"Lucy Walker\",\n            \"email\": \"Carmen.Casper@example.net\",\n            \"password\": \"hpXS\",\n            \"administrador\": \"false\",\n            \"_id\": \"MnCKC5AZcP2l3o9o\"\n        },\n        {\n            \"nome\": \"Peter Ledner V\",\n            \"email\": \"Kailyn_Hayes94@example.org\",\n            \"password\": \"DznKt0UyMoV\",\n            \"administrador\": \"true\",\n            \"_id\": \"NmAKimrCoBTTeO1n\"\n        },\n        {\n            \"nome\": \"Shirley Dach\",\n            \"email\": \"Jacynthe_Stiedemann78@example.org\",\n            \"password\": \"P8YXbSLi\",\n            \"administrador\": \"false\",\n            \"_id\": \"NpBGlOC7zoBrlvWL\"\n        },\n        {\n            \"nome\": \"Francis Dooley\",\n            \"email\": \"Cameron.Abbott@example.org\",\n            \"password\": \"MVPHoJux\",\n            \"administrador\": \"false\",\n            \"_id\": \"O12xF9WXMPi8in0x\"\n        },\n        {\n            \"nome\": \"Eula Terry\",\n            \"email\": \"Ena_Schamberger38@example.com\",\n            \"password\": \"hVybqYUX\",\n            \"administrador\": \"false\",\n            \"_id\": \"OQ3lEXWFZTOeC1Zs\"\n        },\n        {\n            \"nome\": \"Mrs. Geraldine Crist\",\n            \"email\": \"Jammie_Wilderman@hotmail.com\",\n            \"password\": \"7emLc7sF\",\n            \"administrador\": \"true\",\n            \"_id\": \"OtqgEb5Uy4uGTVjW\"\n        },\n        {\n            \"nome\": \"Dr. Geneva Heathcote\",\n            \"email\": \"Andre_Gusikowski@hotmail.com\",\n            \"password\": \"RAn_wn4e\",\n            \"administrador\": \"true\",\n            \"_id\": \"PIbftB1uIW78rQxt\"\n        },\n        {\n            \"nome\": \"Essie Lemke MD\",\n            \"email\": \"Brionna_Vandervort93@example.com\",\n            \"password\": \"9m_ajUqL\",\n            \"administrador\": \"false\",\n            \"_id\": \"PUU4asgb4bkr51As\"\n        },\n        {\n            \"nome\": \"Hugh Gusikowski\",\n            \"email\": \"Trent_Hansen@example.net\",\n            \"password\": \"9sFaG4eA\",\n            \"administrador\": \"false\",\n            \"_id\": \"Pas2ORmEuadj4KBY\"\n        },\n        {\n            \"nome\": \"Dr. Gwen DuBuque\",\n            \"email\": \"Veda94@example.org\",\n            \"password\": \"9m_ajUqL\",\n            \"administrador\": \"false\",\n            \"_id\": \"QU5kj2p9fyBnXyQ9\"\n        },\n        {\n            \"nome\": \"Jamie Erdman\",\n            \"email\": \"Juliet80@example.net\",\n            \"password\": \"egw7Xh3d\",\n            \"administrador\": \"true\",\n            \"_id\": \"U2Pvj1ZC0Aj9Pox3\"\n        },\n        {\n            \"nome\": \"Muriel Schaefer\",\n            \"email\": \"Ashleigh_Mann81@example.com\",\n            \"password\": \"wgxn8EyW\",\n            \"administrador\": \"false\",\n            \"_id\": \"U5nMolVHuFBCvMZi\"\n        },\n        {\n            \"nome\": \"Bennie Gutkowski\",\n            \"email\": \"Mya_Borer17@gmail.com\",\n            \"password\": \"gaENjcoe\",\n            \"administrador\": \"false\",\n            \"_id\": \"UWtD37vS3SxHbkqk\"\n        },\n        {\n            \"nome\": \"Miss Barry Huels\",\n            \"email\": \"Vicenta.Bruen@example.net\",\n            \"password\": \"9m_ajUqL\",\n            \"administrador\": \"false\",\n            \"_id\": \"UZM54e0Oj1gB3ggF\"\n        },\n        {\n            \"nome\": \"Ms. Tina Little\",\n            \"email\": \"Maeve_Kuhlman3@example.net\",\n            \"password\": \"9sFaG4eA\",\n            \"administrador\": \"false\",\n            \"_id\": \"UrdK3Or0HqgM3jJd\"\n        },\n        {\n            \"nome\": \"Mrs. Adam Berge\",\n            \"email\": \"Carter_Becker@gmail.com\",\n            \"password\": \"UdYcD5VP\",\n            \"administrador\": \"true\",\n            \"_id\": \"VAUneKQmU9HlMZhP\"\n        },\n        {\n            \"nome\": \"Lewis Gerhold\",\n            \"email\": \"Lucius_Runolfsson@hotmail.com\",\n            \"password\": \"DyT4Qn_b\",\n            \"administrador\": \"true\",\n            \"_id\": \"VGtZNecfNFXkbpsR\"\n        },\n        {\n            \"nome\": \"Rene Cassin\",\n            \"email\": \"Ronny.Waters96@example.com\",\n            \"password\": \"hVybqYUX\",\n            \"administrador\": \"false\",\n            \"_id\": \"W8dCohjvSgDiu3gX\"\n        },\n        {\n            \"nome\": \"Wendy Abshire\",\n            \"email\": \"Kelley10@example.com\",\n            \"password\": \"5uJy9omJ\",\n            \"administrador\": \"false\",\n            \"_id\": \"X8cF83k3Y9L13MpC\"\n        },\n        {\n            \"nome\": \"Dr. Wendell White\",\n            \"email\": \"Ted_Carroll@example.com\",\n            \"password\": \"zQfnIncU\",\n            \"administrador\": \"false\",\n            \"_id\": \"Y37V8472ScQkwqqm\"\n        },\n        {\n            \"nome\": \"Mr. Willie Rosenbaum\",\n            \"email\": \"Anibal.Shanahan91@example.org\",\n            \"password\": \"H8Bg\",\n            \"administrador\": \"true\",\n            \"_id\": \"Y7zLXi8me4u7OaTm\"\n        },\n        {\n            \"nome\": \"Ryan Baumbach\",\n            \"email\": \"Margarete.Shanahan80@example.net\",\n            \"password\": \"7sjXLAsN\",\n            \"administrador\": \"false\",\n            \"_id\": \"Z56ww6cIYB6I4jQk\"\n        },\n        {\n            \"nome\": \"Willis DuBuque\",\n            \"email\": \"Annalise_Volkman@example.org\",\n            \"password\": \"9m_ajUqL\",\n            \"administrador\": \"false\",\n            \"_id\": \"ZLFTYCdwKXlfHaj7\"\n        },\n        {\n            \"nome\": \"Darrin Conn\",\n            \"email\": \"Maurice_Walker@example.com\",\n            \"password\": \"9m_ajUqL\",\n            \"administrador\": \"false\",\n            \"_id\": \"aHuLo409Ep0XK7Yk\"\n        },\n        {\n            \"nome\": \"Andy Effertz\",\n            \"email\": \"Rubie58@example.org\",\n            \"password\": \"9sFaG4eA\",\n            \"administrador\": \"false\",\n            \"_id\": \"auSfW3mG1yZ1bTSl\"\n        },\n        {\n            \"nome\": \"Miss Kelli Reinger\",\n            \"email\": \"Mike39@example.org\",\n            \"password\": \"2fbjga_z5p2\",\n            \"administrador\": \"false\",\n            \"_id\": \"azvjxdGx8wmEzqGM\"\n        },\n        {\n            \"nome\": \"Dr. Morris McCullough\",\n            \"email\": \"Donny.Wolff@hotmail.com\",\n            \"password\": \"Jepz_HDq\",\n            \"administrador\": \"false\",\n            \"_id\": \"bIPUKCDT1Xy3x7bN\"\n        },\n        {\n            \"nome\": \"Janis Hegmann\",\n            \"email\": \"Alexzander_Yundt@example.com\",\n            \"password\": \"9m_ajUqL\",\n            \"administrador\": \"false\",\n            \"_id\": \"bNaM2coTIHlIHovQ\"\n        },\n        {\n            \"nome\": \"Caleb McClure\",\n            \"email\": \"Brooks79@example.net\",\n            \"password\": \"lJo9CjKK\",\n            \"administrador\": \"true\",\n            \"_id\": \"bRBiWI9On3cLwFli\"\n        },\n        {\n            \"nome\": \"Mercedes Ortiz\",\n            \"email\": \"Gilbert_Marvin@example.org\",\n            \"password\": \"7AHV\",\n            \"administrador\": \"true\",\n            \"_id\": \"bXQp6fDQHNxDN5IY\"\n        },\n        {\n            \"nome\": \"Mandy Dietrich\",\n            \"email\": \"Freddie.Deckow70@example.com\",\n            \"password\": \"zbeV\",\n            \"administrador\": \"false\",\n            \"_id\": \"cI1O9MCjTgUeeJyG\"\n        },\n        {\n            \"nome\": \"Henry Hahn\",\n            \"email\": \"Hellen.Klocko24@example.com\",\n            \"password\": \"hVybqYUX\",\n            \"administrador\": \"false\",\n            \"_id\": \"cJgx6uPgrCQQaWwi\"\n        },\n        {\n            \"nome\": \"Troy Boyle\",\n            \"email\": \"Zion.Donnelly@hotmail.com\",\n            \"password\": \"zpkfbXS_\",\n            \"administrador\": \"false\",\n            \"_id\": \"cSHX0ssXbs7aZEAy\"\n        },\n        {\n            \"nome\": \"Tony Renner\",\n            \"email\": \"Neva.Hagenes72@example.com\",\n            \"password\": \"9m_ajUqL\",\n            \"administrador\": \"false\",\n            \"_id\": \"d5Mj8cCd3vKbA0r4\"\n        },\n        {\n            \"nome\": \"Rebecca Crist\",\n            \"email\": \"Janessa59@example.org\",\n            \"password\": \"uiLz3hPI\",\n            \"administrador\": \"true\",\n            \"_id\": \"dDxdsgOi2AOHPvaB\"\n        },\n        {\n            \"nome\": \"Christopher Treutel V\",\n            \"email\": \"Desiree.Simonis@example.net\",\n            \"password\": \"hVybqYUX\",\n            \"administrador\": \"false\",\n            \"_id\": \"dLqMLPNZ9Vg6by84\"\n        },\n        {\n            \"nome\": \"Ben Runte\",\n            \"email\": \"Gilbert.Schinner@example.com\",\n            \"password\": \"hVybqYUX\",\n            \"administrador\": \"false\",\n            \"_id\": \"dZLoo7uTf9tMETY9\"\n        },\n        {\n            \"nome\": \"Lorraine Kertzmann\",\n            \"email\": \"Myra_Swaniawski99@example.com\",\n            \"password\": \"hVybqYUX\",\n            \"administrador\": \"false\",\n            \"_id\": \"eE2iDC6W28hu85q6\"\n        },\n        {\n            \"nome\": \"Maureen Lowe\",\n            \"email\": \"Eliezer_Kuvalis@example.com\",\n            \"password\": \"hVybqYUX\",\n            \"administrador\": \"false\",\n            \"_id\": \"eM5tiQzVg1sfFSrY\"\n        },\n        {\n            \"nome\": \"Dr. Alvin Durgan\",\n            \"email\": \"Claude25@example.net\",\n            \"password\": \"9m_ajUqL\",\n            \"administrador\": \"false\",\n            \"_id\": \"ep1wcDupPjoolpHZ\"\n        },\n        {\n            \"nome\": \"Luther Dickens\",\n            \"email\": \"Soledad44@hotmail.com\",\n            \"password\": \"YBaf1i0h\",\n            \"administrador\": \"false\",\n            \"_id\": \"fYcP0J1WDH99e8uR\"\n        },\n        {\n            \"nome\": \"Muriel Cummings\",\n            \"email\": \"Kaleb_Harvey79@example.net\",\n            \"password\": \"9sFaG4eA\",\n            \"administrador\": \"false\",\n            \"_id\": \"g8XBm2rRep2kS45e\"\n        },\n        {\n            \"nome\": \"Brett Deckow\",\n            \"email\": \"Zola_Padberg@example.org\",\n            \"password\": \"NEKbS5sXBup\",\n            \"administrador\": \"true\",\n            \"_id\": \"gONF8djvApD8vCZ4\"\n        },\n        {\n            \"nome\": \"Dr. Sylvia Wiegand\",\n            \"email\": \"Jaydon82@example.net\",\n            \"password\": \"MCvgKoRd\",\n            \"administrador\": \"false\",\n            \"_id\": \"gaqbhSiJAmeUnBbF\"\n        },\n        {\n            \"nome\": \"Gregory Rolfson IV\",\n            \"email\": \"Andrew69@example.org\",\n            \"password\": \"hVybqYUX\",\n            \"administrador\": \"false\",\n            \"_id\": \"h12YWqDwS7NgAo1A\"\n        },\n        {\n            \"nome\": \"Timmy Smitham\",\n            \"email\": \"Ubaldo49@example.org\",\n            \"password\": \"9sFaG4eA\",\n            \"administrador\": \"false\",\n            \"_id\": \"hKpHYfb8PN3D1UQ5\"\n        },\n        {\n            \"nome\": \"Kelvin Runte\",\n            \"email\": \"Henderson71@example.org\",\n            \"password\": \"HRJoNaRn\",\n            \"administrador\": \"false\",\n            \"_id\": \"hLURibhhdhboXIhJ\"\n        },\n        {\n            \"nome\": \"Orville Crona\",\n            \"email\": \"Emory.Gaylord4@example.net\",\n            \"password\": \"hVybqYUX\",\n            \"administrador\": \"false\",\n            \"_id\": \"hY9hmPWRztECCXGB\"\n        },\n        {\n            \"nome\": \"Lamar Haley\",\n            \"email\": \"Javier.Hills82@example.net\",\n            \"password\": \"LDQq0Ccz\",\n            \"administrador\": \"false\",\n            \"_id\": \"hZAOy51e9FWhwboF\"\n        },\n        {\n            \"nome\": \"Alma McDermott\",\n            \"email\": \"Colt.Jacobs62@example.com\",\n            \"password\": \"bxZaydZX\",\n            \"administrador\": \"true\",\n            \"_id\": \"hwI7ESsiMi0EndUD\"\n        },\n        {\n            \"nome\": \"Antoinette Crist\",\n            \"email\": \"Anne_Rutherford46@example.net\",\n            \"password\": \"SmkfKZvs\",\n            \"administrador\": \"false\",\n            \"_id\": \"jSd5aG5y3PKCJsOb\"\n        },\n        {\n            \"nome\": \"Jeanne Rowe\",\n            \"email\": \"Sunny85@hotmail.com\",\n            \"password\": \"LnTloNOe\",\n            \"administrador\": \"true\",\n            \"_id\": \"jddITj5Q0mg5nypN\"\n        },\n        {\n            \"nome\": \"Wilfred Leuschke\",\n            \"email\": \"Chelsie.Thiel28@example.net\",\n            \"password\": \"hVybqYUX\",\n            \"administrador\": \"false\",\n            \"_id\": \"jmRnSq0aJ73LqjTJ\"\n        },\n        {\n            \"nome\": \"Ramon Lueilwitz\",\n            \"email\": \"Brook.Homenick16@example.com\",\n            \"password\": \"9gLZfUeL\",\n            \"administrador\": \"false\",\n            \"_id\": \"kn8tJhVeZW9OmnuZ\"\n        },\n        {\n            \"nome\": \"Moses Sawayn\",\n            \"email\": \"Lambert.Flatley@gmail.com\",\n            \"password\": \"NMSDKonf\",\n            \"administrador\": \"true\",\n            \"_id\": \"lqQ6gDcheBGDORsl\"\n        },\n        {\n            \"nome\": \"Debra Greenholt\",\n            \"email\": \"Sarai_Huels@example.org\",\n            \"password\": \"9m_ajUqL\",\n            \"administrador\": \"false\",\n            \"_id\": \"mIoSLuQ4SqK7Szde\"\n        },\n        {\n            \"nome\": \"Irving Wolf\",\n            \"email\": \"Hoyt9@example.net\",\n            \"password\": \"qYB42nYt\",\n            \"administrador\": \"false\",\n            \"_id\": \"meY8ltBbMFOEj6Sq\"\n        },\n        {\n            \"nome\": \"Whitney Deckow\",\n            \"email\": \"Sigmund_Hills86@example.org\",\n            \"password\": \"l49pNhB4\",\n            \"administrador\": \"false\",\n            \"_id\": \"muj5pt7GHqT1VVU5\"\n        },\n        {\n            \"nome\": \"Wilbur Morar IV\",\n            \"email\": \"Rupert43@example.org\",\n            \"password\": \"hVybqYUX\",\n            \"administrador\": \"false\",\n            \"_id\": \"nBkMzXL8zluztfxr\"\n        },\n        {\n            \"nome\": \"Kristopher Sipes\",\n            \"email\": \"Alexandrine83@example.org\",\n            \"password\": \"MRhCSm9F\",\n            \"administrador\": \"true\",\n            \"_id\": \"oDxXTCLfV7jdMPJY\"\n        },\n        {\n            \"nome\": \"Mitchell Zulauf\",\n            \"email\": \"Virginia.Breitenberg@example.net\",\n            \"password\": \"ga3V31DC\",\n            \"administrador\": \"false\",\n            \"_id\": \"ozxVzojlGW9HZGC0\"\n        },\n        {\n            \"nome\": \"Krystal Bartell\",\n            \"email\": \"Isabel67@example.com\",\n            \"password\": \"eXGSqIrW\",\n            \"administrador\": \"true\",\n            \"_id\": \"p4af5i0jthlI4QWN\"\n        },\n        {\n            \"nome\": \"Aaron Tillman\",\n            \"email\": \"Leonel50@gmail.com\",\n            \"password\": \"FcjIKXr4\",\n            \"administrador\": \"false\",\n            \"_id\": \"qC1Bmhu34JytkTO7\"\n        },\n        {\n            \"nome\": \"Mr. Spencer Schultz\",\n            \"email\": \"Cloyd_Pagac@example.com\",\n            \"password\": \"9sFaG4eA\",\n            \"administrador\": \"false\",\n            \"_id\": \"r0LY83ymAE6SDItX\"\n        },\n        {\n            \"nome\": \"Gerardo Kub\",\n            \"email\": \"Fritz95@example.com\",\n            \"password\": \"9m_ajUqL\",\n            \"administrador\": \"false\",\n            \"_id\": \"rWCL3g4MX7InCDAK\"\n        },\n        {\n            \"nome\": \"Nora Haag\",\n            \"email\": \"Edwin_Simonis@example.org\",\n            \"password\": \"5bzj245Z\",\n            \"administrador\": \"false\",\n            \"_id\": \"rd5fXmpp4NqlrTqZ\"\n        },\n        {\n            \"nome\": \"Christian Auer\",\n            \"email\": \"Carmela.Waters77@gmail.com\",\n            \"password\": \"3SGiWMIM\",\n            \"administrador\": \"true\",\n            \"_id\": \"rqX30qmva5zsut2O\"\n        },\n        {\n            \"nome\": \"Beth Kerluke\",\n            \"email\": \"Emelie_Feeney22@example.org\",\n            \"password\": \"hVybqYUX\",\n            \"administrador\": \"false\",\n            \"_id\": \"sPyjtNDv8MiQHiHv\"\n        },\n        {\n            \"nome\": \"Alfredo Paucek\",\n            \"email\": \"Russell96@example.net\",\n            \"password\": \"UFdiSz8x\",\n            \"administrador\": \"true\",\n            \"_id\": \"tYf38AhjpBDS9VGH\"\n        },\n        {\n            \"nome\": \"Dr. Claude Mayer\",\n            \"email\": \"Lamar.Bergstrom15@example.org\",\n            \"password\": \"kxcMFXN2\",\n            \"administrador\": \"false\",\n            \"_id\": \"tvWcBtqGzw62k4fe\"\n        },\n        {\n            \"nome\": \"Mr. Cassandra Tremblay\",\n            \"email\": \"Floy.Little82@example.net\",\n            \"password\": \"EFMNXThh\",\n            \"administrador\": \"false\",\n            \"_id\": \"uA0ztecKHdAMo3Ru\"\n        },\n        {\n            \"nome\": \"Nadine Tromp\",\n            \"email\": \"Hollis_Schneider@example.com\",\n            \"password\": \"qwH_xviD_IU\",\n            \"administrador\": \"true\",\n            \"_id\": \"uNeOfVzdKOiXPb3n\"\n        },\n        {\n            \"nome\": \"Rose Leannon Sr.\",\n            \"email\": \"Miles19@example.net\",\n            \"password\": \"9sFaG4eA\",\n            \"administrador\": \"false\",\n            \"_id\": \"uWg1Gzgo9rh5DMsI\"\n        },\n        {\n            \"nome\": \"Bradley Pacocha\",\n            \"email\": \"Taylor37@gmail.com\",\n            \"password\": \"J0UhMwMm\",\n            \"administrador\": \"true\",\n            \"_id\": \"ulcEn6Ny3a3soA03\"\n        },\n        {\n            \"nome\": \"Merle Kilback\",\n            \"email\": \"Maeve_Reichel47@example.com\",\n            \"password\": \"9m_ajUqL\",\n            \"administrador\": \"false\",\n            \"_id\": \"utAy9tyeOZTE633o\"\n        },\n        {\n            \"nome\": \"Maryann Harvey\",\n            \"email\": \"Avery11@example.com\",\n            \"password\": \"_Ow2_lfp\",\n            \"administrador\": \"false\",\n            \"_id\": \"vBb5vZfh59mUEUiJ\"\n        },\n        {\n            \"nome\": \"Grace Emard\",\n            \"email\": \"Keeley_Mitchell11@example.net\",\n            \"password\": \"9m_ajUqL\",\n            \"administrador\": \"false\",\n            \"_id\": \"vDY9nacjsKReZqON\"\n        },\n        {\n            \"nome\": \"Ginger Reinger\",\n            \"email\": \"Gabrielle15@example.com\",\n            \"password\": \"nGBFDggTO4q\",\n            \"administrador\": \"false\",\n            \"_id\": \"vIVPMitSeIDMLbKq\"\n        },\n        {\n            \"nome\": \"Ralph Pfannerstill\",\n            \"email\": \"Kailey46@gmail.com\",\n            \"password\": \"f8uxpJZP\",\n            \"administrador\": \"false\",\n            \"_id\": \"wlBrAcMaiCi1SKRK\"\n        },\n        {\n            \"nome\": \"Darin O'Kon\",\n            \"email\": \"Columbus.Farrell97@example.com\",\n            \"password\": \"eLJijot_\",\n            \"administrador\": \"true\",\n            \"_id\": \"x9QYMHkteoVL8D16\"\n        },\n        {\n            \"nome\": \"Kristine Nienow\",\n            \"email\": \"Carey.Schamberger25@example.net\",\n            \"password\": \"OzZYtss9\",\n            \"administrador\": \"true\",\n            \"_id\": \"xPEyXQS8gTe3U0lk\"\n        },\n        {\n            \"nome\": \"Winston Walsh Jr.\",\n            \"email\": \"Reagan7@example.org\",\n            \"password\": \"9sFaG4eA\",\n            \"administrador\": \"false\",\n            \"_id\": \"xRkKba2TdXsxIA9D\"\n        },\n        {\n            \"nome\": \"Janis Yost\",\n            \"email\": \"Dudley_Daugherty@example.net\",\n            \"password\": \"7mmXpBxF\",\n            \"administrador\": \"false\",\n            \"_id\": \"xXogt5q2kmJG4o2I\"\n        },\n        {\n            \"nome\": \"Ebony Stehr\",\n            \"email\": \"Abdullah.Gottlieb@example.org\",\n            \"password\": \"Oqr6AQGD\",\n            \"administrador\": \"false\",\n            \"_id\": \"xaoxJ5clCJjxvw0Y\"\n        },\n        {\n            \"nome\": \"Brett Wiegand\",\n            \"email\": \"Daija_Botsford@example.org\",\n            \"password\": \"hVybqYUX\",\n            \"administrador\": \"false\",\n            \"_id\": \"xb6bmmU8DUqbP94N\"\n        },\n        {\n            \"nome\": \"Chad Greenfelder\",\n            \"email\": \"Oceane16@gmail.com\",\n            \"password\": \"5PUNzTK8\",\n            \"administrador\": \"false\",\n            \"_id\": \"y1tLYJryHd5fpGiL\"\n        },\n        {\n            \"nome\": \"Erick Sawayn\",\n            \"email\": \"Javonte41@example.org\",\n            \"password\": \"9m_ajUqL\",\n            \"administrador\": \"false\",\n            \"_id\": \"y6ok5LnKawbBQJFe\"\n        },\n        {\n            \"nome\": \"Vera Prosacco\",\n            \"email\": \"Kolby_Waelchi34@example.net\",\n            \"password\": \"7dOUOGiv\",\n            \"administrador\": \"false\",\n            \"_id\": \"yNtgXSRcrOUkXdDw\"\n        },\n        {\n            \"nome\": \"Everett Abbott MD\",\n            \"email\": \"Emie31@example.org\",\n            \"password\": \"QsEiY9TT\",\n            \"administrador\": \"false\",\n            \"_id\": \"ySpUAPGBDyHrqMHl\"\n        },\n        {\n            \"nome\": \"Nathaniel Davis\",\n            \"email\": \"Emanuel85@example.net\",\n            \"password\": \"CpBKnTfq\",\n            \"administrador\": \"true\",\n            \"_id\": \"zWHYq9LEqrvFXAci\"\n        },\n        {\n            \"nome\": \"Sherman Ankunding\",\n            \"email\": \"Leonie41@hotmail.com\",\n            \"password\": \"oMmJk6Lb\",\n            \"administrador\": \"false\",\n            \"_id\": \"zfq0T0QXGOlIys4Q\"\n        }\n    ]\n}"
								}
							]
						}
					]
				},
				{
					"name": "{_id}",
					"item": [
						{
							"name": "Buscar usuário por ID",
							"item": [
								{
									"name": "CT_014: Buscar um usuário válido",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Checks the response body\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.nome).to.equal(pm.collectionVariables.get('randomName'));\r",
													"    pm.expect(jsonData.email).to.equal(pm.collectionVariables.get('randomEmail'));\r",
													"    pm.expect(jsonData.password).to.equal(pm.collectionVariables.get('validPassword'));\r",
													"    pm.expect(jsonData.administrador).not.null;\r",
													"    pm.expect(jsonData._id).to.equal(pm.collectionVariables.get('newUserId'));\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const name = pm.variables.replaceIn('{{$randomFullName}}');\r",
													"pm.collectionVariables.set(\"randomName\", name);\r",
													"const email = pm.variables.replaceIn('{{$randomExampleEmail}}');\r",
													"pm.collectionVariables.set(\"randomEmail\", email);\r",
													"\r",
													"pm.sendRequest({\r",
													"    url: pm.environment.get('baseUrl') + '/usuarios',\r",
													"    method: 'POST',\r",
													"    header: {\r",
													"        'Accept': 'application/json',\r",
													"        'Content-Type': 'application/json'\r",
													"      },\r",
													"    body: {\r",
													"        mode: 'raw',\r",
													"        raw: JSON.stringify({\r",
													"            \"nome\": pm.collectionVariables.get('randomName'),\r",
													"            \"email\": pm.collectionVariables.get('randomEmail'),\r",
													"            \"password\": pm.collectionVariables.get('validPassword'),\r",
													"            \"administrador\": \"false\"\r",
													"        })\r",
													"    }\r",
													"}, function (err, res) {\r",
													"    pm.collectionVariables.set(\"newUserId\", res.json()._id);\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/usuarios/:_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"usuarios",
												":_id"
											],
											"variable": [
												{
													"key": "_id",
													"value": "{{newUserId}}"
												}
											]
										}
									},
									"response": [
										{
											"name": "Buscar usuário válido",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/usuarios/:_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"usuarios",
														":_id"
													],
													"variable": [
														{
															"key": "_id",
															"value": "{{newUserId}}"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "x-dns-prefetch-control",
													"value": "off"
												},
												{
													"key": "x-frame-options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "strict-transport-security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "x-download-options",
													"value": "noopen"
												},
												{
													"key": "x-content-type-options",
													"value": "nosniff"
												},
												{
													"key": "x-xss-protection",
													"value": "1; mode=block"
												},
												{
													"key": "x-moesif-transaction-id",
													"value": "4c17c3a0-6cc2-4371-9b53-f894a5478269"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "164"
												},
												{
													"key": "Date",
													"value": "Fri, 06 Oct 2023 18:51:15 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"body": "{\n    \"nome\": \"Homer Greenholt IV\",\n    \"email\": \"Velma.Mraz@example.com\",\n    \"password\": \"jIRP6Zlz\",\n    \"administrador\": \"false\",\n    \"_id\": \"z1TYUl6sRuvvwBCn\"\n}"
										}
									]
								},
								{
									"name": "CT_015: Buscar um usuário inexistente",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"Checks response body\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.message).to.eql(\"Usuário não encontrado\");\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/usuarios/:_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"usuarios",
												":_id"
											],
											"variable": [
												{
													"key": "_id",
													"value": "{{$randomPassword}}"
												}
											]
										}
									},
									"response": [
										{
											"name": "Buscar usuário inexistente",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/usuarios/:_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"usuarios",
														":_id"
													],
													"variable": [
														{
															"key": "_id",
															"value": "{{$randomPassword}}"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "x-dns-prefetch-control",
													"value": "off"
												},
												{
													"key": "x-frame-options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "strict-transport-security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "x-download-options",
													"value": "noopen"
												},
												{
													"key": "x-content-type-options",
													"value": "nosniff"
												},
												{
													"key": "x-xss-protection",
													"value": "1; mode=block"
												},
												{
													"key": "x-moesif-transaction-id",
													"value": "a5f3322e-f90f-4156-bc04-3e882177c0df"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "45"
												},
												{
													"key": "Date",
													"value": "Fri, 06 Oct 2023 18:53:34 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"body": "{\n    \"message\": \"Usuário não encontrado\"\n}"
										}
									]
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						},
						{
							"name": "Excluir usuário",
							"item": [
								{
									"name": "CT_016: Deletar usuário válido",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Checks response body\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.message).to.eql(\"Registro excluído com sucesso\");\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/usuarios/:_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"usuarios",
												":_id"
											],
											"variable": [
												{
													"key": "_id",
													"value": "{{newUserId}}"
												}
											]
										}
									},
									"response": [
										{
											"name": "Deletar usuário válido",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/usuarios/:_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"usuarios",
														":_id"
													],
													"variable": [
														{
															"key": "_id",
															"value": "{{newUserId}}"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "x-dns-prefetch-control",
													"value": "off"
												},
												{
													"key": "x-frame-options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "strict-transport-security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "x-download-options",
													"value": "noopen"
												},
												{
													"key": "x-content-type-options",
													"value": "nosniff"
												},
												{
													"key": "x-xss-protection",
													"value": "1; mode=block"
												},
												{
													"key": "x-moesif-transaction-id",
													"value": "68595234-1134-493e-aef2-3e24de2dace9"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "51"
												},
												{
													"key": "Date",
													"value": "Fri, 06 Oct 2023 18:54:42 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"body": "{\n    \"message\": \"Registro excluído com sucesso\"\n}"
										}
									]
								},
								{
									"name": "CT_017: Deletar usuário inexistente",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Checks response body\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.message).to.eql(\"Nenhum registro excluído\");\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/usuarios/:_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"usuarios",
												":_id"
											],
											"variable": [
												{
													"key": "_id",
													"value": "{{$randomPassword}}"
												}
											]
										}
									},
									"response": [
										{
											"name": "Deletar usuário inexistente",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/usuarios/:_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"usuarios",
														":_id"
													],
													"variable": [
														{
															"key": "_id",
															"value": "{{$randomPassword}}"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "x-dns-prefetch-control",
													"value": "off"
												},
												{
													"key": "x-frame-options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "strict-transport-security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "x-download-options",
													"value": "noopen"
												},
												{
													"key": "x-content-type-options",
													"value": "nosniff"
												},
												{
													"key": "x-xss-protection",
													"value": "1; mode=block"
												},
												{
													"key": "x-moesif-transaction-id",
													"value": "20a3f337-5e6b-41e9-ba36-12efb631e012"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "46"
												},
												{
													"key": "Date",
													"value": "Fri, 06 Oct 2023 18:57:50 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"body": "{\n    \"message\": \"Nenhum registro excluído\"\n}"
										}
									]
								},
								{
									"name": "CT_018: Deletar usuário com carrinho ativo",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"pm.sendRequest({\r",
													"    url: pm.environment.get('baseUrl') + '/login',\r",
													"    method: 'POST',\r",
													"    header: {\r",
													"        'Accept': 'application/json',\r",
													"        'Content-Type': 'application/json'\r",
													"    },\r",
													"    body: {\r",
													"        mode: 'raw',\r",
													"        raw: JSON.stringify({\r",
													"            \"email\": pm.collectionVariables.get('randomEmail'),\r",
													"            \"password\": pm.collectionVariables.get('validPassword')\r",
													"        })\r",
													"    }\r",
													"}, function (err, res) {\r",
													"    if (err) {\r",
													"        console.error(err);\r",
													"        return;\r",
													"    }\r",
													"\r",
													"    pm.collectionVariables.set('token', res.json().authorization);\r",
													"\r",
													"    pm.sendRequest({\r",
													"        url: pm.environment.get('baseUrl') + '/carrinhos', \r",
													"        method: 'POST',\r",
													"        header: {\r",
													"            'Accept': 'application/json',\r",
													"            'Content-Type': 'application/json',\r",
													"            'Authorization': pm.collectionVariables.get('token')\r",
													"        },\r",
													"        body: {\r",
													"            mode: 'raw',\r",
													"            raw: JSON.stringify({\r",
													"                \"produtos\": [{\r",
													"                    \"idProduto\": pm.collectionVariables.get('defaultProductId'),\r",
													"                    \"quantidade\": 1\r",
													"                }]\r",
													"            })\r",
													"        }\r",
													"    }, function (err, res) {\r",
													"        if (err) {\r",
													"            console.error(err);\r",
													"            return;\r",
													"        }\r",
													"\r",
													"        console.log(res.json());\r",
													"    });\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"Checks response body\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.message).to.eql(\"Não é permitido excluir usuário com carrinho cadastrado\");\r",
													"    pm.expect(jsonData.idCarrinho).not.null;\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/usuarios/:_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"usuarios",
												":_id"
											],
											"variable": [
												{
													"key": "_id",
													"value": "{{newUserId}}"
												}
											]
										}
									},
									"response": [
										{
											"name": "Deletar usuário com carrinho ativo",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/usuarios/:_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"usuarios",
														":_id"
													],
													"variable": [
														{
															"key": "_id",
															"value": "{{newUserId}}"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "x-dns-prefetch-control",
													"value": "off"
												},
												{
													"key": "x-frame-options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "strict-transport-security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "x-download-options",
													"value": "noopen"
												},
												{
													"key": "x-content-type-options",
													"value": "nosniff"
												},
												{
													"key": "x-xss-protection",
													"value": "1; mode=block"
												},
												{
													"key": "x-moesif-transaction-id",
													"value": "2a67a174-86e9-4901-9b25-c5badccf2d3d"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "117"
												},
												{
													"key": "Date",
													"value": "Fri, 06 Oct 2023 18:59:15 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"body": "{\n    \"message\": \"Não é permitido excluir usuário com carrinho cadastrado\",\n    \"idCarrinho\": \"A6oQqmSAOhobA4zf\"\n}"
										}
									]
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											"const name = pm.variables.replaceIn('{{$randomFullName}}');",
											"pm.collectionVariables.set(\"randomName\", name);",
											"const email = pm.variables.replaceIn('{{$randomExampleEmail}}');",
											"pm.collectionVariables.set(\"randomEmail\", email);",
											"",
											"pm.sendRequest({",
											"    url: pm.environment.get('baseUrl') + '/usuarios',",
											"    method: 'POST',",
											"    header: {",
											"        'Accept': 'application/json',",
											"        'Content-Type': 'application/json'",
											"      },",
											"    body: {",
											"        mode: 'raw',",
											"        raw: JSON.stringify({",
											"            \"nome\": pm.collectionVariables.get('randomName'),",
											"            \"email\": pm.collectionVariables.get('randomEmail'),",
											"            \"password\": pm.collectionVariables.get('validPassword'),",
											"            \"administrador\": \"false\"",
											"        })",
											"    }",
											"}, function (err, res) {",
											"    pm.collectionVariables.set(\"newUserId\", res.json()._id);",
											"});",
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						},
						{
							"name": "Editar usuário",
							"item": [
								{
									"name": "Usuário válido",
									"item": [
										{
											"name": "CT_019: Atualizar usuário válido",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"pm.test(\"Checks response body\", function () {\r",
															"    var jsonData = pm.response.json();\r",
															"    pm.expect(jsonData.message).to.eql(\"Registro alterado com sucesso\");\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"nome\": \"{{$randomFullName}}\",\r\n  \"email\": \"{{$randomExampleEmail}}\",\r\n  \"password\": \"{{validPassword}}\",\r\n  \"administrador\": \"true\"\r\n}\r\n",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/usuarios/:_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"usuarios",
														":_id"
													],
													"variable": [
														{
															"key": "_id",
															"value": "{{newUserId}}"
														}
													]
												}
											},
											"response": [
												{
													"name": "Atualizar usuário válido",
													"originalRequest": {
														"method": "PUT",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\r\n  \"nome\": \"{{$randomFullName}}\",\r\n  \"email\": \"{{$randomExampleEmail}}\",\r\n  \"password\": \"{{validPassword}}\",\r\n  \"administrador\": \"true\"\r\n}\r\n",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/usuarios/:_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"usuarios",
																":_id"
															],
															"variable": [
																{
																	"key": "_id",
																	"value": "{{newUserId}}"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Access-Control-Allow-Origin",
															"value": "*"
														},
														{
															"key": "x-dns-prefetch-control",
															"value": "off"
														},
														{
															"key": "x-frame-options",
															"value": "SAMEORIGIN"
														},
														{
															"key": "strict-transport-security",
															"value": "max-age=15552000; includeSubDomains"
														},
														{
															"key": "x-download-options",
															"value": "noopen"
														},
														{
															"key": "x-content-type-options",
															"value": "nosniff"
														},
														{
															"key": "x-xss-protection",
															"value": "1; mode=block"
														},
														{
															"key": "x-moesif-transaction-id",
															"value": "fea4fd4a-a3f1-4ed3-bfe9-77009545ae48"
														},
														{
															"key": "Content-Type",
															"value": "application/json; charset=utf-8"
														},
														{
															"key": "Content-Length",
															"value": "50"
														},
														{
															"key": "Date",
															"value": "Fri, 06 Oct 2023 19:01:13 GMT"
														},
														{
															"key": "Connection",
															"value": "keep-alive"
														},
														{
															"key": "Keep-Alive",
															"value": "timeout=5"
														}
													],
													"cookie": [],
													"body": "{\n    \"message\": \"Registro alterado com sucesso\"\n}"
												}
											]
										},
										{
											"name": "CT_020: Atualizar usuário válido com nome em branco",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"pm.test(\"Checks response body\", function () {\r",
															"    var jsonData = pm.response.json();\r",
															"    pm.expect(jsonData.nome).to.eql(\"nome não pode ficar em branco\");\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"nome\": \" \",\r\n  \"email\": \"{{$randomExampleEmail}}\",\r\n  \"password\": \"{{validPassword}}\",\r\n  \"administrador\": \"true\"\r\n}\r\n",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/usuarios/:_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"usuarios",
														":_id"
													],
													"variable": [
														{
															"key": "_id",
															"value": "{{newUserId}}"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "CT_021: Atualizar usuário válido com e-mail em branco",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"pm.test(\"Checks response body\", function () {\r",
															"    var jsonData = pm.response.json();\r",
															"    pm.expect(jsonData.email).to.eql(\"email não pode ficar em branco\");\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"nome\": \"{{$randomFullName}}\",\r\n  \"email\": \"\",\r\n  \"password\": \"{{validPassword}}\",\r\n  \"administrador\": \"true\"\r\n}\r\n",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/usuarios/:_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"usuarios",
														":_id"
													],
													"variable": [
														{
															"key": "_id",
															"value": "{{newUserId}}"
														}
													]
												}
											},
											"response": [
												{
													"name": "Atualizar usuário válido com e-mail em branco",
													"originalRequest": {
														"method": "PUT",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\r\n  \"nome\": \"{{$randomFullName}}\",\r\n  \"email\": \"\",\r\n  \"password\": \"{{validPassword}}\",\r\n  \"administrador\": \"true\"\r\n}\r\n",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/usuarios/:_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"usuarios",
																":_id"
															],
															"variable": [
																{
																	"key": "_id",
																	"value": "{{newUserId}}"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Access-Control-Allow-Origin",
															"value": "*"
														},
														{
															"key": "x-dns-prefetch-control",
															"value": "off"
														},
														{
															"key": "x-frame-options",
															"value": "SAMEORIGIN"
														},
														{
															"key": "strict-transport-security",
															"value": "max-age=15552000; includeSubDomains"
														},
														{
															"key": "x-download-options",
															"value": "noopen"
														},
														{
															"key": "x-content-type-options",
															"value": "nosniff"
														},
														{
															"key": "x-xss-protection",
															"value": "1; mode=block"
														},
														{
															"key": "x-moesif-transaction-id",
															"value": "942526f4-d1cf-425e-9799-dace72680f70"
														},
														{
															"key": "Content-Type",
															"value": "application/json; charset=utf-8"
														},
														{
															"key": "Content-Length",
															"value": "50"
														},
														{
															"key": "Date",
															"value": "Fri, 06 Oct 2023 19:04:41 GMT"
														},
														{
															"key": "Connection",
															"value": "keep-alive"
														},
														{
															"key": "Keep-Alive",
															"value": "timeout=5"
														}
													],
													"cookie": [],
													"body": "{\n    \"email\": \"email não pode ficar em branco\"\n}"
												}
											]
										},
										{
											"name": "CT_022: Atualizar usuário válido com password em branco",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"pm.test(\"Checks response body\", function () {\r",
															"    var jsonData = pm.response.json();\r",
															"    pm.expect(jsonData.password).to.eql(\"password não pode ficar em branco\");\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"nome\": \"{{$randomFullName}}\",\r\n  \"email\": \"{{$randomExampleEmail}}\",\r\n  \"password\": \" \",\r\n  \"administrador\": \"true\"\r\n}\r\n",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/usuarios/:_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"usuarios",
														":_id"
													],
													"variable": [
														{
															"key": "_id",
															"value": "{{newUserId}}"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "CT_023: Atualizar usuário válido com administrador em branco",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"pm.test(\"Checks response body\", function () {\r",
															"    var jsonData = pm.response.json();\r",
															"    pm.expect(jsonData.administrador).to.eql(\"administrador deve ser 'true' ou 'false'\");\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"nome\": \"{{$randomFullName}}\",\r\n  \"email\": \"{{$randomExampleEmail}}\",\r\n  \"password\": \"{{validPassword}}\",\r\n  \"administrador\": \"\"\r\n}\r\n",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/usuarios/:_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"usuarios",
														":_id"
													],
													"variable": [
														{
															"key": "_id",
															"value": "{{newUserId}}"
														}
													]
												}
											},
											"response": [
												{
													"name": "Atualizar usuário válido com administrador em branco",
													"originalRequest": {
														"method": "PUT",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\r\n  \"nome\": \"{{$randomFullName}}\",\r\n  \"email\": \"{{$randomExampleEmail}}\",\r\n  \"password\": \"{{validPassword}}\",\r\n  \"administrador\": \"\"\r\n}\r\n",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/usuarios/:_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"usuarios",
																":_id"
															],
															"variable": [
																{
																	"key": "_id",
																	"value": "{{newUserId}}"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Access-Control-Allow-Origin",
															"value": "*"
														},
														{
															"key": "x-dns-prefetch-control",
															"value": "off"
														},
														{
															"key": "x-frame-options",
															"value": "SAMEORIGIN"
														},
														{
															"key": "strict-transport-security",
															"value": "max-age=15552000; includeSubDomains"
														},
														{
															"key": "x-download-options",
															"value": "noopen"
														},
														{
															"key": "x-content-type-options",
															"value": "nosniff"
														},
														{
															"key": "x-xss-protection",
															"value": "1; mode=block"
														},
														{
															"key": "x-moesif-transaction-id",
															"value": "abb220ec-4c5a-4155-b471-699c65bb099f"
														},
														{
															"key": "Content-Type",
															"value": "application/json; charset=utf-8"
														},
														{
															"key": "Content-Length",
															"value": "67"
														},
														{
															"key": "Date",
															"value": "Fri, 06 Oct 2023 19:06:23 GMT"
														},
														{
															"key": "Connection",
															"value": "keep-alive"
														},
														{
															"key": "Keep-Alive",
															"value": "timeout=5"
														}
													],
													"cookie": [],
													"body": "{\n    \"administrador\": \"administrador deve ser 'true' ou 'false'\"\n}"
												}
											]
										},
										{
											"name": "CT_024: Atualizar usuário válido com e-mail inválido",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"pm.test(\"Checks response body\", function () {\r",
															"    var jsonData = pm.response.json();\r",
															"    pm.expect(jsonData.email).to.eql(\"email deve ser um email válido\");\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"nome\": \"{{$randomFullName}}\",\r\n  \"email\": \"{{$randomUserName}}.com\",\r\n  \"password\": \"{{validPassword}}\",\r\n  \"administrador\": \"true\"\r\n}\r\n",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/usuarios/:_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"usuarios",
														":_id"
													],
													"variable": [
														{
															"key": "_id",
															"value": "{{newUserId}}"
														}
													]
												}
											},
											"response": [
												{
													"name": "Atualizar usuário válido com e-mail inválido",
													"originalRequest": {
														"method": "PUT",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\r\n  \"nome\": \"{{$randomFullName}}\",\r\n  \"email\": \"{{$randomUserName}}.com\",\r\n  \"password\": \"{{validPassword}}\",\r\n  \"administrador\": \"true\"\r\n}\r\n",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/usuarios/:_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"usuarios",
																":_id"
															],
															"variable": [
																{
																	"key": "_id",
																	"value": "{{newUserId}}"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Access-Control-Allow-Origin",
															"value": "*"
														},
														{
															"key": "x-dns-prefetch-control",
															"value": "off"
														},
														{
															"key": "x-frame-options",
															"value": "SAMEORIGIN"
														},
														{
															"key": "strict-transport-security",
															"value": "max-age=15552000; includeSubDomains"
														},
														{
															"key": "x-download-options",
															"value": "noopen"
														},
														{
															"key": "x-content-type-options",
															"value": "nosniff"
														},
														{
															"key": "x-xss-protection",
															"value": "1; mode=block"
														},
														{
															"key": "x-moesif-transaction-id",
															"value": "5352a898-b70d-4811-bbf5-231e8b9f2153"
														},
														{
															"key": "Content-Type",
															"value": "application/json; charset=utf-8"
														},
														{
															"key": "Content-Length",
															"value": "50"
														},
														{
															"key": "Date",
															"value": "Fri, 06 Oct 2023 19:07:04 GMT"
														},
														{
															"key": "Connection",
															"value": "keep-alive"
														},
														{
															"key": "Keep-Alive",
															"value": "timeout=5"
														}
													],
													"cookie": [],
													"body": "{\n    \"email\": \"email deve ser um email válido\"\n}"
												}
											]
										},
										{
											"name": "CT_025: Atualizar usuário válido com e-mail já cadastrado",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"pm.test(\"Checks response body\", function () {\r",
															"    var jsonData = pm.response.json();\r",
															"    pm.expect(jsonData.message).to.eql(\"Este email já está sendo usado\");\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"nome\": \"{{$randomFullName}}\",\r\n  \"email\": \"{{adminEmail}}\",\r\n  \"password\": \"{{validPassword}}\",\r\n  \"administrador\": \"true\"\r\n}\r\n",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/usuarios/:_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"usuarios",
														":_id"
													],
													"variable": [
														{
															"key": "_id",
															"value": "{{newUserId}}"
														}
													]
												}
											},
											"response": [
												{
													"name": "Atualizar usuário válido com e-mail já cadastrado",
													"originalRequest": {
														"method": "PUT",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\r\n  \"nome\": \"{{$randomFullName}}\",\r\n  \"email\": \"{{adminEmail}}\",\r\n  \"password\": \"{{validPassword}}\",\r\n  \"administrador\": \"true\"\r\n}\r\n",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/usuarios/:_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"usuarios",
																":_id"
															],
															"variable": [
																{
																	"key": "_id",
																	"value": "{{newUserId}}"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Access-Control-Allow-Origin",
															"value": "*"
														},
														{
															"key": "x-dns-prefetch-control",
															"value": "off"
														},
														{
															"key": "x-frame-options",
															"value": "SAMEORIGIN"
														},
														{
															"key": "strict-transport-security",
															"value": "max-age=15552000; includeSubDomains"
														},
														{
															"key": "x-download-options",
															"value": "noopen"
														},
														{
															"key": "x-content-type-options",
															"value": "nosniff"
														},
														{
															"key": "x-xss-protection",
															"value": "1; mode=block"
														},
														{
															"key": "x-moesif-transaction-id",
															"value": "b5318b7a-b341-428e-b72c-658e7f736c71"
														},
														{
															"key": "Content-Type",
															"value": "application/json; charset=utf-8"
														},
														{
															"key": "Content-Length",
															"value": "53"
														},
														{
															"key": "Date",
															"value": "Fri, 06 Oct 2023 19:08:38 GMT"
														},
														{
															"key": "Connection",
															"value": "keep-alive"
														},
														{
															"key": "Keep-Alive",
															"value": "timeout=5"
														}
													],
													"cookie": [],
													"body": "{\n    \"message\": \"Este email já está sendo usado\"\n}"
												}
											]
										},
										{
											"name": "CT_026: Atualizar usuário válido com Hotmail",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"pm.test(\"Checks response body\", function () {\r",
															"    var jsonData = pm.response.json();\r",
															"    pm.expect(jsonData.email).to.eql(\"Não é possível realizar cadastro com provedor de e-mail Hotmail\");\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"nome\": \"{{$randomFullName}}\",\r\n  \"email\": \"{{$randomUserName}}@hotmail.com\",\r\n  \"password\": \"{{validPassword}}\",\r\n  \"administrador\": \"true\"\r\n}\r\n",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/usuarios/:_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"usuarios",
														":_id"
													],
													"variable": [
														{
															"key": "_id",
															"value": "{{newUserId}}"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "CT_027: Atualizar usuário válido com Gmail",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"pm.test(\"Checks response body\", function () {\r",
															"    var jsonData = pm.response.json();\r",
															"    pm.expect(jsonData.email).to.eql(\"Não é possível realizar cadastro com provedor de e-mail Gmail\");\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"nome\": \"{{$randomFullName}}\",\r\n  \"email\": \"{{$randomUserName}}@gmail.com\",\r\n  \"password\": \"{{validPassword}}\",\r\n  \"administrador\": \"true\"\r\n}\r\n",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/usuarios/:_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"usuarios",
														":_id"
													],
													"variable": [
														{
															"key": "_id",
															"value": "{{newUserId}}"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "CT_028: Atualizar usuário válido com senha < 5 caracteres",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"const password = pm.variables.replaceIn('{{$randomPassword}}').slice(0, 4);\r",
															"pm.collectionVariables.set(\"shortPassword\", password);"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"pm.test(\"Checks response body\", function () {\r",
															"    var jsonData = pm.response.json();\r",
															"    pm.expect(jsonData.message).to.eql(\"A senha deve ter no mínimo 5 caracteres\");\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"nome\": \"{{$randomFullName}}\",\r\n  \"email\": \"{{$randomExampleEmail}}\",\r\n  \"password\": \"{{shortPassword}}\",\r\n  \"administrador\": \"true\"\r\n}\r\n",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/usuarios/:_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"usuarios",
														":_id"
													],
													"variable": [
														{
															"key": "_id",
															"value": "{{newUserId}}"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "CT_029: Atualizar usuário válido com senha > 10 caracteres",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"const password = pm.variables.replaceIn('{{$randomPassword}}').slice(0, 11);\r",
															"pm.collectionVariables.set(\"longPassword\", password);\r",
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"pm.test(\"Checks response body\", function () {\r",
															"    var jsonData = pm.response.json();\r",
															"    pm.expect(jsonData.message).to.eql(\"A senha deve ter no máximo 10 caracteres\");\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"nome\": \"{{$randomFullName}}\",\r\n  \"email\": \"{{$randomExampleEmail}}\",\r\n  \"password\": \"{{longPassword}}\",\r\n  \"administrador\": \"true\"\r\n}\r\n",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/usuarios/:_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"usuarios",
														":_id"
													],
													"variable": [
														{
															"key": "_id",
															"value": "{{newUserId}}"
														}
													]
												}
											},
											"response": []
										}
									],
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													"const name = pm.variables.replaceIn('{{$randomFullName}}');",
													"pm.collectionVariables.set(\"randomName\", name);",
													"const email = pm.variables.replaceIn('{{$randomExampleEmail}}');",
													"pm.collectionVariables.set(\"randomEmail\", email);",
													"",
													"pm.sendRequest({",
													"    url: pm.environment.get('baseUrl') + '/usuarios',",
													"    method: 'POST',",
													"    header: {",
													"        'Accept': 'application/json',",
													"        'Content-Type': 'application/json'",
													"      },",
													"    body: {",
													"        mode: 'raw',",
													"        raw: JSON.stringify({",
													"            \"nome\": pm.collectionVariables.get('randomName'),",
													"            \"email\": pm.collectionVariables.get('randomEmail'),",
													"            \"password\": pm.collectionVariables.get('validPassword'),",
													"            \"administrador\": \"false\"",
													"        })",
													"    }",
													"}, function (err, res) {",
													"    pm.collectionVariables.set(\"newUserId\", res.json()._id);",
													"});",
													""
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										}
									]
								},
								{
									"name": "Usuário inexistente",
									"item": [
										{
											"name": "CT_030: Atualizar usuário inexistente (realizar cadastro válido)",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 201\", function () {\r",
															"    pm.response.to.have.status(201);\r",
															"});\r",
															"\r",
															"pm.test(\"Checks the response body\", function () {\r",
															"    var jsonData = pm.response.json();\r",
															"    pm.expect(jsonData.message).to.equal(\"Cadastro realizado com sucesso\");\r",
															"    pm.expect(jsonData._id).not.null;\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"nome\": \"{{$randomFullName}}\",\r\n  \"email\": \"{{$randomExampleEmail}}\",\r\n  \"password\": \"{{validPassword}}\",\r\n  \"administrador\": \"true\"\r\n}\r\n",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/usuarios/:_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"usuarios",
														":_id"
													],
													"variable": [
														{
															"key": "_id",
															"value": "{{$randomPassword}}"
														}
													]
												}
											},
											"response": [
												{
													"name": "Realizar cadastro válido",
													"originalRequest": {
														"method": "PUT",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\r\n  \"nome\": \"{{$randomFullName}}\",\r\n  \"email\": \"{{$randomExampleEmail}}\",\r\n  \"password\": \"{{validPassword}}\",\r\n  \"administrador\": \"true\"\r\n}\r\n",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/usuarios/:_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"usuarios",
																":_id"
															],
															"variable": [
																{
																	"key": "_id",
																	"value": "{{$randomPassword}}"
																}
															]
														}
													},
													"status": "Created",
													"code": 201,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Access-Control-Allow-Origin",
															"value": "*"
														},
														{
															"key": "x-dns-prefetch-control",
															"value": "off"
														},
														{
															"key": "x-frame-options",
															"value": "SAMEORIGIN"
														},
														{
															"key": "strict-transport-security",
															"value": "max-age=15552000; includeSubDomains"
														},
														{
															"key": "x-download-options",
															"value": "noopen"
														},
														{
															"key": "x-content-type-options",
															"value": "nosniff"
														},
														{
															"key": "x-xss-protection",
															"value": "1; mode=block"
														},
														{
															"key": "x-moesif-transaction-id",
															"value": "60a7f6db-d66e-4444-8d46-eb6a75c93e85"
														},
														{
															"key": "Content-Type",
															"value": "application/json; charset=utf-8"
														},
														{
															"key": "Content-Length",
															"value": "82"
														},
														{
															"key": "Date",
															"value": "Fri, 06 Oct 2023 19:42:51 GMT"
														},
														{
															"key": "Connection",
															"value": "keep-alive"
														},
														{
															"key": "Keep-Alive",
															"value": "timeout=5"
														}
													],
													"cookie": [],
													"body": "{\n    \"message\": \"Cadastro realizado com sucesso\",\n    \"_id\": \"Cs4wx3LKVvefa6wY\"\n}"
												}
											]
										},
										{
											"name": "CT_031: Atualizar usuário inexistente com nome em branco",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"pm.test(\"Checks response body\", function () {\r",
															"    var jsonData = pm.response.json();\r",
															"    pm.expect(jsonData.nome).to.eql(\"nome não pode ficar em branco\");\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"nome\": \" \",\r\n  \"email\": \"{{$randomExampleEmail}}\",\r\n  \"password\": \"{{validPassword}}\",\r\n  \"administrador\": \"true\"\r\n}\r\n",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/usuarios/:_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"usuarios",
														":_id"
													],
													"variable": [
														{
															"key": "_id",
															"value": "{{$randomPassword}}"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "CT_032: Atualizar usuário inexistente com e-mail em branco",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"pm.test(\"Checks response body\", function () {\r",
															"    var jsonData = pm.response.json();\r",
															"    pm.expect(jsonData.email).to.eql(\"email não pode ficar em branco\");\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"nome\": \"{{$randomFullName}}\",\r\n  \"email\": \"\",\r\n  \"password\": \"{{validPassword}}\",\r\n  \"administrador\": \"true\"\r\n}\r\n",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/usuarios/:_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"usuarios",
														":_id"
													],
													"variable": [
														{
															"key": "_id",
															"value": "{{$randomPassword}}"
														}
													]
												}
											},
											"response": [
												{
													"name": "Atualizar usuário inexistente com e-mail em branco",
													"originalRequest": {
														"method": "PUT",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\r\n  \"nome\": \"{{$randomFullName}}\",\r\n  \"email\": \"\",\r\n  \"password\": \"{{validPassword}}\",\r\n  \"administrador\": \"true\"\r\n}\r\n",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/usuarios/:_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"usuarios",
																":_id"
															],
															"variable": [
																{
																	"key": "_id",
																	"value": "{{$randomPassword}}"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Access-Control-Allow-Origin",
															"value": "*"
														},
														{
															"key": "x-dns-prefetch-control",
															"value": "off"
														},
														{
															"key": "x-frame-options",
															"value": "SAMEORIGIN"
														},
														{
															"key": "strict-transport-security",
															"value": "max-age=15552000; includeSubDomains"
														},
														{
															"key": "x-download-options",
															"value": "noopen"
														},
														{
															"key": "x-content-type-options",
															"value": "nosniff"
														},
														{
															"key": "x-xss-protection",
															"value": "1; mode=block"
														},
														{
															"key": "x-moesif-transaction-id",
															"value": "d3eb7c1b-f1ba-4c81-8e8c-10bf2591f9e2"
														},
														{
															"key": "Content-Type",
															"value": "application/json; charset=utf-8"
														},
														{
															"key": "Content-Length",
															"value": "50"
														},
														{
															"key": "Date",
															"value": "Fri, 06 Oct 2023 19:44:55 GMT"
														},
														{
															"key": "Connection",
															"value": "keep-alive"
														},
														{
															"key": "Keep-Alive",
															"value": "timeout=5"
														}
													],
													"cookie": [],
													"body": "{\n    \"email\": \"email não pode ficar em branco\"\n}"
												}
											]
										},
										{
											"name": "CT_033: Atualizar usuário inexistente com password em branco",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"pm.test(\"Checks response body\", function () {\r",
															"    var jsonData = pm.response.json();\r",
															"    pm.expect(jsonData.password).to.eql(\"password não pode ficar em branco\");\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"nome\": \"{{$randomFullName}}\",\r\n  \"email\": \"{{$randomExampleEmail}}\",\r\n  \"password\": \" \",\r\n  \"administrador\": \"true\"\r\n}\r\n",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/usuarios/:_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"usuarios",
														":_id"
													],
													"variable": [
														{
															"key": "_id",
															"value": "{{$randomPassword}}"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "CT_034: Atualizar usuário inexistente com administrador em branco",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"pm.test(\"Checks response body\", function () {\r",
															"    var jsonData = pm.response.json();\r",
															"    pm.expect(jsonData.administrador).to.eql(\"administrador deve ser 'true' ou 'false'\");\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"nome\": \"{{$randomFullName}}\",\r\n  \"email\": \"{{$randomExampleEmail}}\",\r\n  \"password\": \"{{validPassword}}\",\r\n  \"administrador\": \"\"\r\n}\r\n",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/usuarios/:_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"usuarios",
														":_id"
													],
													"variable": [
														{
															"key": "_id",
															"value": "{{$randomPassword}}"
														}
													]
												}
											},
											"response": [
												{
													"name": "Atualizar usuário inexistente com administrador em branco",
													"originalRequest": {
														"method": "PUT",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\r\n  \"nome\": \"{{$randomFullName}}\",\r\n  \"email\": \"{{$randomExampleEmail}}\",\r\n  \"password\": \"{{validPassword}}\",\r\n  \"administrador\": \"\"\r\n}\r\n",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/usuarios/:_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"usuarios",
																":_id"
															],
															"variable": [
																{
																	"key": "_id",
																	"value": "{{$randomPassword}}"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Access-Control-Allow-Origin",
															"value": "*"
														},
														{
															"key": "x-dns-prefetch-control",
															"value": "off"
														},
														{
															"key": "x-frame-options",
															"value": "SAMEORIGIN"
														},
														{
															"key": "strict-transport-security",
															"value": "max-age=15552000; includeSubDomains"
														},
														{
															"key": "x-download-options",
															"value": "noopen"
														},
														{
															"key": "x-content-type-options",
															"value": "nosniff"
														},
														{
															"key": "x-xss-protection",
															"value": "1; mode=block"
														},
														{
															"key": "x-moesif-transaction-id",
															"value": "8c8ee50b-28bd-442b-b943-5fc92258bee9"
														},
														{
															"key": "Content-Type",
															"value": "application/json; charset=utf-8"
														},
														{
															"key": "Content-Length",
															"value": "67"
														},
														{
															"key": "Date",
															"value": "Fri, 06 Oct 2023 19:47:15 GMT"
														},
														{
															"key": "Connection",
															"value": "keep-alive"
														},
														{
															"key": "Keep-Alive",
															"value": "timeout=5"
														}
													],
													"cookie": [],
													"body": "{\n    \"administrador\": \"administrador deve ser 'true' ou 'false'\"\n}"
												}
											]
										},
										{
											"name": "CT_035: Atualizar usuário inexistente com e-mail inválido",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"pm.test(\"Checks response body\", function () {\r",
															"    var jsonData = pm.response.json();\r",
															"    pm.expect(jsonData.email).to.eql(\"email deve ser um email válido\");\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"nome\": \"{{$randomFullName}}\",\r\n  \"email\": \"{{$randomUserName}}.com\",\r\n  \"password\": \"{{validPassword}}\",\r\n  \"administrador\": \"true\"\r\n}\r\n",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/usuarios/:_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"usuarios",
														":_id"
													],
													"variable": [
														{
															"key": "_id",
															"value": "{{$randomPassword}}"
														}
													]
												}
											},
											"response": [
												{
													"name": "Atualizar usuário inexistente com e-mail inválido",
													"originalRequest": {
														"method": "PUT",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\r\n  \"nome\": \"{{$randomFullName}}\",\r\n  \"email\": \"{{$randomUserName}}.com\",\r\n  \"password\": \"{{validPassword}}\",\r\n  \"administrador\": \"true\"\r\n}\r\n",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/usuarios/:_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"usuarios",
																":_id"
															],
															"variable": [
																{
																	"key": "_id",
																	"value": "{{$randomPassword}}"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Access-Control-Allow-Origin",
															"value": "*"
														},
														{
															"key": "x-dns-prefetch-control",
															"value": "off"
														},
														{
															"key": "x-frame-options",
															"value": "SAMEORIGIN"
														},
														{
															"key": "strict-transport-security",
															"value": "max-age=15552000; includeSubDomains"
														},
														{
															"key": "x-download-options",
															"value": "noopen"
														},
														{
															"key": "x-content-type-options",
															"value": "nosniff"
														},
														{
															"key": "x-xss-protection",
															"value": "1; mode=block"
														},
														{
															"key": "x-moesif-transaction-id",
															"value": "18e38fa2-faa6-43d5-82a5-9f6048145790"
														},
														{
															"key": "Content-Type",
															"value": "application/json; charset=utf-8"
														},
														{
															"key": "Content-Length",
															"value": "50"
														},
														{
															"key": "Date",
															"value": "Fri, 06 Oct 2023 19:47:59 GMT"
														},
														{
															"key": "Connection",
															"value": "keep-alive"
														},
														{
															"key": "Keep-Alive",
															"value": "timeout=5"
														}
													],
													"cookie": [],
													"body": "{\n    \"email\": \"email deve ser um email válido\"\n}"
												}
											]
										},
										{
											"name": "CT_036: Atualizar usuário inexistente com e-mail já cadastrado",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"pm.test(\"Checks response body\", function () {\r",
															"    var jsonData = pm.response.json();\r",
															"    pm.expect(jsonData.message).to.eql(\"Este email já está sendo usado\");\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"nome\": \"{{$randomFullName}}\",\r\n  \"email\": \"{{adminEmail}}\",\r\n  \"password\": \"{{validPassword}}\",\r\n  \"administrador\": \"true\"\r\n}\r\n",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/usuarios/:_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"usuarios",
														":_id"
													],
													"variable": [
														{
															"key": "_id",
															"value": "{{$randomPassword}}"
														}
													]
												}
											},
											"response": [
												{
													"name": "Atualizar usuário inexistente com e-mail já cadastrado",
													"originalRequest": {
														"method": "PUT",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\r\n  \"nome\": \"{{$randomFullName}}\",\r\n  \"email\": \"{{adminEmail}}\",\r\n  \"password\": \"{{validPassword}}\",\r\n  \"administrador\": \"true\"\r\n}\r\n",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/usuarios/:_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"usuarios",
																":_id"
															],
															"variable": [
																{
																	"key": "_id",
																	"value": "{{$randomPassword}}"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Access-Control-Allow-Origin",
															"value": "*"
														},
														{
															"key": "x-dns-prefetch-control",
															"value": "off"
														},
														{
															"key": "x-frame-options",
															"value": "SAMEORIGIN"
														},
														{
															"key": "strict-transport-security",
															"value": "max-age=15552000; includeSubDomains"
														},
														{
															"key": "x-download-options",
															"value": "noopen"
														},
														{
															"key": "x-content-type-options",
															"value": "nosniff"
														},
														{
															"key": "x-xss-protection",
															"value": "1; mode=block"
														},
														{
															"key": "x-moesif-transaction-id",
															"value": "94916540-16b5-430d-ab75-dccd30a88882"
														},
														{
															"key": "Content-Type",
															"value": "application/json; charset=utf-8"
														},
														{
															"key": "Content-Length",
															"value": "53"
														},
														{
															"key": "Date",
															"value": "Fri, 06 Oct 2023 19:48:50 GMT"
														},
														{
															"key": "Connection",
															"value": "keep-alive"
														},
														{
															"key": "Keep-Alive",
															"value": "timeout=5"
														}
													],
													"cookie": [],
													"body": "{\n    \"message\": \"Este email já está sendo usado\"\n}"
												}
											]
										},
										{
											"name": "CT_037: Atualizar usuário inexistente com Hotmail",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"pm.test(\"Checks response body\", function () {\r",
															"    var jsonData = pm.response.json();\r",
															"    pm.expect(jsonData.message).to.eql(\"Não é possível realizar cadastro com provedor de e-mail Hotmail\");\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"nome\": \"{{$randomFullName}}\",\r\n  \"email\": \"{{$randomUserName}}@hotmail.com\",\r\n  \"password\": \"{{validPassword}}\",\r\n  \"administrador\": \"true\"\r\n}\r\n",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/usuarios/:_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"usuarios",
														":_id"
													],
													"variable": [
														{
															"key": "_id",
															"value": "{{$randomPassword}}"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "CT_038: Atualizar usuário inexistente com Gmail",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"pm.test(\"Checks response body\", function () {\r",
															"    var jsonData = pm.response.json();\r",
															"    pm.expect(jsonData.message).to.eql(\"Não é possível realizar cadastro com provedor de e-mail Gmail\");\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"nome\": \"{{$randomFullName}}\",\r\n  \"email\": \"{{$randomUserName}}@gmail.com\",\r\n  \"password\": \"{{validPassword}}\",\r\n  \"administrador\": \"true\"\r\n}\r\n",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/usuarios/:_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"usuarios",
														":_id"
													],
													"variable": [
														{
															"key": "_id",
															"value": "{{$randomPassword}}"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "CT_039: Atualizar usuário inexistente com senha < 5 caracteres",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"const password = pm.variables.replaceIn('{{$randomPassword}}').slice(0, 4);\r",
															"pm.collectionVariables.set(\"shortPassword\", password);"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"pm.test(\"Checks response body\", function () {\r",
															"    var jsonData = pm.response.json();\r",
															"    pm.expect(jsonData.message).to.eql(\"A senha deve ter no mínimo 5 caracteres\");\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"nome\": \"{{$randomFullName}}\",\r\n  \"email\": \"{{$randomExampleEmail}}\",\r\n  \"password\": \"{{shortPassword}}\",\r\n  \"administrador\": \"true\"\r\n}\r\n",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/usuarios/:_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"usuarios",
														":_id"
													],
													"variable": [
														{
															"key": "_id",
															"value": "{{$randomPassword}}"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "CT_040: Atualizar usuário inexistente com senha > 10 caracteres",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"const password = pm.variables.replaceIn('{{$randomPassword}}').slice(0, 11);\r",
															"pm.collectionVariables.set(\"longPassword\", password);\r",
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"pm.test(\"Checks response body\", function () {\r",
															"    var jsonData = pm.response.json();\r",
															"    pm.expect(jsonData.message).to.eql(\"A senha deve ter no máximo 10 caracteres\");\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"nome\": \"{{$randomFullName}}\",\r\n  \"email\": \"{{$randomExampleEmail}}\",\r\n  \"password\": \"{{longPassword}}\",\r\n  \"administrador\": \"true\"\r\n}\r\n",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/usuarios/:_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"usuarios",
														":_id"
													],
													"variable": [
														{
															"key": "_id",
															"value": "{{$randomPassword}}"
														}
													]
												}
											},
											"response": []
										}
									]
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											"const password = pm.variables.replaceIn('{{$randomPassword}}').slice(0, 8);",
											"pm.collectionVariables.set(\"validPassword\", password);",
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							"const password = pm.variables.replaceIn('{{$randomPassword}}').slice(0, 8);",
							"pm.collectionVariables.set(\"validPassword\", password);"
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "login",
			"item": [
				{
					"name": "Realizar login",
					"item": [
						{
							"name": "CT_041: Realizar login válido",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Checks the response body\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.message).to.eql('Login realizado com sucesso');\r",
											"    pm.expect(jsonData.authorization).not.null;\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"email\": \"{{adminEmail}}\",\r\n  \"password\": \"{{adminPassword}}\"\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/login",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"login"
									]
								}
							},
							"response": [
								{
									"name": "Realizar login válido",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"email\": \"{{adminEmail}}\",\r\n  \"password\": \"{{adminPassword}}\"\r\n}\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/login",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"login"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "x-dns-prefetch-control",
											"value": "off"
										},
										{
											"key": "x-frame-options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "strict-transport-security",
											"value": "max-age=15552000; includeSubDomains"
										},
										{
											"key": "x-download-options",
											"value": "noopen"
										},
										{
											"key": "x-content-type-options",
											"value": "nosniff"
										},
										{
											"key": "x-xss-protection",
											"value": "1; mode=block"
										},
										{
											"key": "x-moesif-transaction-id",
											"value": "13b909e0-53e1-42f9-92c6-158e53f55e9c"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "265"
										},
										{
											"key": "Date",
											"value": "Sat, 07 Oct 2023 16:08:26 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"body": "{\n    \"message\": \"Login realizado com sucesso\",\n    \"authorization\": \"Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImZ1bGFub0BxYS5jb20iLCJwYXNzd29yZCI6InRlc3RlIiwiaWF0IjoxNjk2Njk0OTA2LCJleHAiOjE2OTY2OTU1MDZ9.uBbkQ7da8hDVpSAsmnYQ_L3QRl1Y4TtXhA1e5saWa9E\"\n}"
								}
							]
						},
						{
							"name": "CT_042: Realizar login com senha incorreta",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 401\", function () {\r",
											"    pm.response.to.have.status(401);\r",
											"});\r",
											"\r",
											"pm.test(\"Checks the response body\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.message).to.eql(\"Email e/ou senha inválidos\");\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"email\": \"{{adminEmail}}\",\r\n  \"password\": \"{{validPassword}}\"\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/login",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"login"
									]
								}
							},
							"response": [
								{
									"name": "Realizar login com senha incorreta",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"email\": \"{{adminEmail}}\",\r\n  \"password\": \"{{validPassword}}\"\r\n}\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/login",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"login"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "x-dns-prefetch-control",
											"value": "off"
										},
										{
											"key": "x-frame-options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "strict-transport-security",
											"value": "max-age=15552000; includeSubDomains"
										},
										{
											"key": "x-download-options",
											"value": "noopen"
										},
										{
											"key": "x-content-type-options",
											"value": "nosniff"
										},
										{
											"key": "x-xss-protection",
											"value": "1; mode=block"
										},
										{
											"key": "x-moesif-transaction-id",
											"value": "05201463-e8cb-4856-9166-f6c882190de2"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "48"
										},
										{
											"key": "Date",
											"value": "Sat, 07 Oct 2023 16:09:37 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"body": "{\n    \"message\": \"Email e/ou senha inválidos\"\n}"
								}
							]
						},
						{
							"name": "CT_043: Realizar login com e-mail não cadastrado",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 401\", function () {\r",
											"    pm.response.to.have.status(401);\r",
											"});\r",
											"\r",
											"pm.test(\"Checks the response body\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.message).to.eql(\"Email e/ou senha inválidos\");\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"email\": \"{{$randomExampleEmail}}\",\r\n  \"password\": \"{{adminPassword}}\"\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/login",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"login"
									]
								}
							},
							"response": [
								{
									"name": "Realizar login com e-mail não cadastrado",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"email\": \"{{$randomExampleEmail}}\",\r\n  \"password\": \"{{adminPassword}}\"\r\n}\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/login",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"login"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "x-dns-prefetch-control",
											"value": "off"
										},
										{
											"key": "x-frame-options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "strict-transport-security",
											"value": "max-age=15552000; includeSubDomains"
										},
										{
											"key": "x-download-options",
											"value": "noopen"
										},
										{
											"key": "x-content-type-options",
											"value": "nosniff"
										},
										{
											"key": "x-xss-protection",
											"value": "1; mode=block"
										},
										{
											"key": "x-moesif-transaction-id",
											"value": "e6cf45d1-f5e7-4a29-9c75-91b8b449b21f"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "48"
										},
										{
											"key": "Date",
											"value": "Sat, 07 Oct 2023 16:10:22 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"body": "{\n    \"message\": \"Email e/ou senha inválidos\"\n}"
								}
							]
						},
						{
							"name": "CT_044: Realizar login com e-mail em branco",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Checks the response body\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.email).to.eql(\"email não pode ficar em branco\");\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"email\": \"\",\r\n  \"password\": \"{{adminPassword}}\"\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/login",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"login"
									]
								}
							},
							"response": [
								{
									"name": "Realizar login com e-mail em branco",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"email\": \"\",\r\n  \"password\": \"{{adminPassword}}\"\r\n}\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/login",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"login"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "x-dns-prefetch-control",
											"value": "off"
										},
										{
											"key": "x-frame-options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "strict-transport-security",
											"value": "max-age=15552000; includeSubDomains"
										},
										{
											"key": "x-download-options",
											"value": "noopen"
										},
										{
											"key": "x-content-type-options",
											"value": "nosniff"
										},
										{
											"key": "x-xss-protection",
											"value": "1; mode=block"
										},
										{
											"key": "x-moesif-transaction-id",
											"value": "c8947a18-80b9-420c-83b7-0c94ff668fcd"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "50"
										},
										{
											"key": "Date",
											"value": "Sat, 07 Oct 2023 16:11:39 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"body": "{\n    \"email\": \"email não pode ficar em branco\"\n}"
								}
							]
						},
						{
							"name": "CT_045: Realizar login com senha em branco",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Checks the response body\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.password).to.eql(\"password não pode ficar em branco\");\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"email\": \"{{adminEmail}}\",\r\n  \"password\": \"\"\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/login",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"login"
									]
								}
							},
							"response": [
								{
									"name": "Realizar login com senha em branco",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"email\": \"{{adminEmail}}\",\r\n  \"password\": \"\"\r\n}\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/login",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"login"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "x-dns-prefetch-control",
											"value": "off"
										},
										{
											"key": "x-frame-options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "strict-transport-security",
											"value": "max-age=15552000; includeSubDomains"
										},
										{
											"key": "x-download-options",
											"value": "noopen"
										},
										{
											"key": "x-content-type-options",
											"value": "nosniff"
										},
										{
											"key": "x-xss-protection",
											"value": "1; mode=block"
										},
										{
											"key": "x-moesif-transaction-id",
											"value": "bf50cae9-5fc7-4fea-baf7-5f926ad5a1f2"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "56"
										},
										{
											"key": "Date",
											"value": "Sat, 07 Oct 2023 16:12:27 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"body": "{\n    \"password\": \"password não pode ficar em branco\"\n}"
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "produtos",
			"item": [
				{
					"name": "Cadastrar produto",
					"item": [
						{
							"name": "CT_046: Cadastrar produto válido como administrador",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"pm.test(\"Checks the response body\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.message).to.eql('Cadastro realizado com sucesso');\r",
											"    pm.expect(jsonData.id).not.null;\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{token}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"nome\": \"{{$randomProductName}}\",\r\n  \"preco\": {{$randomInt}},\r\n  \"descricao\": \"{{$randomPhrase}}\",\r\n  \"quantidade\": {{$randomInt}}\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/produtos",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"produtos"
									]
								}
							},
							"response": [
								{
									"name": "Cadastrar produto válido como administrador",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"nome\": \"{{$randomProductName}}\",\r\n  \"preco\": {{$randomInt}},\r\n  \"descricao\": \"{{$randomPhrase}}\",\r\n  \"quantidade\": {{$randomInt}}\r\n}\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/produtos",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"produtos"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "x-dns-prefetch-control",
											"value": "off"
										},
										{
											"key": "x-frame-options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "strict-transport-security",
											"value": "max-age=15552000; includeSubDomains"
										},
										{
											"key": "x-download-options",
											"value": "noopen"
										},
										{
											"key": "x-content-type-options",
											"value": "nosniff"
										},
										{
											"key": "x-xss-protection",
											"value": "1; mode=block"
										},
										{
											"key": "x-moesif-transaction-id",
											"value": "cf5e98da-a7f6-4a4b-ba29-94ae7f6bd587"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "82"
										},
										{
											"key": "Date",
											"value": "Sat, 07 Oct 2023 16:14:04 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"body": "{\n    \"message\": \"Cadastro realizado com sucesso\",\n    \"_id\": \"bYuXrAJogcv4Q2Dp\"\n}"
								}
							]
						},
						{
							"name": "CT_047: Cadastrar produto válido como usuário comum",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 403\", function () {\r",
											"    pm.response.to.have.status(403);\r",
											"});\r",
											"\r",
											"pm.test(\"Checks the response body\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.message).to.eql(\"Rota exclusiva para administradores\");\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const name = pm.variables.replaceIn('{{$randomFullName}}');\r",
											"pm.collectionVariables.set(\"randomName\", name);\r",
											"const email = pm.variables.replaceIn('{{$randomExampleEmail}}');\r",
											"pm.collectionVariables.set(\"randomEmail\", email);\r",
											"\r",
											"pm.sendRequest({\r",
											"    url: pm.environment.get('baseUrl') + '/usuarios',\r",
											"    method: 'POST',\r",
											"    header: {\r",
											"        'Accept': 'application/json',\r",
											"        'Content-Type': 'application/json'\r",
											"      },\r",
											"    body: {\r",
											"        mode: 'raw',\r",
											"        raw: JSON.stringify({\r",
											"            \"nome\": pm.collectionVariables.get('randomName'),\r",
											"            \"email\": pm.collectionVariables.get('randomEmail'),\r",
											"            \"password\": pm.collectionVariables.get('validPassword'),\r",
											"            \"administrador\": \"false\"\r",
											"        })\r",
											"    }\r",
											"}, function (err, res) {\r",
											"    if (err) {\r",
											"            console.error(err);\r",
											"            return;\r",
											"    }\r",
											"\r",
											"    pm.sendRequest({\r",
											"        url: pm.environment.get('baseUrl') + '/login',\r",
											"        method: 'POST',\r",
											"        header: {\r",
											"            'Accept': 'application/json',\r",
											"            'Content-Type': 'application/json'\r",
											"        },\r",
											"        body: {\r",
											"            mode: 'raw',\r",
											"            raw: JSON.stringify({\r",
											"                \"email\": pm.collectionVariables.get('randomEmail'),\r",
											"                \"password\": pm.collectionVariables.get('validPassword')\r",
											"            })\r",
											"        }\r",
											"    }, function (err, res) {\r",
											"        if (err) {\r",
											"            console.error(err);\r",
											"            return;\r",
											"        }\r",
											"\r",
											"        pm.collectionVariables.set('token', res.json().authorization);\r",
											"    });\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{token}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"nome\": \"{{$randomProductName}}\",\r\n  \"preco\": {{$randomInt}},\r\n  \"descricao\": \"{{$randomPhrase}}\",\r\n  \"quantidade\": {{$randomInt}}\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/produtos",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"produtos"
									]
								}
							},
							"response": [
								{
									"name": "Cadastrar produto válido como usuário comum",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"nome\": \"{{$randomProductName}}\",\r\n  \"preco\": {{$randomInt}},\r\n  \"descricao\": \"{{$randomPhrase}}\",\r\n  \"quantidade\": {{$randomInt}}\r\n}\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/produtos",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"produtos"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "x-dns-prefetch-control",
											"value": "off"
										},
										{
											"key": "x-frame-options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "strict-transport-security",
											"value": "max-age=15552000; includeSubDomains"
										},
										{
											"key": "x-download-options",
											"value": "noopen"
										},
										{
											"key": "x-content-type-options",
											"value": "nosniff"
										},
										{
											"key": "x-xss-protection",
											"value": "1; mode=block"
										},
										{
											"key": "x-moesif-transaction-id",
											"value": "f57a3f61-3ff9-4d09-b246-79ba34a3a4c7"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "56"
										},
										{
											"key": "Date",
											"value": "Sat, 07 Oct 2023 16:14:58 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"body": "{\n    \"message\": \"Rota exclusiva para administradores\"\n}"
								}
							]
						},
						{
							"name": "CT_048: Cadastrar produto válido sem autenticação",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 401\", function () {\r",
											"    pm.response.to.have.status(401);\r",
											"});\r",
											"\r",
											"pm.test(\"Checks the response body\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.message).to.eql(\"Token de acesso ausente, inválido, expirado ou usuário do token não existe mais\");\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"nome\": \"{{$randomProductName}}\",\r\n  \"preco\": {{$randomInt}},\r\n  \"descricao\": \"{{$randomPhrase}}\",\r\n  \"quantidade\": {{$randomInt}}\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/produtos",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"produtos"
									]
								}
							},
							"response": [
								{
									"name": "Cadastrar produto válido sem autenticação",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"nome\": \"{{$randomProductName}}\",\r\n  \"preco\": {{$randomInt}},\r\n  \"descricao\": \"{{$randomPhrase}}\",\r\n  \"quantidade\": {{$randomInt}}\r\n}\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/produtos",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"produtos"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "x-dns-prefetch-control",
											"value": "off"
										},
										{
											"key": "x-frame-options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "strict-transport-security",
											"value": "max-age=15552000; includeSubDomains"
										},
										{
											"key": "x-download-options",
											"value": "noopen"
										},
										{
											"key": "x-content-type-options",
											"value": "nosniff"
										},
										{
											"key": "x-xss-protection",
											"value": "1; mode=block"
										},
										{
											"key": "x-moesif-transaction-id",
											"value": "9ba30881-c6f3-4138-b187-a104df363cc5"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "103"
										},
										{
											"key": "Date",
											"value": "Sat, 07 Oct 2023 16:16:05 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"body": "{\n    \"message\": \"Token de acesso ausente, inválido, expirado ou usuário do token não existe mais\"\n}"
								}
							]
						},
						{
							"name": "CT_049: Cadastrar produto com nome já cadastrado",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Checks the response body\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.message).to.eql(\"Já existe produto com esse nome\");\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{token}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"nome\": \"{{defaultProductName}}\",\r\n  \"preco\": {{$randomInt}},\r\n  \"descricao\": \"{{$randomPhrase}}\",\r\n  \"quantidade\": {{$randomInt}}\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/produtos",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"produtos"
									]
								}
							},
							"response": [
								{
									"name": "Cadastrar produto com nome já cadastrado",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"nome\": \"{{defaultProductName}}\",\r\n  \"preco\": {{$randomInt}},\r\n  \"descricao\": \"{{$randomPhrase}}\",\r\n  \"quantidade\": {{$randomInt}}\r\n}\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/produtos",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"produtos"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "x-dns-prefetch-control",
											"value": "off"
										},
										{
											"key": "x-frame-options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "strict-transport-security",
											"value": "max-age=15552000; includeSubDomains"
										},
										{
											"key": "x-download-options",
											"value": "noopen"
										},
										{
											"key": "x-content-type-options",
											"value": "nosniff"
										},
										{
											"key": "x-xss-protection",
											"value": "1; mode=block"
										},
										{
											"key": "x-moesif-transaction-id",
											"value": "d699ace3-18cc-4666-9554-fd518a776879"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "53"
										},
										{
											"key": "Date",
											"value": "Sat, 07 Oct 2023 16:16:43 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"body": "{\n    \"message\": \"Já existe produto com esse nome\"\n}"
								}
							]
						},
						{
							"name": "CT_050: Cadastrar produto com nome em branco",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Checks the response body\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.nome).to.eql(\"nome não pode ficar em branco\");\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{token}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"nome\": \" \",\r\n  \"preco\": {{$randomInt}},\r\n  \"descricao\": \"{{$randomPhrase}}\",\r\n  \"quantidade\": {{$randomInt}}\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/produtos",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"produtos"
									]
								}
							},
							"response": []
						},
						{
							"name": "CT_051: Cadastrar produto com preço em branco",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Checks the response body\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.preco).to.eql(\"preco deve ser um número\");\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{token}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"nome\": \"{{$randomProductName}}\",\r\n  \"preco\": \"\",\r\n  \"descricao\": \"{{$randomPhrase}}\",\r\n  \"quantidade\": {{$randomInt}}\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/produtos",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"produtos"
									]
								}
							},
							"response": [
								{
									"name": "Cadastrar produto com preço em branco",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"nome\": \"{{$randomProductName}}\",\r\n  \"preco\": \"\",\r\n  \"descricao\": \"{{$randomPhrase}}\",\r\n  \"quantidade\": {{$randomInt}}\r\n}\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/produtos",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"produtos"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "x-dns-prefetch-control",
											"value": "off"
										},
										{
											"key": "x-frame-options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "strict-transport-security",
											"value": "max-age=15552000; includeSubDomains"
										},
										{
											"key": "x-download-options",
											"value": "noopen"
										},
										{
											"key": "x-content-type-options",
											"value": "nosniff"
										},
										{
											"key": "x-xss-protection",
											"value": "1; mode=block"
										},
										{
											"key": "x-moesif-transaction-id",
											"value": "5a627f0f-e877-4e04-84ee-df19c05d5fea"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "44"
										},
										{
											"key": "Date",
											"value": "Sat, 07 Oct 2023 16:37:20 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"body": "{\n    \"preco\": \"preco deve ser um número\"\n}"
								}
							]
						},
						{
							"name": "CT_052: Cadastrar produto com preço inválido",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Checks the response body\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.preco).to.eql(\"preco deve ser um número\");\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{token}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"nome\": \"{{$randomProductName}}\",\r\n  \"preco\": \"{{$randomMonth}}\",\r\n  \"descricao\": \"{{$randomPhrase}}\",\r\n  \"quantidade\": {{$randomInt}}\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/produtos",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"produtos"
									]
								}
							},
							"response": [
								{
									"name": "Cadastrar produto com preço inválido",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"nome\": \"{{$randomProductName}}\",\r\n  \"preco\": \"{{$randomMonth}}\",\r\n  \"descricao\": \"{{$randomPhrase}}\",\r\n  \"quantidade\": {{$randomInt}}\r\n}\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/produtos",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"produtos"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "x-dns-prefetch-control",
											"value": "off"
										},
										{
											"key": "x-frame-options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "strict-transport-security",
											"value": "max-age=15552000; includeSubDomains"
										},
										{
											"key": "x-download-options",
											"value": "noopen"
										},
										{
											"key": "x-content-type-options",
											"value": "nosniff"
										},
										{
											"key": "x-xss-protection",
											"value": "1; mode=block"
										},
										{
											"key": "x-moesif-transaction-id",
											"value": "7274e4aa-a1b1-40a9-bee6-6b906a351791"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "44"
										},
										{
											"key": "Date",
											"value": "Sat, 07 Oct 2023 16:38:07 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"body": "{\n    \"preco\": \"preco deve ser um número\"\n}"
								}
							]
						},
						{
							"name": "CT_053: Cadastrar produto com descrição em branco",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Checks the response body\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.descricao).to.eql(\"descricao não pode ficar em branco\");\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{token}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"nome\": \"{{$randomProductName}}\",\r\n  \"preco\": {{$randomInt}},\r\n  \"descricao\": \" \",\r\n  \"quantidade\": {{$randomInt}}\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/produtos",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"produtos"
									]
								}
							},
							"response": []
						},
						{
							"name": "CT_054: Cadastrar produto com quantidade em branco",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Checks the response body\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.quantidade).to.eql(\"quantidade deve ser um número\");\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{token}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"nome\": \"{{$randomProductName}}\",\r\n  \"preco\": {{$randomInt}},\r\n  \"descricao\": \"{{$randomPhrase}}\",\r\n  \"quantidade\": \"\"\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/produtos",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"produtos"
									]
								}
							},
							"response": [
								{
									"name": "Cadastrar produto com quantidade em branco",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"nome\": \"{{$randomProductName}}\",\r\n  \"preco\": {{$randomInt}},\r\n  \"descricao\": \"{{$randomPhrase}}\",\r\n  \"quantidade\": \"\"\r\n}\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/produtos",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"produtos"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "x-dns-prefetch-control",
											"value": "off"
										},
										{
											"key": "x-frame-options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "strict-transport-security",
											"value": "max-age=15552000; includeSubDomains"
										},
										{
											"key": "x-download-options",
											"value": "noopen"
										},
										{
											"key": "x-content-type-options",
											"value": "nosniff"
										},
										{
											"key": "x-xss-protection",
											"value": "1; mode=block"
										},
										{
											"key": "x-moesif-transaction-id",
											"value": "27729714-b4f5-4381-aa13-34c95ac8c29a"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "54"
										},
										{
											"key": "Date",
											"value": "Sat, 07 Oct 2023 16:47:03 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"body": "{\n    \"quantidade\": \"quantidade deve ser um número\"\n}"
								}
							]
						},
						{
							"name": "CT_055: Cadastrar produto com quantidade inválida",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Checks the response body\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.quantidade).to.eql(\"quantidade deve ser um número\");\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{token}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"nome\": \"{{$randomProductName}}\",\r\n  \"preco\": {{$randomInt}},\r\n  \"descricao\": \"{{$randomPhrase}}\",\r\n  \"quantidade\": \"{{$randomHexColor}}\"\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/produtos",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"produtos"
									]
								}
							},
							"response": [
								{
									"name": "Cadastrar produto com quantidade inválida",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"nome\": \"{{$randomProductName}}\",\r\n  \"preco\": {{$randomInt}},\r\n  \"descricao\": \"{{$randomPhrase}}\",\r\n  \"quantidade\": \"{{$randomHexColor}}\"\r\n}\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/produtos",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"produtos"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "x-dns-prefetch-control",
											"value": "off"
										},
										{
											"key": "x-frame-options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "strict-transport-security",
											"value": "max-age=15552000; includeSubDomains"
										},
										{
											"key": "x-download-options",
											"value": "noopen"
										},
										{
											"key": "x-content-type-options",
											"value": "nosniff"
										},
										{
											"key": "x-xss-protection",
											"value": "1; mode=block"
										},
										{
											"key": "x-moesif-transaction-id",
											"value": "6a31bc06-b28b-4ad9-b5d5-926e0a8a0a91"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "54"
										},
										{
											"key": "Date",
											"value": "Sat, 07 Oct 2023 16:47:49 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"body": "{\n    \"quantidade\": \"quantidade deve ser um número\"\n}"
								}
							]
						},
						{
							"name": "CT_056: Cadastrar produto com quantidade float",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Checks the response body\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.quantidade).to.eql(\"quantidade deve ser um inteiro\");\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{token}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"nome\": \"{{$randomProductName}}\",\r\n  \"preco\": {{$randomInt}},\r\n  \"descricao\": \"{{$randomPhrase}}\",\r\n  \"quantidade\": \"{{$randomPrice}}\"\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/produtos",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"produtos"
									]
								}
							},
							"response": [
								{
									"name": "Cadastrar produto com quantidade float",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"nome\": \"{{$randomProductName}}\",\r\n  \"preco\": {{$randomInt}},\r\n  \"descricao\": \"{{$randomPhrase}}\",\r\n  \"quantidade\": \"{{$randomPrice}}\"\r\n}\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/produtos",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"produtos"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "x-dns-prefetch-control",
											"value": "off"
										},
										{
											"key": "x-frame-options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "strict-transport-security",
											"value": "max-age=15552000; includeSubDomains"
										},
										{
											"key": "x-download-options",
											"value": "noopen"
										},
										{
											"key": "x-content-type-options",
											"value": "nosniff"
										},
										{
											"key": "x-xss-protection",
											"value": "1; mode=block"
										},
										{
											"key": "x-moesif-transaction-id",
											"value": "00727b8c-c0fd-4063-8d7d-4052a021260f"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "54"
										},
										{
											"key": "Date",
											"value": "Sat, 07 Oct 2023 16:48:26 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"body": "{\n    \"quantidade\": \"quantidade deve ser um inteiro\"\n}"
								}
							]
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.sendRequest({",
									"    url: pm.environment.get('baseUrl') + '/login',",
									"    method: 'POST',",
									"    header: {",
									"        'Accept': 'application/json',",
									"        'Content-Type': 'application/json'",
									"      },",
									"    body: {",
									"        mode: 'raw',",
									"        raw: JSON.stringify({",
									"            \"email\": pm.collectionVariables.get('adminEmail'),",
									"            \"password\": pm.collectionVariables.get('adminPassword')",
									"        })",
									"    }",
									"}, function (err, res) {",
									"    pm.collectionVariables.set('token', res.json().authorization);",
									"});",
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "Listar produtos cadastrados",
					"item": [
						{
							"name": "CT_057: Obter uma lista de produtos cadastrados",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Checks the response body\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.quantidade).to.be.a('number');\r",
											"    pm.expect(jsonData.produtos).lengthOf(jsonData.quantidade);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/produtos",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"produtos"
									]
								}
							},
							"response": [
								{
									"name": "Obter uma lista de produtos cadastrados",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/produtos",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"produtos"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "x-dns-prefetch-control",
											"value": "off"
										},
										{
											"key": "x-frame-options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "strict-transport-security",
											"value": "max-age=15552000; includeSubDomains"
										},
										{
											"key": "x-download-options",
											"value": "noopen"
										},
										{
											"key": "x-content-type-options",
											"value": "nosniff"
										},
										{
											"key": "x-xss-protection",
											"value": "1; mode=block"
										},
										{
											"key": "x-moesif-transaction-id",
											"value": "1dcdfe4b-b75e-4bd7-94df-a0eb60f2eb19"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "19306"
										},
										{
											"key": "Date",
											"value": "Sat, 07 Oct 2023 16:48:50 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"body": "{\n    \"quantidade\": 73,\n    \"produtos\": [\n        {\n            \"nome\": \"Practical Frozen Chicken\",\n            \"preco\": 850,\n            \"descricao\": \"transmitting the capacitor won't do anything, we need to parse the haptic SQL program!\",\n            \"quantidade\": 31,\n            \"_id\": \"0XGku8R1qU9kzbXK\"\n        },\n        {\n            \"nome\": \"Ergonomic Fresh Fish\",\n            \"preco\": 837,\n            \"descricao\": \"I'll navigate the wireless FTP matrix, that should sensor the RAM circuit!\",\n            \"quantidade\": 277,\n            \"_id\": \"19yaddeP74cMmriu\"\n        },\n        {\n            \"nome\": \"Licensed Metal Table\",\n            \"preco\": 667,\n            \"descricao\": \"Use the 1080p PNG protocol, then you can transmit the primary system!\",\n            \"quantidade\": 761,\n            \"_id\": \"1q0HdFIea3K3vczf\"\n        },\n        {\n            \"nome\": \"Fantastic Soft Soap\",\n            \"preco\": 649,\n            \"descricao\": \"Use the redundant FTP panel, then you can quantify the multi-byte bandwidth!\",\n            \"quantidade\": 225,\n            \"_id\": \"2k1HRTlzqQKlkEI1\"\n        },\n        {\n            \"nome\": \"Incredible Fresh Ball\",\n            \"preco\": 292,\n            \"descricao\": \"The SSL bandwidth is down, copy the online microchip so we can input the SSL sensor!\",\n            \"quantidade\": 554,\n            \"_id\": \"2q0Vj3Y4iwAi7st3\"\n        },\n        {\n            \"nome\": \"Generic Plastic Chips\",\n            \"preco\": 113,\n            \"descricao\": \"The USB firewall is down, copy the open-source firewall so we can index the THX interface!\",\n            \"quantidade\": 590,\n            \"_id\": \"3144p5quxR4iXoa7\"\n        },\n        {\n            \"nome\": \"Practical Granite Ball\",\n            \"preco\": 145,\n            \"descricao\": \"The THX firewall is down, connect the back-end sensor so we can index the SMTP alarm!\",\n            \"quantidade\": 126,\n            \"_id\": \"3avdDbRX5toWDtYd\"\n        },\n        {\n            \"nome\": \"Generic Wooden Cheese\",\n            \"preco\": 660,\n            \"descricao\": \"Use the back-end RSS bus, then you can back up the open-source driver!\",\n            \"quantidade\": 196,\n            \"_id\": \"4o3AWF4ynOsZv0lH\"\n        },\n        {\n            \"nome\": \"Licensed Rubber Table\",\n            \"preco\": 572,\n            \"descricao\": \"Use the wireless HTTP microchip, then you can navigate the digital array!\",\n            \"quantidade\": 470,\n            \"_id\": \"6Om4Pgu0PrJmGLzd\"\n        },\n        {\n            \"nome\": \"Fantastic Steel Bike\",\n            \"preco\": 151,\n            \"descricao\": \"Try to input the HDD system, maybe it will transmit the bluetooth matrix!\",\n            \"quantidade\": 270,\n            \"_id\": \"74F2cwn6G7yvIQZZ\"\n        },\n        {\n            \"nome\": \"\",\n            \"preco\": 195,\n            \"descricao\": \"We need to compress the 1080p ADP feed!\",\n            \"quantidade\": 352,\n            \"_id\": \"8TgSJVLqoVEWXEEN\"\n        },\n        {\n            \"nome\": \"Logitech MX Vertical\",\n            \"preco\": 470,\n            \"descricao\": \"Mouse\",\n            \"quantidade\": 364,\n            \"_id\": \"BeeJh5lz3k6kSIzA\"\n        },\n        {\n            \"nome\": \"Practical Concrete Ball\",\n            \"preco\": 714,\n            \"descricao\": \"I'll reboot the solid state SAS program, that should firewall the IB transmitter!\",\n            \"quantidade\": 860,\n            \"_id\": \"BriJwPg1a0GepKW4\"\n        },\n        {\n            \"nome\": \"Fantastic Granite Car\",\n            \"preco\": 955,\n            \"descricao\": \"If we reboot the transmitter, we can get to the SSL pixel through the multi-byte JBOD transmitter!\",\n            \"quantidade\": 370,\n            \"_id\": \"Bs9iy5MKuspT3FMZ\"\n        },\n        {\n            \"nome\": \"Refined Rubber Shoes\",\n            \"preco\": 51,\n            \"descricao\": \"If we calculate the hard drive, we can get to the RAM program through the digital RAM program!\",\n            \"quantidade\": 179,\n            \"_id\": \"CxAfYrFHDP7bRezq\"\n        },\n        {\n            \"nome\": \"Incredible Soft Car\",\n            \"preco\": 57,\n            \"descricao\": \"The IB array is down, calculate the back-end alarm so we can index the COM matrix!\",\n            \"quantidade\": 119,\n            \"_id\": \"Dpx5TVFN30opspyt\"\n        },\n        {\n            \"nome\": \"Handcrafted Frozen Salad\",\n            \"preco\": 372,\n            \"descricao\": \"We need to parse the neural JBOD monitor!\",\n            \"quantidade\": 773,\n            \"_id\": \"EGC6mwMTXtxdEuNH\"\n        },\n        {\n            \"nome\": \"Handcrafted Cotton Chair\",\n            \"preco\": 654,\n            \"descricao\": \"You can't program the feed without compressing the bluetooth SMS matrix!\",\n            \"quantidade\": 412,\n            \"_id\": \"GGBLzTkqsclGs9CP\"\n        },\n        {\n            \"nome\": \"Refined Cotton Hat\",\n            \"preco\": 179,\n            \"descricao\": \"If we copy the bus, we can get to the EXE protocol through the redundant AI program!\",\n            \"quantidade\": 504,\n            \"_id\": \"HW4RutBBZBOsckV9\"\n        },\n        {\n            \"nome\": \"Tasty Rubber Salad\",\n            \"preco\": 580,\n            \"descricao\": \"Try to compress the COM program, maybe it will override the online firewall!\",\n            \"quantidade\": 773,\n            \"_id\": \"I2gyGL56yWhcSvue\"\n        },\n        {\n            \"nome\": \"Samsung 60 polegadas\",\n            \"preco\": 5240,\n            \"descricao\": \"TV\",\n            \"quantidade\": 49977,\n            \"_id\": \"K6leHdftCeOJj8BJ\"\n        },\n        {\n            \"nome\": \"Unbranded Granite Bacon\",\n            \"preco\": 623,\n            \"descricao\": \"Use the mobile GB application, then you can compress the virtual transmitter!\",\n            \"quantidade\": 422,\n            \"_id\": \"KS4Vh9BkX9nnz0lp\"\n        },\n        {\n            \"nome\": \"Sleek Soft Car\",\n            \"preco\": 225,\n            \"descricao\": \"You can't bypass the monitor without copying the back-end SQL card!\",\n            \"quantidade\": 954,\n            \"_id\": \"KsUqAcBZ8PuviZTA\"\n        },\n        {\n            \"nome\": \"Gorgeous Steel Car\",\n            \"preco\": 884,\n            \"descricao\": \"copying the monitor won't do anything, we need to bypass the bluetooth SAS pixel!\",\n            \"quantidade\": 488,\n            \"_id\": \"MPyb2dNrrt0FMngQ\"\n        },\n        {\n            \"nome\": \"Tasty Soft Chair\",\n            \"preco\": 920,\n            \"descricao\": \"If we parse the pixel, we can get to the PCI pixel through the haptic AGP bandwidth!\",\n            \"quantidade\": 239,\n            \"_id\": \"MU0tkmR8SaolVNPo\"\n        },\n        {\n            \"nome\": \"Awesome Fresh Keyboard\",\n            \"preco\": 546,\n            \"descricao\": \"I'll calculate the bluetooth THX firewall, that should alarm the GB microchip!\",\n            \"quantidade\": 520,\n            \"_id\": \"PLc9FLgDsLWAGBEP\"\n        },\n        {\n            \"nome\": \"Rustic Fresh Bacon\",\n            \"preco\": 520,\n            \"descricao\": \"Try to back up the XML microchip, maybe it will bypass the haptic monitor!\",\n            \"quantidade\": 658,\n            \"_id\": \"PbZZzaTpOxucumFD\"\n        },\n        {\n            \"nome\": \"Fantastic Frozen Chair\",\n            \"preco\": 651,\n            \"descricao\": \"The ADP bandwidth is down, parse the 1080p pixel so we can program the JBOD array!\",\n            \"quantidade\": 761,\n            \"_id\": \"QmBHkqPZiUlMtt54\"\n        },\n        {\n            \"nome\": \"Gorgeous Metal Table\",\n            \"preco\": 742,\n            \"descricao\": \" \",\n            \"quantidade\": 903,\n            \"_id\": \"RMHWSEfMdT6n6VyU\"\n        },\n        {\n            \"nome\": \"Practical Rubber Tuna\",\n            \"preco\": 127,\n            \"descricao\": \"The SMTP card is down, generate the mobile monitor so we can parse the RAM card!\",\n            \"quantidade\": 29,\n            \"_id\": \"RxuZK4zSmJeBYlFv\"\n        },\n        {\n            \"nome\": \"Unbranded Soft Bacon\",\n            \"preco\": 954,\n            \"descricao\": \"Use the primary SCSI port, then you can synthesize the cross-platform matrix!\",\n            \"quantidade\": 104,\n            \"_id\": \"S0SNrw8RQFZIiB66\"\n        },\n        {\n            \"nome\": \"Fantastic Wooden Bike\",\n            \"preco\": 294,\n            \"descricao\": \"You can't override the circuit without compressing the mobile ADP feed!\",\n            \"quantidade\": 32,\n            \"_id\": \"SRpaUYoRlShdNSAG\"\n        },\n        {\n            \"nome\": \"Gorgeous Concrete Shirt\",\n            \"preco\": 949,\n            \"descricao\": \"transmitting the port won't do anything, we need to input the multi-byte TCP firewall!\",\n            \"quantidade\": 568,\n            \"_id\": \"THLk3obbX2S0Vw4X\"\n        },\n        {\n            \"nome\": \"Unbranded Frozen Fish\",\n            \"preco\": 335,\n            \"descricao\": \"Try to copy the SMTP application, maybe it will program the digital capacitor!\",\n            \"quantidade\": 937,\n            \"_id\": \"TYYrabDIHNjnq3FG\"\n        },\n        {\n            \"nome\": \"Sleek Frozen Gloves\",\n            \"preco\": 292,\n            \"descricao\": \"copying the card won't do anything, we need to connect the neural FTP hard drive!\",\n            \"quantidade\": 81,\n            \"_id\": \"UWkrYyYSQBP52tPQ\"\n        },\n        {\n            \"nome\": \"Unbranded Rubber Mouse\",\n            \"preco\": 405,\n            \"descricao\": \"I'll compress the haptic AGP circuit, that should microchip the XML bus!\",\n            \"quantidade\": 594,\n            \"_id\": \"UY7OGbl1oNt4zeEX\"\n        },\n        {\n            \"nome\": \"Incredible Concrete Sausages\",\n            \"preco\": 514,\n            \"descricao\": \"You can't compress the hard drive without parsing the primary CSS port!\",\n            \"quantidade\": 131,\n            \"_id\": \"WPMeYL3ps4gjpPAB\"\n        },\n        {\n            \"nome\": \"Tasty Concrete Mouse\",\n            \"preco\": 68,\n            \"descricao\": \"Use the redundant SMS matrix, then you can quantify the 1080p interface!\",\n            \"quantidade\": 492,\n            \"_id\": \"WbHII1lXLte2qlYr\"\n        },\n        {\n            \"nome\": \"Awesome Soft Salad\",\n            \"preco\": 153,\n            \"descricao\": \"I'll hack the multi-byte AI circuit, that should transmitter the ADP transmitter!\",\n            \"quantidade\": 155,\n            \"_id\": \"WjtXo5SGSYAesJW7\"\n        },\n        {\n            \"nome\": \"Sleek Granite Computer\",\n            \"preco\": 644,\n            \"descricao\": \"We need to generate the haptic SMTP bandwidth!\",\n            \"quantidade\": 973,\n            \"_id\": \"WtHyWz4l6DOA6joa\"\n        },\n        {\n            \"nome\": \"Fantastic Wooden Soap\",\n            \"preco\": 53,\n            \"descricao\": \"If we generate the microchip, we can get to the PNG alarm through the online COM application!\",\n            \"quantidade\": 323,\n            \"_id\": \"XQKU9eVzWBkwT8u0\"\n        },\n        {\n            \"nome\": \"Unbranded Granite Gloves\",\n            \"preco\": 689,\n            \"descricao\": \"overriding the firewall won't do anything, we need to synthesize the primary GB driver!\",\n            \"quantidade\": 600,\n            \"_id\": \"YCsgcFdPbv4DZMFv\"\n        },\n        {\n            \"nome\": \"Handcrafted Concrete Tuna\",\n            \"preco\": 594,\n            \"descricao\": \"I'll compress the 1080p JBOD panel, that should microchip the XML matrix!\",\n            \"quantidade\": 108,\n            \"_id\": \"YnsqLb1V7uEQHaOz\"\n        },\n        {\n            \"nome\": \"Licensed Cotton Chair\",\n            \"preco\": 377,\n            \"descricao\": \"Try to bypass the HDD pixel, maybe it will connect the solid state firewall!\",\n            \"quantidade\": 865,\n            \"_id\": \"bYuXrAJogcv4Q2Dp\"\n        },\n        {\n            \"nome\": \"Tasty Metal Fish\",\n            \"preco\": 20,\n            \"descricao\": \"The AGP bus is down, program the online alarm so we can synthesize the USB card!\",\n            \"quantidade\": 908,\n            \"_id\": \"cQMHJokQ8IGka7X7\"\n        },\n        {\n            \"nome\": \"Refined Rubber Cheese\",\n            \"preco\": 509,\n            \"descricao\": \"If we index the microchip, we can get to the FTP bus through the haptic XML microchip!\",\n            \"quantidade\": 896,\n            \"_id\": \"dVByNYYCpMfaqIth\"\n        },\n        {\n            \"nome\": \"Awesome Rubber Keyboard\",\n            \"preco\": 347,\n            \"descricao\": \"The USB sensor is down, transmit the optical capacitor so we can reboot the XML feed!\",\n            \"quantidade\": 762,\n            \"_id\": \"dvP7235lK9o3hXKp\"\n        },\n        {\n            \"nome\": \"Ergonomic Concrete Shoes\",\n            \"preco\": 324,\n            \"descricao\": \"You can't input the monitor without synthesizing the solid state ADP microchip!\",\n            \"quantidade\": 129,\n            \"_id\": \"e9swvgSfJLc54Vv1\"\n        },\n        {\n            \"nome\": \"Tasty Plastic Tuna\",\n            \"preco\": 346,\n            \"descricao\": \"If we input the hard drive, we can get to the AGP panel through the redundant PCI microchip!\",\n            \"quantidade\": 1000,\n            \"_id\": \"fGA1b17sMNVucAhY\"\n        },\n        {\n            \"nome\": \"Licensed Wooden Table\",\n            \"preco\": 385,\n            \"descricao\": \"Try to reboot the JBOD capacitor, maybe it will compress the virtual feed!\",\n            \"quantidade\": 352,\n            \"_id\": \"gOW96V9YGEAW5aBn\"\n        },\n        {\n            \"nome\": \"Small Steel Hat\",\n            \"preco\": 294,\n            \"descricao\": \"You can't hack the monitor without hacking the multi-byte SQL port!\",\n            \"quantidade\": 856,\n            \"_id\": \"i7nhN33Ki10VzMBA\"\n        },\n        {\n            \"nome\": \"Refined Plastic Bacon\",\n            \"preco\": 28,\n            \"descricao\": \"If we quantify the matrix, we can get to the TCP monitor through the solid state JBOD hard drive!\",\n            \"quantidade\": 868,\n            \"_id\": \"iXpw09izUNwjwgdf\"\n        },\n        {\n            \"nome\": \"Unbranded Wooden Pants\",\n            \"preco\": 272,\n            \"descricao\": \"You can't input the sensor without transmitting the digital AGP bus!\",\n            \"quantidade\": 947,\n            \"_id\": \"iwDvaZ7q7ttfYJhO\"\n        },\n        {\n            \"nome\": \"Unbranded Granite Sausages\",\n            \"preco\": 898,\n            \"descricao\": \"The FTP system is down, override the optical card so we can synthesize the USB bus!\",\n            \"quantidade\": 71,\n            \"_id\": \"k5b8YYHqxA8yHFCW\"\n        },\n        {\n            \"nome\": \"Awesome Granite Shoes\",\n            \"preco\": 762,\n            \"descricao\": \"generating the port won't do anything, we need to calculate the neural SQL driver!\",\n            \"quantidade\": 605,\n            \"_id\": \"kF7VLedqcbYPVGcx\"\n        },\n        {\n            \"nome\": \"Fantastic Soft Table\",\n            \"preco\": 657,\n            \"descricao\": \"transmitting the bus won't do anything, we need to compress the virtual GB system!\",\n            \"quantidade\": 829,\n            \"_id\": \"kH8fvy7k8hH5xY1n\"\n        },\n        {\n            \"nome\": \"Fantastic Steel Mouse\",\n            \"preco\": 305,\n            \"descricao\": \"Use the bluetooth GB hard drive, then you can parse the auxiliary port!\",\n            \"quantidade\": 146,\n            \"_id\": \"kQizulwOkTuRSEJ3\"\n        },\n        {\n            \"nome\": \"Refined Wooden Bacon\",\n            \"preco\": 961,\n            \"descricao\": \"Use the redundant CSS pixel, then you can bypass the multi-byte firewall!\",\n            \"quantidade\": 698,\n            \"_id\": \"nEdYl6HV5erN0NPh\"\n        },\n        {\n            \"nome\": \"Practical Plastic Hat\",\n            \"preco\": 500,\n            \"descricao\": \"indexing the alarm won't do anything, we need to input the 1080p SDD protocol!\",\n            \"quantidade\": 974,\n            \"_id\": \"nFtiQOMMCkBx6bm7\"\n        },\n        {\n            \"nome\": \"Practical Metal Cheese\",\n            \"preco\": 944,\n            \"descricao\": \"You can't back up the capacitor without generating the haptic AI bus!\",\n            \"quantidade\": 437,\n            \"_id\": \"nUEvzZdusGPugtvY\"\n        },\n        {\n            \"nome\": \"Incredible Metal Chair\",\n            \"preco\": 952,\n            \"descricao\": \"I'll compress the 1080p SMS bus, that should monitor the FTP sensor!\",\n            \"quantidade\": 543,\n            \"_id\": \"oQSBbZSPgd7PMzRG\"\n        },\n        {\n            \"nome\": \"Practical Cotton Chicken\",\n            \"preco\": 194,\n            \"descricao\": \"Try to program the PNG transmitter, maybe it will copy the digital port!\",\n            \"quantidade\": 795,\n            \"_id\": \"ouw9IrqwPWYjuWOh\"\n        },\n        {\n            \"nome\": \"Awesome Cotton Tuna\",\n            \"preco\": 537,\n            \"descricao\": \"compressing the panel won't do anything, we need to synthesize the cross-platform SMTP protocol!\",\n            \"quantidade\": 597,\n            \"_id\": \"p0RRviwfr8nqsv5J\"\n        },\n        {\n            \"nome\": \"Ergonomic Rubber Soap\",\n            \"preco\": 572,\n            \"descricao\": \"Use the auxiliary THX interface, then you can reboot the bluetooth interface!\",\n            \"quantidade\": 128,\n            \"_id\": \"qat1aoXJWjgMN0fN\"\n        },\n        {\n            \"nome\": \"Intelligent Metal Bacon\",\n            \"preco\": 56,\n            \"descricao\": \"navigating the alarm won't do anything, we need to input the optical RSS protocol!\",\n            \"quantidade\": 974,\n            \"_id\": \"ql9g2UUOwE4xzw5W\"\n        },\n        {\n            \"nome\": \"Practical Rubber Chips\",\n            \"preco\": 849,\n            \"descricao\": \"Use the solid state CSS sensor, then you can compress the neural matrix!\",\n            \"quantidade\": 790,\n            \"_id\": \"sVzmD5F72iw0LS9A\"\n        },\n        {\n            \"nome\": \"Intelligent Steel Salad\",\n            \"preco\": 72,\n            \"descricao\": \"synthesizing the capacitor won't do anything, we need to transmit the redundant XSS array!\",\n            \"quantidade\": 43,\n            \"_id\": \"u2FkIxP5t0L4bREH\"\n        },\n        {\n            \"nome\": \"Fantastic Frozen Computer\",\n            \"preco\": 556,\n            \"descricao\": \"hacking the feed won't do anything, we need to back up the optical PCI application!\",\n            \"quantidade\": 956,\n            \"_id\": \"u6dcA82Z8VOb6nvM\"\n        },\n        {\n            \"nome\": \"Intelligent Concrete Salad\",\n            \"preco\": 519,\n            \"descricao\": \"Try to parse the FTP array, maybe it will generate the auxiliary bus!\",\n            \"quantidade\": 641,\n            \"_id\": \"wMpvpEJ99zvncEbM\"\n        },\n        {\n            \"nome\": \"Practical Frozen Pizza\",\n            \"preco\": 771,\n            \"descricao\": \"We need to reboot the back-end SAS panel!\",\n            \"quantidade\": 617,\n            \"_id\": \"xAGRf1FsOShTfgaF\"\n        },\n        {\n            \"nome\": \"Licensed Granite Hat\",\n            \"preco\": 38,\n            \"descricao\": \"The SMTP hard drive is down, override the digital circuit so we can back up the ADP hard drive!\",\n            \"quantidade\": 985,\n            \"_id\": \"yqcnu00EzMnxkaSt\"\n        },\n        {\n            \"nome\": \"Handcrafted Fresh Chicken\",\n            \"preco\": 197,\n            \"descricao\": \"I'll override the primary XSS circuit, that should bandwidth the FTP program!\",\n            \"quantidade\": 766,\n            \"_id\": \"zRKRx9RGwqpYuc9W\"\n        },\n        {\n            \"nome\": \"Practical Granite Tuna\",\n            \"preco\": 248,\n            \"descricao\": \"programming the circuit won't do anything, we need to back up the neural SSL bus!\",\n            \"quantidade\": 335,\n            \"_id\": \"zf5fYfRhg741QVbZ\"\n        }\n    ]\n}"
								}
							]
						}
					]
				},
				{
					"name": "{_id}",
					"item": [
						{
							"name": "Buscar produto por ID",
							"item": [
								{
									"name": "CT_058: Buscar por produto válido",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Checks the response body\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.nome).to.equal(pm.collectionVariables.get('defaultProductName'));\r",
													"    pm.expect(jsonData.preco).to.be.greaterThan(0);\r",
													"    pm.expect(jsonData.descricao).to.be.a('string');\r",
													"    pm.expect(jsonData.quantidade).to.be.a('number');\r",
													"    pm.expect(jsonData._id).to.equal(pm.collectionVariables.get('defaultProductId'));\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/produtos/:_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"produtos",
												":_id"
											],
											"variable": [
												{
													"key": "_id",
													"value": "{{defaultProductId}}"
												}
											]
										}
									},
									"response": [
										{
											"name": "Buscar por produto válido",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/produtos/:_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"produtos",
														":_id"
													],
													"variable": [
														{
															"key": "_id",
															"value": "{{defaultProductId}}"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "x-dns-prefetch-control",
													"value": "off"
												},
												{
													"key": "x-frame-options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "strict-transport-security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "x-download-options",
													"value": "noopen"
												},
												{
													"key": "x-content-type-options",
													"value": "nosniff"
												},
												{
													"key": "x-xss-protection",
													"value": "1; mode=block"
												},
												{
													"key": "x-moesif-transaction-id",
													"value": "ecb58ec3-630c-412d-a6af-6ac63c52f593"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "136"
												},
												{
													"key": "Date",
													"value": "Sat, 07 Oct 2023 16:49:21 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"body": "{\n    \"nome\": \"Logitech MX Vertical\",\n    \"preco\": 470,\n    \"descricao\": \"Mouse\",\n    \"quantidade\": 364,\n    \"_id\": \"BeeJh5lz3k6kSIzA\"\n}"
										}
									]
								},
								{
									"name": "CT_059: Buscar por produto inexistente",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"Checks the response body\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.message).to.eql(\"Produto não encontrado\");\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/produtos/:_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"produtos",
												":_id"
											],
											"variable": [
												{
													"key": "_id",
													"value": "{{$randomPassword}}"
												}
											]
										}
									},
									"response": [
										{
											"name": "Buscar por produto inexistente",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/produtos/:_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"produtos",
														":_id"
													],
													"variable": [
														{
															"key": "_id",
															"value": "{{$randomPassword}}"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "x-dns-prefetch-control",
													"value": "off"
												},
												{
													"key": "x-frame-options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "strict-transport-security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "x-download-options",
													"value": "noopen"
												},
												{
													"key": "x-content-type-options",
													"value": "nosniff"
												},
												{
													"key": "x-xss-protection",
													"value": "1; mode=block"
												},
												{
													"key": "x-moesif-transaction-id",
													"value": "503884fe-afa0-4b70-b1c9-27bebf2f2acf"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "44"
												},
												{
													"key": "Date",
													"value": "Sat, 07 Oct 2023 16:50:01 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"body": "{\n    \"message\": \"Produto não encontrado\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "Excluir produto",
							"item": [
								{
									"name": "CT_060: Excluir produto válido como administrador",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Checks the response body\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.message).to.eql(\"Registro excluído com sucesso\");\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "value",
													"value": "{{token}}",
													"type": "string"
												},
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/produtos/:_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"produtos",
												":_id"
											],
											"variable": [
												{
													"key": "_id",
													"value": "{{newProductId}}"
												}
											]
										}
									},
									"response": [
										{
											"name": "Excluir produto válido como administrador",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/produtos/:_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"produtos",
														":_id"
													],
													"variable": [
														{
															"key": "_id",
															"value": "{{newProductId}}"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "x-dns-prefetch-control",
													"value": "off"
												},
												{
													"key": "x-frame-options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "strict-transport-security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "x-download-options",
													"value": "noopen"
												},
												{
													"key": "x-content-type-options",
													"value": "nosniff"
												},
												{
													"key": "x-xss-protection",
													"value": "1; mode=block"
												},
												{
													"key": "x-moesif-transaction-id",
													"value": "0d261538-99d1-41f2-923c-a1e52d9116a9"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "51"
												},
												{
													"key": "Date",
													"value": "Sat, 07 Oct 2023 16:51:04 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"body": "{\n    \"message\": \"Registro excluído com sucesso\"\n}"
										}
									]
								},
								{
									"name": "CT_061: Excluir produto inexistente",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Checks the response body\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.message).to.eql(\"Nenhum registro excluído\");\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "value",
													"value": "{{token}}",
													"type": "string"
												},
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/produtos/:_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"produtos",
												":_id"
											],
											"variable": [
												{
													"key": "_id",
													"value": "{{$randomPassword}}"
												}
											]
										}
									},
									"response": [
										{
											"name": "Excluir produto inexistente",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/produtos/:_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"produtos",
														":_id"
													],
													"variable": [
														{
															"key": "_id",
															"value": "{{$randomPassword}}"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "x-dns-prefetch-control",
													"value": "off"
												},
												{
													"key": "x-frame-options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "strict-transport-security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "x-download-options",
													"value": "noopen"
												},
												{
													"key": "x-content-type-options",
													"value": "nosniff"
												},
												{
													"key": "x-xss-protection",
													"value": "1; mode=block"
												},
												{
													"key": "x-moesif-transaction-id",
													"value": "9d830a1c-5fe8-4112-8bd5-8db534bea78f"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "46"
												},
												{
													"key": "Date",
													"value": "Sat, 07 Oct 2023 16:51:46 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"body": "{\n    \"message\": \"Nenhum registro excluído\"\n}"
										}
									]
								},
								{
									"name": "CT_062: Excluir produto pertencente à um carrinho",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"Checks the response body\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.message).to.equal('Não é permitido excluir produto que faz parte de carrinho');\r",
													"    pm.expect(jsonData.idCarrinhos).length.greaterThan(0);\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "value",
													"value": "{{token}}",
													"type": "string"
												},
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/produtos/:_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"produtos",
												":_id"
											],
											"variable": [
												{
													"key": "_id",
													"value": "{{defaultProductId}}"
												}
											]
										}
									},
									"response": [
										{
											"name": "Excluir produto pertencente à um carrinho",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/produtos/:_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"produtos",
														":_id"
													],
													"variable": [
														{
															"key": "_id",
															"value": "{{defaultProductId}}"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "x-dns-prefetch-control",
													"value": "off"
												},
												{
													"key": "x-frame-options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "strict-transport-security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "x-download-options",
													"value": "noopen"
												},
												{
													"key": "x-content-type-options",
													"value": "nosniff"
												},
												{
													"key": "x-xss-protection",
													"value": "1; mode=block"
												},
												{
													"key": "x-moesif-transaction-id",
													"value": "5a383589-4d5e-42d8-9e22-02801853a43b"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "527"
												},
												{
													"key": "Date",
													"value": "Sat, 07 Oct 2023 16:52:08 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"body": "{\n    \"message\": \"Não é permitido excluir produto que faz parte de carrinho\",\n    \"idCarrinhos\": [\n        \"3NCv8wJiFAAkNz8t\",\n        \"5b5QfQWDyJ36XSas\",\n        \"A6oQqmSAOhobA4zf\",\n        \"CUITsJ2u0W98WGzN\",\n        \"ETZ1zLI6LgK6dhm8\",\n        \"OHkoE2yvwtgc6DVa\",\n        \"ON1WqSEuUMkDqTtt\",\n        \"VGBAs92MPGeHVYlW\",\n        \"asW4PElV6LavRtzL\",\n        \"dDO8dmjnGrrFECqo\",\n        \"o0hQ4onALOXFfWNB\",\n        \"qbMqntef4iTOwWfg\",\n        \"tbOyHVMDpdWwuwE1\",\n        \"xyLXqXqffEToc3Oa\",\n        \"zN3WdkIYIkOQLkoP\"\n    ]\n}"
										}
									]
								},
								{
									"name": "CT_063: Excluir produto válido como usuário comum",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const name = pm.variables.replaceIn('{{$randomFullName}}');\r",
													"pm.collectionVariables.set(\"randomName\", name);\r",
													"const email = pm.variables.replaceIn('{{$randomExampleEmail}}');\r",
													"pm.collectionVariables.set(\"randomEmail\", email);\r",
													"\r",
													"pm.sendRequest({\r",
													"    url: pm.environment.get('baseUrl') + '/usuarios',\r",
													"    method: 'POST',\r",
													"    header: {\r",
													"        'Accept': 'application/json',\r",
													"        'Content-Type': 'application/json'\r",
													"      },\r",
													"    body: {\r",
													"        mode: 'raw',\r",
													"        raw: JSON.stringify({\r",
													"            \"nome\": pm.collectionVariables.get('randomName'),\r",
													"            \"email\": pm.collectionVariables.get('randomEmail'),\r",
													"            \"password\": pm.collectionVariables.get('validPassword'),\r",
													"            \"administrador\": \"false\"\r",
													"        })\r",
													"    }\r",
													"}, function (err, res) {\r",
													"    if (err) {\r",
													"            console.error(err);\r",
													"            return;\r",
													"    }\r",
													"\r",
													"    pm.sendRequest({\r",
													"        url: pm.environment.get('baseUrl') + '/login',\r",
													"        method: 'POST',\r",
													"        header: {\r",
													"            'Accept': 'application/json',\r",
													"            'Content-Type': 'application/json'\r",
													"        },\r",
													"        body: {\r",
													"            mode: 'raw',\r",
													"            raw: JSON.stringify({\r",
													"                \"email\": pm.collectionVariables.get('randomEmail'),\r",
													"                \"password\": pm.collectionVariables.get('validPassword')\r",
													"            })\r",
													"        }\r",
													"    }, function (err, res) {\r",
													"        if (err) {\r",
													"            console.error(err);\r",
													"            return;\r",
													"        }\r",
													"\r",
													"        pm.collectionVariables.set('token', res.json().authorization);\r",
													"    });\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 403\", function () {\r",
													"    pm.response.to.have.status(403);\r",
													"});\r",
													"\r",
													"pm.test(\"Checks the response body\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.message).to.eql(\"Rota exclusiva para administradores\");\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "value",
													"value": "{{token}}",
													"type": "string"
												},
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/produtos/:_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"produtos",
												":_id"
											],
											"variable": [
												{
													"key": "_id",
													"value": "{{newProductId}}"
												}
											]
										}
									},
									"response": [
										{
											"name": "Excluir produto válido como usuário comum",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/produtos/:_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"produtos",
														":_id"
													],
													"variable": [
														{
															"key": "_id",
															"value": "{{newProductId}}"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "x-dns-prefetch-control",
													"value": "off"
												},
												{
													"key": "x-frame-options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "strict-transport-security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "x-download-options",
													"value": "noopen"
												},
												{
													"key": "x-content-type-options",
													"value": "nosniff"
												},
												{
													"key": "x-xss-protection",
													"value": "1; mode=block"
												},
												{
													"key": "x-moesif-transaction-id",
													"value": "0489f71c-f2b5-4d12-a4f7-f32981c27703"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "56"
												},
												{
													"key": "Date",
													"value": "Sat, 07 Oct 2023 16:53:18 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"body": "{\n    \"message\": \"Rota exclusiva para administradores\"\n}"
										}
									]
								},
								{
									"name": "CT_064: Excluir produto válido sem autenticação",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 401\", function () {\r",
													"    pm.response.to.have.status(401);\r",
													"});\r",
													"\r",
													"pm.test(\"Checks the response body\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.message).to.eql(\"Token de acesso ausente, inválido, expirado ou usuário do token não existe mais\");\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/produtos/:_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"produtos",
												":_id"
											],
											"variable": [
												{
													"key": "_id",
													"value": "{{newProductId}}"
												}
											]
										}
									},
									"response": [
										{
											"name": "Excluir produto válido sem autenticação",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/produtos/:_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"produtos",
														":_id"
													],
													"variable": [
														{
															"key": "_id",
															"value": "{{newProductId}}"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "x-dns-prefetch-control",
													"value": "off"
												},
												{
													"key": "x-frame-options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "strict-transport-security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "x-download-options",
													"value": "noopen"
												},
												{
													"key": "x-content-type-options",
													"value": "nosniff"
												},
												{
													"key": "x-xss-protection",
													"value": "1; mode=block"
												},
												{
													"key": "x-moesif-transaction-id",
													"value": "52d8205c-a239-4c39-af64-b94b775b6c63"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "103"
												},
												{
													"key": "Date",
													"value": "Sat, 07 Oct 2023 16:54:00 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"body": "{\n    \"message\": \"Token de acesso ausente, inválido, expirado ou usuário do token não existe mais\"\n}"
										}
									]
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.sendRequest({",
											"    url: pm.environment.get('baseUrl') + '/login',",
											"    method: 'POST',",
											"    header: {",
											"        'Accept': 'application/json',",
											"        'Content-Type': 'application/json'",
											"      },",
											"    body: {",
											"        mode: 'raw',",
											"        raw: JSON.stringify({",
											"            \"email\": pm.collectionVariables.get('adminEmail'),",
											"            \"password\": pm.collectionVariables.get('adminPassword')",
											"        })",
											"    }",
											"}, function (err, res) {",
											"    ",
											"    pm.collectionVariables.set('token', res.json().authorization);",
											"",
											"    const name = pm.variables.replaceIn('{{$randomProductName}}');",
											"    pm.collectionVariables.set(\"randomProductName\", name);",
											"    const price = pm.variables.replaceIn('{{$randomInt}}');",
											"    pm.collectionVariables.set(\"randomProductPrice\", price);",
											"    const description = pm.variables.replaceIn('{{$randomPhrase}}');",
											"    pm.collectionVariables.set(\"randomProductDescription\", description);",
											"    const quantity = pm.variables.replaceIn('{{$randomInt}}');",
											"    pm.collectionVariables.set(\"randomProductQuantity\", quantity);",
											"",
											"    pm.sendRequest({",
											"        url: pm.environment.get('baseUrl') + '/produtos',",
											"        method: 'POST',",
											"        header: {",
											"            'Accept': 'application/json',",
											"            'Content-Type': 'application/json',",
											"            'Authorization': pm.collectionVariables.get('token')",
											"        },",
											"        body: {",
											"            mode: 'raw',",
											"            raw: JSON.stringify({",
											"                \"nome\": pm.collectionVariables.get('randomProductName'),",
											"                \"preco\": pm.collectionVariables.get('randomProductPrice'),",
											"                \"descricao\": pm.collectionVariables.get('randomProductDescription'),",
											"                \"quantidade\": pm.collectionVariables.get('randomProductQuantity')",
											"            })",
											"        }",
											"    }, function (err, res) {",
											"        pm.collectionVariables.set('newProductId', res.json()._id);",
											"    });",
											"});",
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						},
						{
							"name": "Editar produto",
							"item": [
								{
									"name": "Produto válido",
									"item": [
										{
											"name": "CT_065: Atualizar produto válido como administrador",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"pm.test(\"Checks the response body\", function () {\r",
															"    var jsonData = pm.response.json();\r",
															"    pm.expect(jsonData.message).to.eql(\"Registro alterado com sucesso\");\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "value",
															"value": "{{token}}",
															"type": "string"
														},
														{
															"key": "key",
															"value": "Authorization",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n            \"nome\": \"{{$randomProductName}}\",\r\n            \"preco\": \"{{$randomInt}}\",\r\n            \"descricao\": \"{{$randomPhrase}}\",\r\n            \"quantidade\": \"{{$randomInt}}\"\r\n        }\r\n",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/produtos/:_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"produtos",
														":_id"
													],
													"variable": [
														{
															"key": "_id",
															"value": "{{newProductId}}"
														}
													]
												}
											},
											"response": [
												{
													"name": "Atualizar produto válido como administrador",
													"originalRequest": {
														"method": "PUT",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\r\n            \"nome\": \"{{$randomProductName}}\",\r\n            \"preco\": \"{{$randomInt}}\",\r\n            \"descricao\": \"{{$randomPhrase}}\",\r\n            \"quantidade\": \"{{$randomInt}}\"\r\n        }\r\n",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/produtos/:_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"produtos",
																":_id"
															],
															"variable": [
																{
																	"key": "_id",
																	"value": "{{newProductId}}"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Access-Control-Allow-Origin",
															"value": "*"
														},
														{
															"key": "x-dns-prefetch-control",
															"value": "off"
														},
														{
															"key": "x-frame-options",
															"value": "SAMEORIGIN"
														},
														{
															"key": "strict-transport-security",
															"value": "max-age=15552000; includeSubDomains"
														},
														{
															"key": "x-download-options",
															"value": "noopen"
														},
														{
															"key": "x-content-type-options",
															"value": "nosniff"
														},
														{
															"key": "x-xss-protection",
															"value": "1; mode=block"
														},
														{
															"key": "x-moesif-transaction-id",
															"value": "092ca97b-4902-4232-b88b-7ad6d1cea833"
														},
														{
															"key": "Content-Type",
															"value": "application/json; charset=utf-8"
														},
														{
															"key": "Content-Length",
															"value": "50"
														},
														{
															"key": "Date",
															"value": "Sat, 07 Oct 2023 16:59:55 GMT"
														},
														{
															"key": "Connection",
															"value": "keep-alive"
														},
														{
															"key": "Keep-Alive",
															"value": "timeout=5"
														}
													],
													"cookie": [],
													"body": "{\n    \"message\": \"Registro alterado com sucesso\"\n}"
												}
											]
										},
										{
											"name": "CT_066: Atualizar produto válido como usuário comum",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 403\", function () {\r",
															"    pm.response.to.have.status(403);\r",
															"});\r",
															"\r",
															"pm.test(\"Checks the response body\", function () {\r",
															"    var jsonData = pm.response.json();\r",
															"    pm.expect(jsonData.message).to.eql(\"Rota exclusiva para administradores\");\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"const name = pm.variables.replaceIn('{{$randomFullName}}');\r",
															"pm.collectionVariables.set(\"randomName\", name);\r",
															"const email = pm.variables.replaceIn('{{$randomExampleEmail}}');\r",
															"pm.collectionVariables.set(\"randomEmail\", email);\r",
															"\r",
															"pm.sendRequest({\r",
															"    url: pm.environment.get('baseUrl') + '/usuarios',\r",
															"    method: 'POST',\r",
															"    header: {\r",
															"        'Accept': 'application/json',\r",
															"        'Content-Type': 'application/json'\r",
															"      },\r",
															"    body: {\r",
															"        mode: 'raw',\r",
															"        raw: JSON.stringify({\r",
															"            \"nome\": pm.collectionVariables.get('randomName'),\r",
															"            \"email\": pm.collectionVariables.get('randomEmail'),\r",
															"            \"password\": pm.collectionVariables.get('validPassword'),\r",
															"            \"administrador\": \"false\"\r",
															"        })\r",
															"    }\r",
															"}, function (err, res) {\r",
															"    if (err) {\r",
															"            console.error(err);\r",
															"            return;\r",
															"    }\r",
															"\r",
															"    pm.sendRequest({\r",
															"        url: pm.environment.get('baseUrl') + '/login',\r",
															"        method: 'POST',\r",
															"        header: {\r",
															"            'Accept': 'application/json',\r",
															"            'Content-Type': 'application/json'\r",
															"        },\r",
															"        body: {\r",
															"            mode: 'raw',\r",
															"            raw: JSON.stringify({\r",
															"                \"email\": pm.collectionVariables.get('randomEmail'),\r",
															"                \"password\": pm.collectionVariables.get('validPassword')\r",
															"            })\r",
															"        }\r",
															"    }, function (err, res) {\r",
															"        if (err) {\r",
															"            console.error(err);\r",
															"            return;\r",
															"        }\r",
															"\r",
															"        pm.collectionVariables.set('token', res.json().authorization);\r",
															"    });\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "value",
															"value": "{{token}}",
															"type": "string"
														},
														{
															"key": "key",
															"value": "Authorization",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n            \"nome\": \"{{$randomProductName}}\",\r\n            \"preco\": \"{{$randomInt}}\",\r\n            \"descricao\": \"{{$randomPhrase}}\",\r\n            \"quantidade\": \"{{$randomInt}}\"\r\n        }\r\n",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/produtos/:_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"produtos",
														":_id"
													],
													"variable": [
														{
															"key": "_id",
															"value": "{{newProductId}}"
														}
													]
												}
											},
											"response": [
												{
													"name": "Atualizar produto válido como usuário comum",
													"originalRequest": {
														"method": "PUT",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\r\n            \"nome\": \"{{$randomProductName}}\",\r\n            \"preco\": \"{{$randomInt}}\",\r\n            \"descricao\": \"{{$randomPhrase}}\",\r\n            \"quantidade\": \"{{$randomInt}}\"\r\n        }\r\n",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/produtos/:_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"produtos",
																":_id"
															],
															"variable": [
																{
																	"key": "_id",
																	"value": "{{newProductId}}"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Access-Control-Allow-Origin",
															"value": "*"
														},
														{
															"key": "x-dns-prefetch-control",
															"value": "off"
														},
														{
															"key": "x-frame-options",
															"value": "SAMEORIGIN"
														},
														{
															"key": "strict-transport-security",
															"value": "max-age=15552000; includeSubDomains"
														},
														{
															"key": "x-download-options",
															"value": "noopen"
														},
														{
															"key": "x-content-type-options",
															"value": "nosniff"
														},
														{
															"key": "x-xss-protection",
															"value": "1; mode=block"
														},
														{
															"key": "x-moesif-transaction-id",
															"value": "7617aa8a-d157-429d-b5cb-a41264c34fda"
														},
														{
															"key": "Content-Type",
															"value": "application/json; charset=utf-8"
														},
														{
															"key": "Content-Length",
															"value": "56"
														},
														{
															"key": "Date",
															"value": "Sat, 07 Oct 2023 17:00:36 GMT"
														},
														{
															"key": "Connection",
															"value": "keep-alive"
														},
														{
															"key": "Keep-Alive",
															"value": "timeout=5"
														}
													],
													"cookie": [],
													"body": "{\n    \"message\": \"Rota exclusiva para administradores\"\n}"
												}
											]
										},
										{
											"name": "CT_067: Atualizar produto válido sem autenticação",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 401\", function () {\r",
															"    pm.response.to.have.status(401);\r",
															"});\r",
															"\r",
															"pm.test(\"Checks the response body\", function () {\r",
															"    var jsonData = pm.response.json();\r",
															"    pm.expect(jsonData.message).to.eql(\"Token de acesso ausente, inválido, expirado ou usuário do token não existe mais\");\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "noauth"
												},
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n            \"nome\": \"{{$randomProductName}}\",\r\n            \"preco\": \"{{$randomInt}}\",\r\n            \"descricao\": \"{{$randomPhrase}}\",\r\n            \"quantidade\": \"{{$randomInt}}\"\r\n        }\r\n",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/produtos/:_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"produtos",
														":_id"
													],
													"variable": [
														{
															"key": "_id",
															"value": "{{newProductId}}"
														}
													]
												}
											},
											"response": [
												{
													"name": "Atualizar produto válido sem autenticação",
													"originalRequest": {
														"method": "PUT",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\r\n            \"nome\": \"{{$randomProductName}}\",\r\n            \"preco\": \"{{$randomInt}}\",\r\n            \"descricao\": \"{{$randomPhrase}}\",\r\n            \"quantidade\": \"{{$randomInt}}\"\r\n        }\r\n",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/produtos/:_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"produtos",
																":_id"
															],
															"variable": [
																{
																	"key": "_id",
																	"value": "{{newProductId}}"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Access-Control-Allow-Origin",
															"value": "*"
														},
														{
															"key": "x-dns-prefetch-control",
															"value": "off"
														},
														{
															"key": "x-frame-options",
															"value": "SAMEORIGIN"
														},
														{
															"key": "strict-transport-security",
															"value": "max-age=15552000; includeSubDomains"
														},
														{
															"key": "x-download-options",
															"value": "noopen"
														},
														{
															"key": "x-content-type-options",
															"value": "nosniff"
														},
														{
															"key": "x-xss-protection",
															"value": "1; mode=block"
														},
														{
															"key": "x-moesif-transaction-id",
															"value": "f8185de5-876c-40fc-bfaa-2c83a66ab866"
														},
														{
															"key": "Content-Type",
															"value": "application/json; charset=utf-8"
														},
														{
															"key": "Content-Length",
															"value": "103"
														},
														{
															"key": "Date",
															"value": "Sat, 07 Oct 2023 17:01:31 GMT"
														},
														{
															"key": "Connection",
															"value": "keep-alive"
														},
														{
															"key": "Keep-Alive",
															"value": "timeout=5"
														}
													],
													"cookie": [],
													"body": "{\n    \"message\": \"Token de acesso ausente, inválido, expirado ou usuário do token não existe mais\"\n}"
												}
											]
										},
										{
											"name": "CT_068: Atualizar produto válido com nome já cadastrado",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"pm.test(\"Checks the response body\", function () {\r",
															"    var jsonData = pm.response.json();\r",
															"    pm.expect(jsonData.message).to.eql(\"Já existe produto com esse nome\");\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "value",
															"value": "{{token}}",
															"type": "string"
														},
														{
															"key": "key",
															"value": "Authorization",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n            \"nome\": \"{{defaultProductName}}\",\r\n            \"preco\": \"{{$randomInt}}\",\r\n            \"descricao\": \"{{$randomPhrase}}\",\r\n            \"quantidade\": \"{{$randomInt}}\"\r\n        }\r\n",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/produtos/:_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"produtos",
														":_id"
													],
													"variable": [
														{
															"key": "_id",
															"value": "{{newProductId}}"
														}
													]
												}
											},
											"response": [
												{
													"name": "Atualizar produto válido com nome já cadastrado",
													"originalRequest": {
														"method": "PUT",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\r\n            \"nome\": \"{{defaultProductName}}\",\r\n            \"preco\": \"{{$randomInt}}\",\r\n            \"descricao\": \"{{$randomPhrase}}\",\r\n            \"quantidade\": \"{{$randomInt}}\"\r\n        }\r\n",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/produtos/:_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"produtos",
																":_id"
															],
															"variable": [
																{
																	"key": "_id",
																	"value": "{{newProductId}}"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Access-Control-Allow-Origin",
															"value": "*"
														},
														{
															"key": "x-dns-prefetch-control",
															"value": "off"
														},
														{
															"key": "x-frame-options",
															"value": "SAMEORIGIN"
														},
														{
															"key": "strict-transport-security",
															"value": "max-age=15552000; includeSubDomains"
														},
														{
															"key": "x-download-options",
															"value": "noopen"
														},
														{
															"key": "x-content-type-options",
															"value": "nosniff"
														},
														{
															"key": "x-xss-protection",
															"value": "1; mode=block"
														},
														{
															"key": "x-moesif-transaction-id",
															"value": "68edc0ce-72f8-4ca0-a3d7-e533c90adfe4"
														},
														{
															"key": "Content-Type",
															"value": "application/json; charset=utf-8"
														},
														{
															"key": "Content-Length",
															"value": "53"
														},
														{
															"key": "Date",
															"value": "Sat, 07 Oct 2023 17:02:06 GMT"
														},
														{
															"key": "Connection",
															"value": "keep-alive"
														},
														{
															"key": "Keep-Alive",
															"value": "timeout=5"
														}
													],
													"cookie": [],
													"body": "{\n    \"message\": \"Já existe produto com esse nome\"\n}"
												}
											]
										},
										{
											"name": "CT_069: Atualizar produto válido com nome em branco",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"pm.test(\"Checks the response body\", function () {\r",
															"    var jsonData = pm.response.json();\r",
															"    pm.expect(jsonData.nome).to.eql(\"nome não pode ficar em branco\");\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "value",
															"value": "{{token}}",
															"type": "string"
														},
														{
															"key": "key",
															"value": "Authorization",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n            \"nome\": \" \",\r\n            \"preco\": \"{{$randomInt}}\",\r\n            \"descricao\": \"{{$randomPhrase}}\",\r\n            \"quantidade\": \"{{$randomInt}}\"\r\n        }\r\n",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/produtos/:_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"produtos",
														":_id"
													],
													"variable": [
														{
															"key": "_id",
															"value": "{{newProductId}}"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "CT_070: Atualizar produto válido com preço em branco",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"pm.test(\"Checks the response body\", function () {\r",
															"    var jsonData = pm.response.json();\r",
															"    pm.expect(jsonData.preco).to.eql(\"preco deve ser um número\");\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "value",
															"value": "{{token}}",
															"type": "string"
														},
														{
															"key": "key",
															"value": "Authorization",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n            \"nome\": \"{{$randomProductName}}\",\r\n            \"preco\": \"\",\r\n            \"descricao\": \"{{$randomPhrase}}\",\r\n            \"quantidade\": \"{{$randomInt}}\"\r\n        }\r\n",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/produtos/:_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"produtos",
														":_id"
													],
													"variable": [
														{
															"key": "_id",
															"value": "{{newProductId}}"
														}
													]
												}
											},
											"response": [
												{
													"name": "Atualizar produto válido com preço em branco",
													"originalRequest": {
														"method": "PUT",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\r\n            \"nome\": \"{{$randomProductName}}\",\r\n            \"preco\": \"\",\r\n            \"descricao\": \"{{$randomPhrase}}\",\r\n            \"quantidade\": \"{{$randomInt}}\"\r\n        }\r\n",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/produtos/:_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"produtos",
																":_id"
															],
															"variable": [
																{
																	"key": "_id",
																	"value": "{{newProductId}}"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Access-Control-Allow-Origin",
															"value": "*"
														},
														{
															"key": "x-dns-prefetch-control",
															"value": "off"
														},
														{
															"key": "x-frame-options",
															"value": "SAMEORIGIN"
														},
														{
															"key": "strict-transport-security",
															"value": "max-age=15552000; includeSubDomains"
														},
														{
															"key": "x-download-options",
															"value": "noopen"
														},
														{
															"key": "x-content-type-options",
															"value": "nosniff"
														},
														{
															"key": "x-xss-protection",
															"value": "1; mode=block"
														},
														{
															"key": "x-moesif-transaction-id",
															"value": "9198fd54-6665-40d8-a50b-bb1a948eb11b"
														},
														{
															"key": "Content-Type",
															"value": "application/json; charset=utf-8"
														},
														{
															"key": "Content-Length",
															"value": "44"
														},
														{
															"key": "Date",
															"value": "Sat, 07 Oct 2023 17:08:14 GMT"
														},
														{
															"key": "Connection",
															"value": "keep-alive"
														},
														{
															"key": "Keep-Alive",
															"value": "timeout=5"
														}
													],
													"cookie": [],
													"body": "{\n    \"preco\": \"preco deve ser um número\"\n}"
												}
											]
										},
										{
											"name": "CT_071: Atualizar produto válido com preço inválido",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"pm.test(\"Checks the response body\", function () {\r",
															"    var jsonData = pm.response.json();\r",
															"    pm.expect(jsonData.preco).to.eql(\"preco deve ser um número\");\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "value",
															"value": "{{token}}",
															"type": "string"
														},
														{
															"key": "key",
															"value": "Authorization",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n            \"nome\": \"{{$randomProductName}}\",\r\n            \"preco\": \"{{$randomHexColor}}\",\r\n            \"descricao\": \"{{$randomPhrase}}\",\r\n            \"quantidade\": \"{{$randomInt}}\"\r\n        }\r\n",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/produtos/:_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"produtos",
														":_id"
													],
													"variable": [
														{
															"key": "_id",
															"value": "{{newProductId}}"
														}
													]
												}
											},
											"response": [
												{
													"name": "Atualizar produto válido com preço inválido",
													"originalRequest": {
														"method": "PUT",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\r\n            \"nome\": \"{{$randomProductName}}\",\r\n            \"preco\": \"{{$randomHexColor}}\",\r\n            \"descricao\": \"{{$randomPhrase}}\",\r\n            \"quantidade\": \"{{$randomInt}}\"\r\n        }\r\n",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/produtos/:_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"produtos",
																":_id"
															],
															"variable": [
																{
																	"key": "_id",
																	"value": "{{newProductId}}"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Access-Control-Allow-Origin",
															"value": "*"
														},
														{
															"key": "x-dns-prefetch-control",
															"value": "off"
														},
														{
															"key": "x-frame-options",
															"value": "SAMEORIGIN"
														},
														{
															"key": "strict-transport-security",
															"value": "max-age=15552000; includeSubDomains"
														},
														{
															"key": "x-download-options",
															"value": "noopen"
														},
														{
															"key": "x-content-type-options",
															"value": "nosniff"
														},
														{
															"key": "x-xss-protection",
															"value": "1; mode=block"
														},
														{
															"key": "x-moesif-transaction-id",
															"value": "b03c8970-ce74-4dce-ad42-c2fb22d7afec"
														},
														{
															"key": "Content-Type",
															"value": "application/json; charset=utf-8"
														},
														{
															"key": "Content-Length",
															"value": "44"
														},
														{
															"key": "Date",
															"value": "Sat, 07 Oct 2023 17:08:59 GMT"
														},
														{
															"key": "Connection",
															"value": "keep-alive"
														},
														{
															"key": "Keep-Alive",
															"value": "timeout=5"
														}
													],
													"cookie": [],
													"body": "{\n    \"preco\": \"preco deve ser um número\"\n}"
												}
											]
										},
										{
											"name": "CT_072: Atualizar produto válido com descrição em branco",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"pm.test(\"Checks the response body\", function () {\r",
															"    var jsonData = pm.response.json();\r",
															"    pm.expect(jsonData.descricao).to.eql(\"descricao não pode ficar em branco\");\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "value",
															"value": "{{token}}",
															"type": "string"
														},
														{
															"key": "key",
															"value": "Authorization",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n            \"nome\": \"{{$randomProductName}}\",\r\n            \"preco\": \"{{$randomInt}}\",\r\n            \"descricao\": \" \",\r\n            \"quantidade\": \"{{$randomInt}}\"\r\n        }\r\n",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/produtos/:_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"produtos",
														":_id"
													],
													"variable": [
														{
															"key": "_id",
															"value": "{{newProductId}}"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "CT_073: Atualizar produto válido com quantidade em branco",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"pm.test(\"Checks the response body\", function () {\r",
															"    var jsonData = pm.response.json();\r",
															"    pm.expect(jsonData.quantidade).to.eql(\"quantidade deve ser um número\");\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "value",
															"value": "{{token}}",
															"type": "string"
														},
														{
															"key": "key",
															"value": "Authorization",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n            \"nome\": \"{{$randomProductName}}\",\r\n            \"preco\": \"{{$randomInt}}\",\r\n            \"descricao\": \"{{$randomPhrase}}\",\r\n            \"quantidade\": \"\"\r\n        }\r\n",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/produtos/:_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"produtos",
														":_id"
													],
													"variable": [
														{
															"key": "_id",
															"value": "{{newProductId}}"
														}
													]
												}
											},
											"response": [
												{
													"name": "Atualizar produto válido com quantidade em branco",
													"originalRequest": {
														"method": "PUT",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\r\n            \"nome\": \"{{$randomProductName}}\",\r\n            \"preco\": \"{{$randomInt}}\",\r\n            \"descricao\": \"{{$randomPhrase}}\",\r\n            \"quantidade\": \"\"\r\n        }\r\n",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/produtos/:_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"produtos",
																":_id"
															],
															"variable": [
																{
																	"key": "_id",
																	"value": "{{newProductId}}"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Access-Control-Allow-Origin",
															"value": "*"
														},
														{
															"key": "x-dns-prefetch-control",
															"value": "off"
														},
														{
															"key": "x-frame-options",
															"value": "SAMEORIGIN"
														},
														{
															"key": "strict-transport-security",
															"value": "max-age=15552000; includeSubDomains"
														},
														{
															"key": "x-download-options",
															"value": "noopen"
														},
														{
															"key": "x-content-type-options",
															"value": "nosniff"
														},
														{
															"key": "x-xss-protection",
															"value": "1; mode=block"
														},
														{
															"key": "x-moesif-transaction-id",
															"value": "365b640a-4596-4510-8ceb-5ac176c185bb"
														},
														{
															"key": "Content-Type",
															"value": "application/json; charset=utf-8"
														},
														{
															"key": "Content-Length",
															"value": "54"
														},
														{
															"key": "Date",
															"value": "Sat, 07 Oct 2023 17:10:29 GMT"
														},
														{
															"key": "Connection",
															"value": "keep-alive"
														},
														{
															"key": "Keep-Alive",
															"value": "timeout=5"
														}
													],
													"cookie": [],
													"body": "{\n    \"quantidade\": \"quantidade deve ser um número\"\n}"
												}
											]
										},
										{
											"name": "CT_074: Atualizar produto válido com quantidade inválida",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"pm.test(\"Checks the response body\", function () {\r",
															"    var jsonData = pm.response.json();\r",
															"    pm.expect(jsonData.quantidade).to.eql(\"quantidade deve ser um número\");\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "value",
															"value": "{{token}}",
															"type": "string"
														},
														{
															"key": "key",
															"value": "Authorization",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n            \"nome\": \"{{$randomProductName}}\",\r\n            \"preco\": \"{{$randomInt}}\",\r\n            \"descricao\": \"{{$randomPhrase}}\",\r\n            \"quantidade\": \"{{$randomHexColor}}\"\r\n        }\r\n",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/produtos/:_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"produtos",
														":_id"
													],
													"variable": [
														{
															"key": "_id",
															"value": "{{newProductId}}"
														}
													]
												}
											},
											"response": [
												{
													"name": "Atualizar produto válido com quantidade inválida",
													"originalRequest": {
														"method": "PUT",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\r\n            \"nome\": \"{{$randomProductName}}\",\r\n            \"preco\": \"{{$randomInt}}\",\r\n            \"descricao\": \"{{$randomPhrase}}\",\r\n            \"quantidade\": \"{{$randomHexColor}}\"\r\n        }\r\n",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/produtos/:_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"produtos",
																":_id"
															],
															"variable": [
																{
																	"key": "_id",
																	"value": "{{newProductId}}"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Access-Control-Allow-Origin",
															"value": "*"
														},
														{
															"key": "x-dns-prefetch-control",
															"value": "off"
														},
														{
															"key": "x-frame-options",
															"value": "SAMEORIGIN"
														},
														{
															"key": "strict-transport-security",
															"value": "max-age=15552000; includeSubDomains"
														},
														{
															"key": "x-download-options",
															"value": "noopen"
														},
														{
															"key": "x-content-type-options",
															"value": "nosniff"
														},
														{
															"key": "x-xss-protection",
															"value": "1; mode=block"
														},
														{
															"key": "x-moesif-transaction-id",
															"value": "40b0770c-f221-46f0-8b9a-7d71cd6d763b"
														},
														{
															"key": "Content-Type",
															"value": "application/json; charset=utf-8"
														},
														{
															"key": "Content-Length",
															"value": "54"
														},
														{
															"key": "Date",
															"value": "Sat, 07 Oct 2023 17:11:10 GMT"
														},
														{
															"key": "Connection",
															"value": "keep-alive"
														},
														{
															"key": "Keep-Alive",
															"value": "timeout=5"
														}
													],
													"cookie": [],
													"body": "{\n    \"quantidade\": \"quantidade deve ser um número\"\n}"
												}
											]
										},
										{
											"name": "CT_075: Atualizar produto válido com quantidade float",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"pm.test(\"Checks the response body\", function () {\r",
															"    var jsonData = pm.response.json();\r",
															"    pm.expect(jsonData.quantidade).to.eql(\"quantidade deve ser um inteiro\");\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "value",
															"value": "{{token}}",
															"type": "string"
														},
														{
															"key": "key",
															"value": "Authorization",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n            \"nome\": \"{{$randomProductName}}\",\r\n            \"preco\": \"{{$randomInt}}\",\r\n            \"descricao\": \"{{$randomPhrase}}\",\r\n            \"quantidade\": \"{{$randomPrice}}\"\r\n        }\r\n",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/produtos/:_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"produtos",
														":_id"
													],
													"variable": [
														{
															"key": "_id",
															"value": "{{newProductId}}"
														}
													]
												}
											},
											"response": [
												{
													"name": "Atualizar produto válido com quantidade float",
													"originalRequest": {
														"method": "PUT",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\r\n            \"nome\": \"{{$randomProductName}}\",\r\n            \"preco\": \"{{$randomInt}}\",\r\n            \"descricao\": \"{{$randomPhrase}}\",\r\n            \"quantidade\": \"{{$randomPrice}}\"\r\n        }\r\n",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/produtos/:_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"produtos",
																":_id"
															],
															"variable": [
																{
																	"key": "_id",
																	"value": "{{newProductId}}"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Access-Control-Allow-Origin",
															"value": "*"
														},
														{
															"key": "x-dns-prefetch-control",
															"value": "off"
														},
														{
															"key": "x-frame-options",
															"value": "SAMEORIGIN"
														},
														{
															"key": "strict-transport-security",
															"value": "max-age=15552000; includeSubDomains"
														},
														{
															"key": "x-download-options",
															"value": "noopen"
														},
														{
															"key": "x-content-type-options",
															"value": "nosniff"
														},
														{
															"key": "x-xss-protection",
															"value": "1; mode=block"
														},
														{
															"key": "x-moesif-transaction-id",
															"value": "9715c047-cb13-44a0-ac56-e22bb69f621d"
														},
														{
															"key": "Content-Type",
															"value": "application/json; charset=utf-8"
														},
														{
															"key": "Content-Length",
															"value": "54"
														},
														{
															"key": "Date",
															"value": "Sat, 07 Oct 2023 17:11:50 GMT"
														},
														{
															"key": "Connection",
															"value": "keep-alive"
														},
														{
															"key": "Keep-Alive",
															"value": "timeout=5"
														}
													],
													"cookie": [],
													"body": "{\n    \"quantidade\": \"quantidade deve ser um inteiro\"\n}"
												}
											]
										}
									],
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													"pm.sendRequest({",
													"    url: pm.environment.get('baseUrl') + '/login',",
													"    method: 'POST',",
													"    header: {",
													"        'Accept': 'application/json',",
													"        'Content-Type': 'application/json'",
													"      },",
													"    body: {",
													"        mode: 'raw',",
													"        raw: JSON.stringify({",
													"            \"email\": pm.collectionVariables.get('adminEmail'),",
													"            \"password\": pm.collectionVariables.get('adminPassword')",
													"        })",
													"    }",
													"}, function (err, res) {",
													"    ",
													"    pm.collectionVariables.set('token', res.json().authorization);",
													"",
													"    const name = pm.variables.replaceIn('{{$randomProductName}}');",
													"    pm.collectionVariables.set(\"randomProductName\", name);",
													"    const price = pm.variables.replaceIn('{{$randomInt}}');",
													"    pm.collectionVariables.set(\"randomProductPrice\", price);",
													"    const description = pm.variables.replaceIn('{{$randomPhrase}}');",
													"    pm.collectionVariables.set(\"randomProductDescription\", description);",
													"    const quantity = pm.variables.replaceIn('{{$randomInt}}');",
													"    pm.collectionVariables.set(\"randomProductQuantity\", quantity);",
													"",
													"    pm.sendRequest({",
													"        url: pm.environment.get('baseUrl') + '/produtos',",
													"        method: 'POST',",
													"        header: {",
													"            'Accept': 'application/json',",
													"            'Content-Type': 'application/json',",
													"            'Authorization': pm.collectionVariables.get('token')",
													"        },",
													"        body: {",
													"            mode: 'raw',",
													"            raw: JSON.stringify({",
													"                \"nome\": pm.collectionVariables.get('randomProductName'),",
													"                \"preco\": pm.collectionVariables.get('randomProductPrice'),",
													"                \"descricao\": pm.collectionVariables.get('randomProductDescription'),",
													"                \"quantidade\": pm.collectionVariables.get('randomProductQuantity')",
													"            })",
													"        }",
													"    }, function (err, res) {",
													"        pm.collectionVariables.set('newProductId', res.json()._id);",
													"    });",
													"});",
													""
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										}
									]
								},
								{
									"name": "Produto inexistente",
									"item": [
										{
											"name": "CT_076: Atualizar produto inexistente como administrador (cadastrar produto válido)",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 201\", function () {\r",
															"    pm.response.to.have.status(201);\r",
															"});\r",
															"\r",
															"pm.test(\"Checks the response body\", function () {\r",
															"    var jsonData = pm.response.json();\r",
															"    pm.expect(jsonData.message).to.eql('Cadastro realizado com sucesso');\r",
															"    pm.expect(jsonData.id).not.null;\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "value",
															"value": "{{token}}",
															"type": "string"
														},
														{
															"key": "key",
															"value": "Authorization",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n            \"nome\": \"{{$randomProductName}}\",\r\n            \"preco\": \"{{$randomInt}}\",\r\n            \"descricao\": \"{{$randomPhrase}}\",\r\n            \"quantidade\": \"{{$randomInt}}\"\r\n        }\r\n",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/produtos/:_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"produtos",
														":_id"
													],
													"variable": [
														{
															"key": "_id",
															"value": "{{$randomPassword}}"
														}
													]
												}
											},
											"response": [
												{
													"name": "Atualizar produto inexistente como administrador (cadastrar produto válido)",
													"originalRequest": {
														"method": "PUT",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\r\n            \"nome\": \"{{$randomProductName}}\",\r\n            \"preco\": \"{{$randomInt}}\",\r\n            \"descricao\": \"{{$randomPhrase}}\",\r\n            \"quantidade\": \"{{$randomInt}}\"\r\n        }\r\n",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/produtos/:_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"produtos",
																":_id"
															],
															"variable": [
																{
																	"key": "_id",
																	"value": "{{$randomPassword}}"
																}
															]
														}
													},
													"status": "Created",
													"code": 201,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Access-Control-Allow-Origin",
															"value": "*"
														},
														{
															"key": "x-dns-prefetch-control",
															"value": "off"
														},
														{
															"key": "x-frame-options",
															"value": "SAMEORIGIN"
														},
														{
															"key": "strict-transport-security",
															"value": "max-age=15552000; includeSubDomains"
														},
														{
															"key": "x-download-options",
															"value": "noopen"
														},
														{
															"key": "x-content-type-options",
															"value": "nosniff"
														},
														{
															"key": "x-xss-protection",
															"value": "1; mode=block"
														},
														{
															"key": "x-moesif-transaction-id",
															"value": "9968b971-4723-498f-9d57-845ad3e7ac45"
														},
														{
															"key": "Content-Type",
															"value": "application/json; charset=utf-8"
														},
														{
															"key": "Content-Length",
															"value": "82"
														},
														{
															"key": "Date",
															"value": "Sat, 07 Oct 2023 17:17:07 GMT"
														},
														{
															"key": "Connection",
															"value": "keep-alive"
														},
														{
															"key": "Keep-Alive",
															"value": "timeout=5"
														}
													],
													"cookie": [],
													"body": "{\n    \"message\": \"Cadastro realizado com sucesso\",\n    \"_id\": \"7odNImQ3rfHSxCuJ\"\n}"
												}
											]
										},
										{
											"name": "CT_078: Atualizar produto inexistente sem autenticação",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 401\", function () {\r",
															"    pm.response.to.have.status(401);\r",
															"});\r",
															"\r",
															"pm.test(\"Checks the response body\", function () {\r",
															"    var jsonData = pm.response.json();\r",
															"    pm.expect(jsonData.message).to.eql(\"Token de acesso ausente, inválido, expirado ou usuário do token não existe mais\");\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "noauth"
												},
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n            \"nome\": \"{{$randomProductName}}\",\r\n            \"preco\": \"{{$randomInt}}\",\r\n            \"descricao\": \"{{$randomPhrase}}\",\r\n            \"quantidade\": \"{{$randomInt}}\"\r\n        }\r\n",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/produtos/:_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"produtos",
														":_id"
													],
													"variable": [
														{
															"key": "_id",
															"value": "{{$randomPassword}}"
														}
													]
												}
											},
											"response": [
												{
													"name": "Atualizar produto inexistente sem autenticação",
													"originalRequest": {
														"method": "PUT",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\r\n            \"nome\": \"{{$randomProductName}}\",\r\n            \"preco\": \"{{$randomInt}}\",\r\n            \"descricao\": \"{{$randomPhrase}}\",\r\n            \"quantidade\": \"{{$randomInt}}\"\r\n        }\r\n",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/produtos/:_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"produtos",
																":_id"
															],
															"variable": [
																{
																	"key": "_id",
																	"value": "{{$randomPassword}}"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Access-Control-Allow-Origin",
															"value": "*"
														},
														{
															"key": "x-dns-prefetch-control",
															"value": "off"
														},
														{
															"key": "x-frame-options",
															"value": "SAMEORIGIN"
														},
														{
															"key": "strict-transport-security",
															"value": "max-age=15552000; includeSubDomains"
														},
														{
															"key": "x-download-options",
															"value": "noopen"
														},
														{
															"key": "x-content-type-options",
															"value": "nosniff"
														},
														{
															"key": "x-xss-protection",
															"value": "1; mode=block"
														},
														{
															"key": "x-moesif-transaction-id",
															"value": "30cd2c05-c749-4ddd-8c1e-857a5d320545"
														},
														{
															"key": "Content-Type",
															"value": "application/json; charset=utf-8"
														},
														{
															"key": "Content-Length",
															"value": "103"
														},
														{
															"key": "Date",
															"value": "Sat, 07 Oct 2023 17:18:15 GMT"
														},
														{
															"key": "Connection",
															"value": "keep-alive"
														},
														{
															"key": "Keep-Alive",
															"value": "timeout=5"
														}
													],
													"cookie": [],
													"body": "{\n    \"message\": \"Token de acesso ausente, inválido, expirado ou usuário do token não existe mais\"\n}"
												}
											]
										},
										{
											"name": "CT_079: Atualizar produto inexistente com nome já cadastrado",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"pm.test(\"Checks the response body\", function () {\r",
															"    var jsonData = pm.response.json();\r",
															"    pm.expect(jsonData.message).to.eql(\"Já existe produto com esse nome\");\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "value",
															"value": "{{token}}",
															"type": "string"
														},
														{
															"key": "key",
															"value": "Authorization",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n            \"nome\": \"{{defaultProductName}}\",\r\n            \"preco\": \"{{$randomInt}}\",\r\n            \"descricao\": \"{{$randomPhrase}}\",\r\n            \"quantidade\": \"{{$randomInt}}\"\r\n        }\r\n",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/produtos/:_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"produtos",
														":_id"
													],
													"variable": [
														{
															"key": "_id",
															"value": "{{$randomPassword}}"
														}
													]
												}
											},
											"response": [
												{
													"name": "Atualizar produto inexistente com nome já cadastrado",
													"originalRequest": {
														"method": "PUT",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\r\n            \"nome\": \"{{defaultProductName}}\",\r\n            \"preco\": \"{{$randomInt}}\",\r\n            \"descricao\": \"{{$randomPhrase}}\",\r\n            \"quantidade\": \"{{$randomInt}}\"\r\n        }\r\n",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/produtos/:_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"produtos",
																":_id"
															],
															"variable": [
																{
																	"key": "_id",
																	"value": "{{$randomPassword}}"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Access-Control-Allow-Origin",
															"value": "*"
														},
														{
															"key": "x-dns-prefetch-control",
															"value": "off"
														},
														{
															"key": "x-frame-options",
															"value": "SAMEORIGIN"
														},
														{
															"key": "strict-transport-security",
															"value": "max-age=15552000; includeSubDomains"
														},
														{
															"key": "x-download-options",
															"value": "noopen"
														},
														{
															"key": "x-content-type-options",
															"value": "nosniff"
														},
														{
															"key": "x-xss-protection",
															"value": "1; mode=block"
														},
														{
															"key": "x-moesif-transaction-id",
															"value": "c3b8c5c3-0e78-4b9f-a7f5-ebc80ee4e4f3"
														},
														{
															"key": "Content-Type",
															"value": "application/json; charset=utf-8"
														},
														{
															"key": "Content-Length",
															"value": "53"
														},
														{
															"key": "Date",
															"value": "Sat, 07 Oct 2023 17:19:30 GMT"
														},
														{
															"key": "Connection",
															"value": "keep-alive"
														},
														{
															"key": "Keep-Alive",
															"value": "timeout=5"
														}
													],
													"cookie": [],
													"body": "{\n    \"message\": \"Já existe produto com esse nome\"\n}"
												}
											]
										},
										{
											"name": "CT_080: Atualizar produto inexistente com nome em branco",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"pm.test(\"Checks the response body\", function () {\r",
															"    var jsonData = pm.response.json();\r",
															"    pm.expect(jsonData.nome).to.eql(\"nome não pode ficar em branco\");\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "value",
															"value": "{{token}}",
															"type": "string"
														},
														{
															"key": "key",
															"value": "Authorization",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n            \"nome\": \" \",\r\n            \"preco\": \"{{$randomInt}}\",\r\n            \"descricao\": \"{{$randomPhrase}}\",\r\n            \"quantidade\": \"{{$randomInt}}\"\r\n        }\r\n",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/produtos/:_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"produtos",
														":_id"
													],
													"variable": [
														{
															"key": "_id",
															"value": "{{$randomPassword}}"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "CT_081: Atualizar produto inexistente com preço em branco",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"pm.test(\"Checks the response body\", function () {\r",
															"    var jsonData = pm.response.json();\r",
															"    pm.expect(jsonData.preco).to.eql(\"preco deve ser um número\");\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "value",
															"value": "{{token}}",
															"type": "string"
														},
														{
															"key": "key",
															"value": "Authorization",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n            \"nome\": \"{{$randomProductName}}\",\r\n            \"preco\": \"\",\r\n            \"descricao\": \"{{$randomPhrase}}\",\r\n            \"quantidade\": \"{{$randomInt}}\"\r\n        }\r\n",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/produtos/:_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"produtos",
														":_id"
													],
													"variable": [
														{
															"key": "_id",
															"value": "{{$randomPassword}}"
														}
													]
												}
											},
											"response": [
												{
													"name": "Atualizar produto inexistente com preço em branco",
													"originalRequest": {
														"method": "PUT",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\r\n            \"nome\": \"{{$randomProductName}}\",\r\n            \"preco\": \"\",\r\n            \"descricao\": \"{{$randomPhrase}}\",\r\n            \"quantidade\": \"{{$randomInt}}\"\r\n        }\r\n",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/produtos/:_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"produtos",
																":_id"
															],
															"variable": [
																{
																	"key": "_id",
																	"value": "{{$randomPassword}}"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Access-Control-Allow-Origin",
															"value": "*"
														},
														{
															"key": "x-dns-prefetch-control",
															"value": "off"
														},
														{
															"key": "x-frame-options",
															"value": "SAMEORIGIN"
														},
														{
															"key": "strict-transport-security",
															"value": "max-age=15552000; includeSubDomains"
														},
														{
															"key": "x-download-options",
															"value": "noopen"
														},
														{
															"key": "x-content-type-options",
															"value": "nosniff"
														},
														{
															"key": "x-xss-protection",
															"value": "1; mode=block"
														},
														{
															"key": "x-moesif-transaction-id",
															"value": "13e018c4-22f5-499d-8a00-9efd2fe2bfcc"
														},
														{
															"key": "Content-Type",
															"value": "application/json; charset=utf-8"
														},
														{
															"key": "Content-Length",
															"value": "44"
														},
														{
															"key": "Date",
															"value": "Sat, 07 Oct 2023 17:21:25 GMT"
														},
														{
															"key": "Connection",
															"value": "keep-alive"
														},
														{
															"key": "Keep-Alive",
															"value": "timeout=5"
														}
													],
													"cookie": [],
													"body": "{\n    \"preco\": \"preco deve ser um número\"\n}"
												}
											]
										},
										{
											"name": "CT_082: Atualizar produto inexistente com preço inválido",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"pm.test(\"Checks the response body\", function () {\r",
															"    var jsonData = pm.response.json();\r",
															"    pm.expect(jsonData.preco).to.eql(\"preco deve ser um número\");\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "value",
															"value": "{{token}}",
															"type": "string"
														},
														{
															"key": "key",
															"value": "Authorization",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n            \"nome\": \"{{$randomProductName}}\",\r\n            \"preco\": \"{{$randomHexColor}}\",\r\n            \"descricao\": \"{{$randomPhrase}}\",\r\n            \"quantidade\": \"{{$randomInt}}\"\r\n        }\r\n",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/produtos/:_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"produtos",
														":_id"
													],
													"variable": [
														{
															"key": "_id",
															"value": "{{$randomPassword}}"
														}
													]
												}
											},
											"response": [
												{
													"name": "Atualizar produto inexistente com preço inválido",
													"originalRequest": {
														"method": "PUT",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\r\n            \"nome\": \"{{$randomProductName}}\",\r\n            \"preco\": \"{{$randomHexColor}}\",\r\n            \"descricao\": \"{{$randomPhrase}}\",\r\n            \"quantidade\": \"{{$randomInt}}\"\r\n        }\r\n",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/produtos/:_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"produtos",
																":_id"
															],
															"variable": [
																{
																	"key": "_id",
																	"value": "{{$randomPassword}}"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Access-Control-Allow-Origin",
															"value": "*"
														},
														{
															"key": "x-dns-prefetch-control",
															"value": "off"
														},
														{
															"key": "x-frame-options",
															"value": "SAMEORIGIN"
														},
														{
															"key": "strict-transport-security",
															"value": "max-age=15552000; includeSubDomains"
														},
														{
															"key": "x-download-options",
															"value": "noopen"
														},
														{
															"key": "x-content-type-options",
															"value": "nosniff"
														},
														{
															"key": "x-xss-protection",
															"value": "1; mode=block"
														},
														{
															"key": "x-moesif-transaction-id",
															"value": "628b1d07-f67f-4427-8f18-a3625847e8d8"
														},
														{
															"key": "Content-Type",
															"value": "application/json; charset=utf-8"
														},
														{
															"key": "Content-Length",
															"value": "44"
														},
														{
															"key": "Date",
															"value": "Sat, 07 Oct 2023 17:22:55 GMT"
														},
														{
															"key": "Connection",
															"value": "keep-alive"
														},
														{
															"key": "Keep-Alive",
															"value": "timeout=5"
														}
													],
													"cookie": [],
													"body": "{\n    \"preco\": \"preco deve ser um número\"\n}"
												}
											]
										},
										{
											"name": "CT_083: Atualizar produto inexistente com descrição em branco",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"pm.test(\"Checks the response body\", function () {\r",
															"    var jsonData = pm.response.json();\r",
															"    pm.expect(jsonData.descricao).to.eql(\"descricao não pode ficar em branco\");\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "value",
															"value": "{{token}}",
															"type": "string"
														},
														{
															"key": "key",
															"value": "Authorization",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n            \"nome\": \"{{$randomProductName}}\",\r\n            \"preco\": \"{{$randomInt}}\",\r\n            \"descricao\": \" \",\r\n            \"quantidade\": \"{{$randomInt}}\"\r\n        }\r\n",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/produtos/:_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"produtos",
														":_id"
													],
													"variable": [
														{
															"key": "_id",
															"value": "{{$randomPassword}}"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "CT_084: Atualizar produto inexistente com quantidade em branco",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"pm.test(\"Checks the response body\", function () {\r",
															"    var jsonData = pm.response.json();\r",
															"    pm.expect(jsonData.quantidade).to.eql(\"quantidade deve ser um número\");\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "value",
															"value": "{{token}}",
															"type": "string"
														},
														{
															"key": "key",
															"value": "Authorization",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n            \"nome\": \"{{$randomProductName}}\",\r\n            \"preco\": \"{{$randomInt}}\",\r\n            \"descricao\": \"{{$randomPhrase}}\",\r\n            \"quantidade\": \"\"\r\n        }\r\n",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/produtos/:_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"produtos",
														":_id"
													],
													"variable": [
														{
															"key": "_id",
															"value": "{{$randomPassword}}"
														}
													]
												}
											},
											"response": [
												{
													"name": "Atualizar produto inexistente com quantidade em branco",
													"originalRequest": {
														"method": "PUT",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\r\n            \"nome\": \"{{$randomProductName}}\",\r\n            \"preco\": \"{{$randomInt}}\",\r\n            \"descricao\": \"{{$randomPhrase}}\",\r\n            \"quantidade\": \"\"\r\n        }\r\n",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/produtos/:_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"produtos",
																":_id"
															],
															"variable": [
																{
																	"key": "_id",
																	"value": "{{$randomPassword}}"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Access-Control-Allow-Origin",
															"value": "*"
														},
														{
															"key": "x-dns-prefetch-control",
															"value": "off"
														},
														{
															"key": "x-frame-options",
															"value": "SAMEORIGIN"
														},
														{
															"key": "strict-transport-security",
															"value": "max-age=15552000; includeSubDomains"
														},
														{
															"key": "x-download-options",
															"value": "noopen"
														},
														{
															"key": "x-content-type-options",
															"value": "nosniff"
														},
														{
															"key": "x-xss-protection",
															"value": "1; mode=block"
														},
														{
															"key": "x-moesif-transaction-id",
															"value": "d9ad53dd-8d81-4c72-a727-c0c975fd9a78"
														},
														{
															"key": "Content-Type",
															"value": "application/json; charset=utf-8"
														},
														{
															"key": "Content-Length",
															"value": "54"
														},
														{
															"key": "Date",
															"value": "Sat, 07 Oct 2023 17:24:25 GMT"
														},
														{
															"key": "Connection",
															"value": "keep-alive"
														},
														{
															"key": "Keep-Alive",
															"value": "timeout=5"
														}
													],
													"cookie": [],
													"body": "{\n    \"quantidade\": \"quantidade deve ser um número\"\n}"
												}
											]
										},
										{
											"name": "CT_085: Atualizar produto inexistente com quantidade inválida",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"pm.test(\"Checks the response body\", function () {\r",
															"    var jsonData = pm.response.json();\r",
															"    pm.expect(jsonData.quantidade).to.eql(\"quantidade deve ser um número\");\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "value",
															"value": "{{token}}",
															"type": "string"
														},
														{
															"key": "key",
															"value": "Authorization",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n            \"nome\": \"{{$randomProductName}}\",\r\n            \"preco\": \"{{$randomInt}}\",\r\n            \"descricao\": \"{{$randomPhrase}}\",\r\n            \"quantidade\": \"{{$randomHexColor}}\"\r\n        }\r\n",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/produtos/:_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"produtos",
														":_id"
													],
													"variable": [
														{
															"key": "_id",
															"value": "{{$randomPassword}}"
														}
													]
												}
											},
											"response": [
												{
													"name": "Atualizar produto inexistente com quantidade inválida",
													"originalRequest": {
														"method": "PUT",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\r\n            \"nome\": \"{{$randomProductName}}\",\r\n            \"preco\": \"{{$randomInt}}\",\r\n            \"descricao\": \"{{$randomPhrase}}\",\r\n            \"quantidade\": \"{{$randomHexColor}}\"\r\n        }\r\n",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/produtos/:_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"produtos",
																":_id"
															],
															"variable": [
																{
																	"key": "_id",
																	"value": "{{$randomPassword}}"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Access-Control-Allow-Origin",
															"value": "*"
														},
														{
															"key": "x-dns-prefetch-control",
															"value": "off"
														},
														{
															"key": "x-frame-options",
															"value": "SAMEORIGIN"
														},
														{
															"key": "strict-transport-security",
															"value": "max-age=15552000; includeSubDomains"
														},
														{
															"key": "x-download-options",
															"value": "noopen"
														},
														{
															"key": "x-content-type-options",
															"value": "nosniff"
														},
														{
															"key": "x-xss-protection",
															"value": "1; mode=block"
														},
														{
															"key": "x-moesif-transaction-id",
															"value": "b640a6c1-1c7a-4ddd-a6bc-9af64db7f361"
														},
														{
															"key": "Content-Type",
															"value": "application/json; charset=utf-8"
														},
														{
															"key": "Content-Length",
															"value": "54"
														},
														{
															"key": "Date",
															"value": "Sat, 07 Oct 2023 17:24:53 GMT"
														},
														{
															"key": "Connection",
															"value": "keep-alive"
														},
														{
															"key": "Keep-Alive",
															"value": "timeout=5"
														}
													],
													"cookie": [],
													"body": "{\n    \"quantidade\": \"quantidade deve ser um número\"\n}"
												}
											]
										},
										{
											"name": "CT_086: Atualizar produto inexistente com quantidade float",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"pm.test(\"Checks the response body\", function () {\r",
															"    var jsonData = pm.response.json();\r",
															"    pm.expect(jsonData.quantidade).to.eql(\"quantidade deve ser um inteiro\");\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "value",
															"value": "{{token}}",
															"type": "string"
														},
														{
															"key": "key",
															"value": "Authorization",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n            \"nome\": \"{{$randomProductName}}\",\r\n            \"preco\": \"{{$randomInt}}\",\r\n            \"descricao\": \"{{$randomPhrase}}\",\r\n            \"quantidade\": \"{{$randomPrice}}\"\r\n        }\r\n",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/produtos/:_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"produtos",
														":_id"
													],
													"variable": [
														{
															"key": "_id",
															"value": "{{$randomPassword}}"
														}
													]
												}
											},
											"response": [
												{
													"name": "Atualizar produto inexistente com quantidade float",
													"originalRequest": {
														"method": "PUT",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\r\n            \"nome\": \"{{$randomProductName}}\",\r\n            \"preco\": \"{{$randomInt}}\",\r\n            \"descricao\": \"{{$randomPhrase}}\",\r\n            \"quantidade\": \"{{$randomPrice}}\"\r\n        }\r\n",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/produtos/:_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"produtos",
																":_id"
															],
															"variable": [
																{
																	"key": "_id",
																	"value": "{{$randomPassword}}"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Access-Control-Allow-Origin",
															"value": "*"
														},
														{
															"key": "x-dns-prefetch-control",
															"value": "off"
														},
														{
															"key": "x-frame-options",
															"value": "SAMEORIGIN"
														},
														{
															"key": "strict-transport-security",
															"value": "max-age=15552000; includeSubDomains"
														},
														{
															"key": "x-download-options",
															"value": "noopen"
														},
														{
															"key": "x-content-type-options",
															"value": "nosniff"
														},
														{
															"key": "x-xss-protection",
															"value": "1; mode=block"
														},
														{
															"key": "x-moesif-transaction-id",
															"value": "7f7a8f7a-adf1-4375-8cd4-b0bf4efdd6d0"
														},
														{
															"key": "Content-Type",
															"value": "application/json; charset=utf-8"
														},
														{
															"key": "Content-Length",
															"value": "54"
														},
														{
															"key": "Date",
															"value": "Sat, 07 Oct 2023 17:25:29 GMT"
														},
														{
															"key": "Connection",
															"value": "keep-alive"
														},
														{
															"key": "Keep-Alive",
															"value": "timeout=5"
														}
													],
													"cookie": [],
													"body": "{\n    \"quantidade\": \"quantidade deve ser um inteiro\"\n}"
												}
											]
										},
										{
											"name": "CT_077: Atualizar produto inexistente como usuário comum",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 403\", function () {\r",
															"    pm.response.to.have.status(403);\r",
															"});\r",
															"\r",
															"pm.test(\"Checks the response body\", function () {\r",
															"    var jsonData = pm.response.json();\r",
															"    pm.expect(jsonData.message).to.eql(\"Rota exclusiva para administradores\");\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"const name = pm.variables.replaceIn('{{$randomFullName}}');\r",
															"pm.collectionVariables.set(\"randomName\", name);\r",
															"const email = pm.variables.replaceIn('{{$randomExampleEmail}}');\r",
															"pm.collectionVariables.set(\"randomEmail\", email);\r",
															"\r",
															"pm.sendRequest({\r",
															"    url: pm.environment.get('baseUrl') + '/usuarios',\r",
															"    method: 'POST',\r",
															"    header: {\r",
															"        'Accept': 'application/json',\r",
															"        'Content-Type': 'application/json'\r",
															"      },\r",
															"    body: {\r",
															"        mode: 'raw',\r",
															"        raw: JSON.stringify({\r",
															"            \"nome\": pm.collectionVariables.get('randomName'),\r",
															"            \"email\": pm.collectionVariables.get('randomEmail'),\r",
															"            \"password\": pm.collectionVariables.get('validPassword'),\r",
															"            \"administrador\": \"false\"\r",
															"        })\r",
															"    }\r",
															"}, function (err, res) {\r",
															"    if (err) {\r",
															"            console.error(err);\r",
															"            return;\r",
															"    }\r",
															"\r",
															"    pm.sendRequest({\r",
															"        url: pm.environment.get('baseUrl') + '/login',\r",
															"        method: 'POST',\r",
															"        header: {\r",
															"            'Accept': 'application/json',\r",
															"            'Content-Type': 'application/json'\r",
															"        },\r",
															"        body: {\r",
															"            mode: 'raw',\r",
															"            raw: JSON.stringify({\r",
															"                \"email\": pm.collectionVariables.get('randomEmail'),\r",
															"                \"password\": pm.collectionVariables.get('validPassword')\r",
															"            })\r",
															"        }\r",
															"    }, function (err, res) {\r",
															"        if (err) {\r",
															"            console.error(err);\r",
															"            return;\r",
															"        }\r",
															"\r",
															"        pm.collectionVariables.set('token', res.json().authorization);\r",
															"    });\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "value",
															"value": "{{token}}",
															"type": "string"
														},
														{
															"key": "key",
															"value": "Authorization",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n            \"nome\": \"{{$randomProductName}}\",\r\n            \"preco\": \"{{$randomInt}}\",\r\n            \"descricao\": \"{{$randomPhrase}}\",\r\n            \"quantidade\": \"{{$randomInt}}\"\r\n        }\r\n",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/produtos/:_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"produtos",
														":_id"
													],
													"variable": [
														{
															"key": "_id",
															"value": "{{$randomPassword}}"
														}
													]
												}
											},
											"response": [
												{
													"name": "Atualizar produto inexistente como usuário comum",
													"originalRequest": {
														"method": "PUT",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\r\n            \"nome\": \"{{$randomProductName}}\",\r\n            \"preco\": \"{{$randomInt}}\",\r\n            \"descricao\": \"{{$randomPhrase}}\",\r\n            \"quantidade\": \"{{$randomInt}}\"\r\n        }\r\n",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/produtos/:_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"produtos",
																":_id"
															],
															"variable": [
																{
																	"key": "_id",
																	"value": "{{$randomPassword}}"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Access-Control-Allow-Origin",
															"value": "*"
														},
														{
															"key": "x-dns-prefetch-control",
															"value": "off"
														},
														{
															"key": "x-frame-options",
															"value": "SAMEORIGIN"
														},
														{
															"key": "strict-transport-security",
															"value": "max-age=15552000; includeSubDomains"
														},
														{
															"key": "x-download-options",
															"value": "noopen"
														},
														{
															"key": "x-content-type-options",
															"value": "nosniff"
														},
														{
															"key": "x-xss-protection",
															"value": "1; mode=block"
														},
														{
															"key": "x-moesif-transaction-id",
															"value": "f367bab8-9e2e-4a01-83e9-2aa18fe943b0"
														},
														{
															"key": "Content-Type",
															"value": "application/json; charset=utf-8"
														},
														{
															"key": "Content-Length",
															"value": "56"
														},
														{
															"key": "Date",
															"value": "Sat, 07 Oct 2023 17:28:58 GMT"
														},
														{
															"key": "Connection",
															"value": "keep-alive"
														},
														{
															"key": "Keep-Alive",
															"value": "timeout=5"
														}
													],
													"cookie": [],
													"body": "{\n    \"message\": \"Rota exclusiva para administradores\"\n}"
												}
											]
										}
									],
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													"pm.sendRequest({",
													"    url: pm.environment.get('baseUrl') + '/login',",
													"    method: 'POST',",
													"    header: {",
													"        'Accept': 'application/json',",
													"        'Content-Type': 'application/json'",
													"      },",
													"    body: {",
													"        mode: 'raw',",
													"        raw: JSON.stringify({",
													"            \"email\": pm.collectionVariables.get('adminEmail'),",
													"            \"password\": pm.collectionVariables.get('adminPassword')",
													"        })",
													"    }",
													"}, function (err, res) {",
													"    pm.collectionVariables.set('token', res.json().authorization);",
													"});",
													""
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										}
									]
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						}
					]
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "carrinhos",
			"item": [
				{
					"name": "Cadastrar carrinho",
					"item": [
						{
							"name": "CT_087: Cadastrar carrinho válido",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"pm.test(\"Checks the response body\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.message).to.eql('Cadastro realizado com sucesso');\r",
											"    pm.expect(jsonData.id).not.null;\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{token}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"produtos\": [\r\n    {\r\n      \"idProduto\": \"{{defaultProductId}}\",\r\n      \"quantidade\": 1\r\n    }\r\n  ]\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/carrinhos",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"carrinhos"
									]
								}
							},
							"response": [
								{
									"name": "Cadastrar carrinho válido",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"produtos\": [\r\n    {\r\n      \"idProduto\": \"{{defaultProductId}}\",\r\n      \"quantidade\": 1\r\n    }\r\n  ]\r\n}\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/carrinhos",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"carrinhos"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "x-dns-prefetch-control",
											"value": "off"
										},
										{
											"key": "x-frame-options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "strict-transport-security",
											"value": "max-age=15552000; includeSubDomains"
										},
										{
											"key": "x-download-options",
											"value": "noopen"
										},
										{
											"key": "x-content-type-options",
											"value": "nosniff"
										},
										{
											"key": "x-xss-protection",
											"value": "1; mode=block"
										},
										{
											"key": "x-moesif-transaction-id",
											"value": "5c9efeb0-d94d-4a1f-874a-962965bed23a"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "82"
										},
										{
											"key": "Date",
											"value": "Sat, 07 Oct 2023 17:30:48 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"body": "{\n    \"message\": \"Cadastro realizado com sucesso\",\n    \"_id\": \"zeruc2hvC7G2wFUf\"\n}"
								}
							]
						},
						{
							"name": "CT_088: Cadastrar carrinho vazio",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Checks the response body\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.produtos).to.eql(\"produtos não contém 1 valor obrigatório\");\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{token}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"produtos\": []\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/carrinhos",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"carrinhos"
									]
								}
							},
							"response": [
								{
									"name": "Cadastrar carrinho vazio",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"produtos\": []\r\n}\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/carrinhos",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"carrinhos"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "x-dns-prefetch-control",
											"value": "off"
										},
										{
											"key": "x-frame-options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "strict-transport-security",
											"value": "max-age=15552000; includeSubDomains"
										},
										{
											"key": "x-download-options",
											"value": "noopen"
										},
										{
											"key": "x-content-type-options",
											"value": "nosniff"
										},
										{
											"key": "x-xss-protection",
											"value": "1; mode=block"
										},
										{
											"key": "x-moesif-transaction-id",
											"value": "d159f028-29a0-41a8-a44c-ea10244eb012"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "64"
										},
										{
											"key": "Date",
											"value": "Sat, 07 Oct 2023 17:31:44 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"body": "{\n    \"produtos\": \"produtos não contém 1 valor obrigatório\"\n}"
								}
							]
						},
						{
							"name": "CT_089: Cadastrar carrinho com produto inválido",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Checks the response body\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.message).to.eql('Produto não encontrado');\r",
											"    pm.expect(jsonData.item).to.be.a('object');\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{token}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"produtos\": [\r\n    {\r\n      \"idProduto\": \"{{$randomPassword}}\",\r\n      \"quantidade\": 1\r\n    }\r\n  ]\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/carrinhos",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"carrinhos"
									]
								}
							},
							"response": [
								{
									"name": "Cadastrar carrinho com produto inválido",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"produtos\": [\r\n    {\r\n      \"idProduto\": \"{{$randomPassword}}\",\r\n      \"quantidade\": 1\r\n    }\r\n  ]\r\n}\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/carrinhos",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"carrinhos"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "x-dns-prefetch-control",
											"value": "off"
										},
										{
											"key": "x-frame-options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "strict-transport-security",
											"value": "max-age=15552000; includeSubDomains"
										},
										{
											"key": "x-download-options",
											"value": "noopen"
										},
										{
											"key": "x-content-type-options",
											"value": "nosniff"
										},
										{
											"key": "x-xss-protection",
											"value": "1; mode=block"
										},
										{
											"key": "x-moesif-transaction-id",
											"value": "ef627bf3-2704-4589-8233-b20066dec357"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "149"
										},
										{
											"key": "Date",
											"value": "Sat, 07 Oct 2023 17:32:37 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"body": "{\n    \"message\": \"Produto não encontrado\",\n    \"item\": {\n        \"idProduto\": \"PzXE0tzMTzJAyTm\",\n        \"quantidade\": 1,\n        \"index\": 0\n    }\n}"
								}
							]
						},
						{
							"name": "CT_090: Cadastrar carrinho com produto duplicado",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Checks the response body\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.message).to.eql('Não é permitido possuir produto duplicado');\r",
											"    pm.expect(jsonData.idProdutosDuplicados).length.greaterThan(0);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{token}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"produtos\": [\r\n    {\r\n      \"idProduto\": \"{{defaultProductId}}\",\r\n      \"quantidade\": 1\r\n    },\r\n    {\r\n      \"idProduto\": \"{{defaultProductId}}\",\r\n      \"quantidade\": 1\r\n    }\r\n  ]\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/carrinhos",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"carrinhos"
									]
								}
							},
							"response": [
								{
									"name": "Cadastrar carrinho com produto duplicado",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"produtos\": [\r\n    {\r\n      \"idProduto\": \"{{defaultProductId}}\",\r\n      \"quantidade\": 1\r\n    },\r\n    {\r\n      \"idProduto\": \"{{defaultProductId}}\",\r\n      \"quantidade\": 1\r\n    }\r\n  ]\r\n}\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/carrinhos",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"carrinhos"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "x-dns-prefetch-control",
											"value": "off"
										},
										{
											"key": "x-frame-options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "strict-transport-security",
											"value": "max-age=15552000; includeSubDomains"
										},
										{
											"key": "x-download-options",
											"value": "noopen"
										},
										{
											"key": "x-content-type-options",
											"value": "nosniff"
										},
										{
											"key": "x-xss-protection",
											"value": "1; mode=block"
										},
										{
											"key": "x-moesif-transaction-id",
											"value": "fb06eb85-e760-4227-8638-c9bee5248c84"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "128"
										},
										{
											"key": "Date",
											"value": "Sat, 07 Oct 2023 17:33:25 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"body": "{\n    \"message\": \"Não é permitido possuir produto duplicado\",\n    \"idProdutosDuplicados\": [\n        \"BeeJh5lz3k6kSIzA\"\n    ]\n}"
								}
							]
						},
						{
							"name": "CT_091: Cadastrar carrinho com produto em branco",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Checks the response body\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.produtos).to.eql(\"produtos não contém 1 valor obrigatório\");\r",
											"    pm.expect(pm.response.text()).to.include('.idProduto não pode ficar em branco');\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{token}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"produtos\": [\r\n    {\r\n      \"idProduto\": \"\",\r\n      \"quantidade\": 1\r\n    }\r\n  ]\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/carrinhos",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"carrinhos"
									]
								}
							},
							"response": [
								{
									"name": "Cadastrar carrinho com produto em branco",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"produtos\": [\r\n    {\r\n      \"idProduto\": \"\",\r\n      \"quantidade\": 1\r\n    }\r\n  ]\r\n}\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/carrinhos",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"carrinhos"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "x-dns-prefetch-control",
											"value": "off"
										},
										{
											"key": "x-frame-options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "strict-transport-security",
											"value": "max-age=15552000; includeSubDomains"
										},
										{
											"key": "x-download-options",
											"value": "noopen"
										},
										{
											"key": "x-content-type-options",
											"value": "nosniff"
										},
										{
											"key": "x-xss-protection",
											"value": "1; mode=block"
										},
										{
											"key": "x-moesif-transaction-id",
											"value": "b2746420-3469-42bd-a880-181383806bff"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "144"
										},
										{
											"key": "Date",
											"value": "Sat, 07 Oct 2023 17:35:49 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"body": "{\n    \"produtos[0].idProduto\": \"produtos[0].idProduto não pode ficar em branco\",\n    \"produtos\": \"produtos não contém 1 valor obrigatório\"\n}"
								}
							]
						},
						{
							"name": "CT_092: Cadastrar carrinho com quantidade indisponível",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Checks the response body\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.message).to.eql('Produto não possui quantidade suficiente');\r",
											"    pm.expect(jsonData.item.quantidade).greaterThan(jsonData.item.quantidadeEstoque);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{token}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"produtos\": [\r\n    {\r\n      \"idProduto\": \"{{defaultProductId}}\",\r\n      \"quantidade\": 100000\r\n    }\r\n  ]\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/carrinhos",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"carrinhos"
									]
								}
							},
							"response": [
								{
									"name": "Cadastrar carrinho com quantidade indisponível",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"produtos\": [\r\n    {\r\n      \"idProduto\": \"{{defaultProductId}}\",\r\n      \"quantidade\": 100000\r\n    }\r\n  ]\r\n}\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/carrinhos",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"carrinhos"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "x-dns-prefetch-control",
											"value": "off"
										},
										{
											"key": "x-frame-options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "strict-transport-security",
											"value": "max-age=15552000; includeSubDomains"
										},
										{
											"key": "x-download-options",
											"value": "noopen"
										},
										{
											"key": "x-content-type-options",
											"value": "nosniff"
										},
										{
											"key": "x-xss-protection",
											"value": "1; mode=block"
										},
										{
											"key": "x-moesif-transaction-id",
											"value": "425734bb-477e-45c5-b505-8b9729bf3d69"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "207"
										},
										{
											"key": "Date",
											"value": "Sat, 07 Oct 2023 17:36:41 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"body": "{\n    \"message\": \"Produto não possui quantidade suficiente\",\n    \"item\": {\n        \"idProduto\": \"BeeJh5lz3k6kSIzA\",\n        \"quantidade\": 100000,\n        \"quantidadeEstoque\": 363,\n        \"index\": 0\n    }\n}"
								}
							]
						},
						{
							"name": "CT_093: Cadastrar carrinho com quantidade inválida",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Checks the response body\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.produtos).to.eql(\"produtos não contém 1 valor obrigatório\");\r",
											"    pm.expect(pm.response.text()).to.include(\".quantidade deve ser um número\");\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{token}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"produtos\": [\r\n    {\r\n      \"idProduto\": \"{{defaultProductId}}\",\r\n      \"quantidade\": \"{{$randomHexColor}}\"\r\n    }\r\n  ]\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/carrinhos",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"carrinhos"
									]
								}
							},
							"response": [
								{
									"name": "Cadastrar carrinho com quantidade inválida",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"produtos\": [\r\n    {\r\n      \"idProduto\": \"{{defaultProductId}}\",\r\n      \"quantidade\": \"{{$randomHexColor}}\"\r\n    }\r\n  ]\r\n}\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/carrinhos",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"carrinhos"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "x-dns-prefetch-control",
											"value": "off"
										},
										{
											"key": "x-frame-options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "strict-transport-security",
											"value": "max-age=15552000; includeSubDomains"
										},
										{
											"key": "x-download-options",
											"value": "noopen"
										},
										{
											"key": "x-content-type-options",
											"value": "nosniff"
										},
										{
											"key": "x-xss-protection",
											"value": "1; mode=block"
										},
										{
											"key": "x-moesif-transaction-id",
											"value": "9ee0bb29-07ef-4c8c-a58b-0b6fa3abb989"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "140"
										},
										{
											"key": "Date",
											"value": "Sat, 07 Oct 2023 17:38:04 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"body": "{\n    \"produtos[0].quantidade\": \"produtos[0].quantidade deve ser um número\",\n    \"produtos\": \"produtos não contém 1 valor obrigatório\"\n}"
								}
							]
						},
						{
							"name": "CT_094: Cadastrar carrinho com quantidade zero",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Checks the response body\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.produtos).to.eql(\"produtos não contém 1 valor obrigatório\");\r",
											"    pm.expect(pm.response.text()).to.include(\".quantidade deve ser um número positivo\");\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{token}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"produtos\": [\r\n    {\r\n      \"idProduto\": \"{{defaultProductId}}\",\r\n      \"quantidade\": 0\r\n    }\r\n  ]\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/carrinhos",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"carrinhos"
									]
								}
							},
							"response": [
								{
									"name": "Cadastrar carrinho com quantidade zero",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"produtos\": [\r\n    {\r\n      \"idProduto\": \"{{defaultProductId}}\",\r\n      \"quantidade\": 0\r\n    }\r\n  ]\r\n}\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/carrinhos",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"carrinhos"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "x-dns-prefetch-control",
											"value": "off"
										},
										{
											"key": "x-frame-options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "strict-transport-security",
											"value": "max-age=15552000; includeSubDomains"
										},
										{
											"key": "x-download-options",
											"value": "noopen"
										},
										{
											"key": "x-content-type-options",
											"value": "nosniff"
										},
										{
											"key": "x-xss-protection",
											"value": "1; mode=block"
										},
										{
											"key": "x-moesif-transaction-id",
											"value": "1ca0f9ea-0bf5-4d12-9f2e-554b1424c704"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "149"
										},
										{
											"key": "Date",
											"value": "Sat, 07 Oct 2023 17:38:52 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"body": "{\n    \"produtos[0].quantidade\": \"produtos[0].quantidade deve ser um número positivo\",\n    \"produtos\": \"produtos não contém 1 valor obrigatório\"\n}"
								}
							]
						},
						{
							"name": "CT_095: Cadastrar carrinho com quantidade em branco",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Checks the response body\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.produtos).to.eql(\"produtos não contém 1 valor obrigatório\");\r",
											"    pm.expect(pm.response.text()).to.include(\".quantidade deve ser um número\");\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{token}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"produtos\": [\r\n    {\r\n      \"idProduto\": \"{{defaultProductId}}\",\r\n      \"quantidade\": \"\"\r\n    }\r\n  ]\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/carrinhos",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"carrinhos"
									]
								}
							},
							"response": [
								{
									"name": "Cadastrar carrinho com quantidade em branco",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"produtos\": [\r\n    {\r\n      \"idProduto\": \"{{defaultProductId}}\",\r\n      \"quantidade\": \"\"\r\n    }\r\n  ]\r\n}\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/carrinhos",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"carrinhos"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "x-dns-prefetch-control",
											"value": "off"
										},
										{
											"key": "x-frame-options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "strict-transport-security",
											"value": "max-age=15552000; includeSubDomains"
										},
										{
											"key": "x-download-options",
											"value": "noopen"
										},
										{
											"key": "x-content-type-options",
											"value": "nosniff"
										},
										{
											"key": "x-xss-protection",
											"value": "1; mode=block"
										},
										{
											"key": "x-moesif-transaction-id",
											"value": "d8d4de15-6131-4f66-9032-42370fc3be55"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "140"
										},
										{
											"key": "Date",
											"value": "Sat, 07 Oct 2023 17:39:36 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"body": "{\n    \"produtos[0].quantidade\": \"produtos[0].quantidade deve ser um número\",\n    \"produtos\": \"produtos não contém 1 valor obrigatório\"\n}"
								}
							]
						},
						{
							"name": "CT_096: Cadastrar carrinho para usuário com carrinho já cadastrado",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.sendRequest({\r",
											"    url: pm.environment.get('baseUrl') + '/carrinhos',\r",
											"    method: 'POST',\r",
											"    header: {\r",
											"        'Accept': 'application/json',\r",
											"        'Content-Type': 'application/json',\r",
											"        'Authorization': pm.collectionVariables.get('token')\r",
											"      },\r",
											"    body: {\r",
											"        mode: 'raw',\r",
											"        raw: JSON.stringify({\r",
											"            \"produtos\": [\r",
											"                {\r",
											"                \"idProduto\": pm.collectionVariables.get('defaultProductId'),\r",
											"                \"quantidade\": 1\r",
											"                }\r",
											"            ]\r",
											"        })\r",
											"    }\r",
											"}, function (err, res) {\r",
											"    if (err) {\r",
											"            console.error(err);\r",
											"            return;\r",
											"    }\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Checks the response body\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.message).to.eql(\"Não é permitido ter mais de 1 carrinho\");\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{token}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"produtos\": [\r\n    {\r\n      \"idProduto\": \"{{defaultProductId}}\",\r\n      \"quantidade\": 1\r\n    }\r\n  ]\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/carrinhos",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"carrinhos"
									]
								}
							},
							"response": [
								{
									"name": "Cadastrar carrinho para usuário com carrinho já cadastrado",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"produtos\": [\r\n    {\r\n      \"idProduto\": \"{{defaultProductId}}\",\r\n      \"quantidade\": 1\r\n    }\r\n  ]\r\n}\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/carrinhos",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"carrinhos"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "x-dns-prefetch-control",
											"value": "off"
										},
										{
											"key": "x-frame-options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "strict-transport-security",
											"value": "max-age=15552000; includeSubDomains"
										},
										{
											"key": "x-download-options",
											"value": "noopen"
										},
										{
											"key": "x-content-type-options",
											"value": "nosniff"
										},
										{
											"key": "x-xss-protection",
											"value": "1; mode=block"
										},
										{
											"key": "x-moesif-transaction-id",
											"value": "2d943c89-d2c9-4492-962c-f8bb52bf4101"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "61"
										},
										{
											"key": "Date",
											"value": "Sat, 07 Oct 2023 17:40:30 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"body": "{\n    \"message\": \"Não é permitido ter mais de 1 carrinho\"\n}"
								}
							]
						},
						{
							"name": "CT_097: Cadastrar carrinho sem estar autenticado",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 401\", function () {\r",
											"    pm.response.to.have.status(401);\r",
											"});\r",
											"\r",
											"pm.test(\"Checks the response body\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.message).to.eql(\"Token de acesso ausente, inválido, expirado ou usuário do token não existe mais\");\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"produtos\": [\r\n    {\r\n      \"idProduto\": \"{{defaultProductId}}\",\r\n      \"quantidade\": 1\r\n    }\r\n  ]\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/carrinhos",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"carrinhos"
									]
								}
							},
							"response": [
								{
									"name": "Cadastrar carrinho sem estar autenticado",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"produtos\": [\r\n    {\r\n      \"idProduto\": \"{{defaultProductId}}\",\r\n      \"quantidade\": 1\r\n    }\r\n  ]\r\n}\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/carrinhos",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"carrinhos"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "x-dns-prefetch-control",
											"value": "off"
										},
										{
											"key": "x-frame-options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "strict-transport-security",
											"value": "max-age=15552000; includeSubDomains"
										},
										{
											"key": "x-download-options",
											"value": "noopen"
										},
										{
											"key": "x-content-type-options",
											"value": "nosniff"
										},
										{
											"key": "x-xss-protection",
											"value": "1; mode=block"
										},
										{
											"key": "x-moesif-transaction-id",
											"value": "6a2ad938-e7cf-48a0-a830-da5b9d355407"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "103"
										},
										{
											"key": "Date",
											"value": "Sat, 07 Oct 2023 17:41:05 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"body": "{\n    \"message\": \"Token de acesso ausente, inválido, expirado ou usuário do token não existe mais\"\n}"
								}
							]
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"const name = pm.variables.replaceIn('{{$randomFullName}}');",
									"pm.collectionVariables.set(\"randomName\", name);",
									"const email = pm.variables.replaceIn('{{$randomExampleEmail}}');",
									"pm.collectionVariables.set(\"randomEmail\", email);",
									"",
									"pm.sendRequest({",
									"    url: pm.environment.get('baseUrl') + '/usuarios',",
									"    method: 'POST',",
									"    header: {",
									"        'Accept': 'application/json',",
									"        'Content-Type': 'application/json'",
									"      },",
									"    body: {",
									"        mode: 'raw',",
									"        raw: JSON.stringify({",
									"            \"nome\": pm.collectionVariables.get('randomName'),",
									"            \"email\": pm.collectionVariables.get('randomEmail'),",
									"            \"password\": pm.collectionVariables.get('validPassword'),",
									"            \"administrador\": \"false\"",
									"        })",
									"    }",
									"}, function (err, res) {",
									"    if (err) {",
									"            console.error(err);",
									"            return;",
									"    }",
									"",
									"    pm.sendRequest({",
									"        url: pm.environment.get('baseUrl') + '/login',",
									"        method: 'POST',",
									"        header: {",
									"            'Accept': 'application/json',",
									"            'Content-Type': 'application/json'",
									"        },",
									"        body: {",
									"            mode: 'raw',",
									"            raw: JSON.stringify({",
									"                \"email\": pm.collectionVariables.get('randomEmail'),",
									"                \"password\": pm.collectionVariables.get('validPassword')",
									"            })",
									"        }",
									"    }, function (err, res) {",
									"        if (err) {",
									"            console.error(err);",
									"            return;",
									"        }",
									"",
									"        pm.collectionVariables.set('token', res.json().authorization);",
									"    });",
									"});",
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "Listar carrinhos cadastrados",
					"item": [
						{
							"name": "CT_098: Obter lista de carrinhos cadastrados",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Checks the response body\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.quantidade).to.be.a('number');\r",
											"    pm.expect(jsonData.carrinhos).to.be.a('array');\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/carrinhos",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"carrinhos"
									]
								}
							},
							"response": [
								{
									"name": "Obter lista de carrinhos cadastrados",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/carrinhos",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"carrinhos"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "x-dns-prefetch-control",
											"value": "off"
										},
										{
											"key": "x-frame-options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "strict-transport-security",
											"value": "max-age=15552000; includeSubDomains"
										},
										{
											"key": "x-download-options",
											"value": "noopen"
										},
										{
											"key": "x-content-type-options",
											"value": "nosniff"
										},
										{
											"key": "x-xss-protection",
											"value": "1; mode=block"
										},
										{
											"key": "x-moesif-transaction-id",
											"value": "9fdf18aa-ffbf-45d1-b1c7-f26f9b209941"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "6628"
										},
										{
											"key": "Date",
											"value": "Sat, 07 Oct 2023 17:42:20 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"body": "{\n    \"quantidade\": 17,\n    \"carrinhos\": [\n        {\n            \"produtos\": [\n                {\n                    \"idProduto\": \"BeeJh5lz3k6kSIzA\",\n                    \"quantidade\": 1,\n                    \"precoUnitario\": 470\n                }\n            ],\n            \"precoTotal\": 470,\n            \"quantidadeTotal\": 1,\n            \"idUsuario\": \"RZI2uIwDTQtgqswi\",\n            \"_id\": \"3NCv8wJiFAAkNz8t\"\n        },\n        {\n            \"produtos\": [\n                {\n                    \"idProduto\": \"BeeJh5lz3k6kSIzA\",\n                    \"quantidade\": 1,\n                    \"precoUnitario\": 470\n                }\n            ],\n            \"precoTotal\": 470,\n            \"quantidadeTotal\": 1,\n            \"idUsuario\": \"YzaQKRsvdgRGtuSz\",\n            \"_id\": \"5b5QfQWDyJ36XSas\"\n        },\n        {\n            \"produtos\": [\n                {\n                    \"idProduto\": \"BeeJh5lz3k6kSIzA\",\n                    \"quantidade\": 1,\n                    \"precoUnitario\": 470\n                }\n            ],\n            \"precoTotal\": 470,\n            \"quantidadeTotal\": 1,\n            \"idUsuario\": \"Q9PlFUhw2fVUsNLw\",\n            \"_id\": \"A6oQqmSAOhobA4zf\"\n        },\n        {\n            \"produtos\": [\n                {\n                    \"idProduto\": \"BeeJh5lz3k6kSIzA\",\n                    \"quantidade\": 1,\n                    \"precoUnitario\": 470\n                }\n            ],\n            \"precoTotal\": 470,\n            \"quantidadeTotal\": 1,\n            \"idUsuario\": \"CwnVxOKvg5c3aDiN\",\n            \"_id\": \"CUITsJ2u0W98WGzN\"\n        },\n        {\n            \"produtos\": [\n                {\n                    \"idProduto\": \"BeeJh5lz3k6kSIzA\",\n                    \"quantidade\": 1,\n                    \"precoUnitario\": 470\n                }\n            ],\n            \"precoTotal\": 470,\n            \"quantidadeTotal\": 1,\n            \"idUsuario\": \"U5nMolVHuFBCvMZi\",\n            \"_id\": \"ETZ1zLI6LgK6dhm8\"\n        },\n        {\n            \"produtos\": [\n                {\n                    \"idProduto\": \"BeeJh5lz3k6kSIzA\",\n                    \"quantidade\": 1,\n                    \"precoUnitario\": 470\n                }\n            ],\n            \"precoTotal\": 470,\n            \"quantidadeTotal\": 1,\n            \"idUsuario\": \"dKLwGWuDADjxbf4V\",\n            \"_id\": \"FanFwOaq5SDvGbZz\"\n        },\n        {\n            \"produtos\": [\n                {\n                    \"idProduto\": \"BeeJh5lz3k6kSIzA\",\n                    \"quantidade\": 1,\n                    \"precoUnitario\": 470\n                }\n            ],\n            \"precoTotal\": 470,\n            \"quantidadeTotal\": 1,\n            \"idUsuario\": \"fxknvuXDBYtHLn5U\",\n            \"_id\": \"OHkoE2yvwtgc6DVa\"\n        },\n        {\n            \"produtos\": [\n                {\n                    \"idProduto\": \"BeeJh5lz3k6kSIzA\",\n                    \"quantidade\": 1,\n                    \"precoUnitario\": 470\n                }\n            ],\n            \"precoTotal\": 470,\n            \"quantidadeTotal\": 1,\n            \"idUsuario\": \"ARgEHncVYXzamGOW\",\n            \"_id\": \"ON1WqSEuUMkDqTtt\"\n        },\n        {\n            \"produtos\": [\n                {\n                    \"idProduto\": \"BeeJh5lz3k6kSIzA\",\n                    \"quantidade\": 1,\n                    \"precoUnitario\": 470\n                }\n            ],\n            \"precoTotal\": 470,\n            \"quantidadeTotal\": 1,\n            \"idUsuario\": \"hY9hmPWRztECCXGB\",\n            \"_id\": \"VGBAs92MPGeHVYlW\"\n        },\n        {\n            \"produtos\": [\n                {\n                    \"idProduto\": \"BeeJh5lz3k6kSIzA\",\n                    \"quantidade\": 1,\n                    \"precoUnitario\": 470\n                }\n            ],\n            \"precoTotal\": 470,\n            \"quantidadeTotal\": 1,\n            \"idUsuario\": \"Hh53fxQx2n5JLE7I\",\n            \"_id\": \"asW4PElV6LavRtzL\"\n        },\n        {\n            \"produtos\": [\n                {\n                    \"idProduto\": \"BeeJh5lz3k6kSIzA\",\n                    \"quantidade\": 1,\n                    \"precoUnitario\": 470\n                }\n            ],\n            \"precoTotal\": 470,\n            \"quantidadeTotal\": 1,\n            \"idUsuario\": \"Ii4I9IQRvToupvdZ\",\n            \"_id\": \"dDO8dmjnGrrFECqo\"\n        },\n        {\n            \"produtos\": [\n                {\n                    \"idProduto\": \"BeeJh5lz3k6kSIzA\",\n                    \"quantidade\": 1,\n                    \"precoUnitario\": 470\n                }\n            ],\n            \"precoTotal\": 470,\n            \"quantidadeTotal\": 1,\n            \"idUsuario\": \"JLbHzzrPmhHPCZ68\",\n            \"_id\": \"o0hQ4onALOXFfWNB\"\n        },\n        {\n            \"produtos\": [\n                {\n                    \"idProduto\": \"BeeJh5lz3k6kSIzA\",\n                    \"quantidade\": 2,\n                    \"precoUnitario\": 470\n                },\n                {\n                    \"idProduto\": \"K6leHdftCeOJj8BJ\",\n                    \"quantidade\": 1,\n                    \"precoUnitario\": 5240\n                }\n            ],\n            \"precoTotal\": 6180,\n            \"quantidadeTotal\": 3,\n            \"idUsuario\": \"oUb7aGkMtSEPf6BZ\",\n            \"_id\": \"qbMqntef4iTOwWfg\"\n        },\n        {\n            \"produtos\": [\n                {\n                    \"idProduto\": \"BeeJh5lz3k6kSIzA\",\n                    \"quantidade\": 1,\n                    \"precoUnitario\": 470\n                }\n            ],\n            \"precoTotal\": 470,\n            \"quantidadeTotal\": 1,\n            \"idUsuario\": \"2nxSPtIs9fcuXNS8\",\n            \"_id\": \"tbOyHVMDpdWwuwE1\"\n        },\n        {\n            \"produtos\": [\n                {\n                    \"idProduto\": \"BeeJh5lz3k6kSIzA\",\n                    \"quantidade\": 1,\n                    \"precoUnitario\": 470\n                }\n            ],\n            \"precoTotal\": 470,\n            \"quantidadeTotal\": 1,\n            \"idUsuario\": \"CNkdgTgoybvcvX0I\",\n            \"_id\": \"xyLXqXqffEToc3Oa\"\n        },\n        {\n            \"produtos\": [\n                {\n                    \"idProduto\": \"BeeJh5lz3k6kSIzA\",\n                    \"quantidade\": 1,\n                    \"precoUnitario\": 470\n                }\n            ],\n            \"precoTotal\": 470,\n            \"quantidadeTotal\": 1,\n            \"idUsuario\": \"ep1wcDupPjoolpHZ\",\n            \"_id\": \"zN3WdkIYIkOQLkoP\"\n        },\n        {\n            \"produtos\": [\n                {\n                    \"idProduto\": \"BeeJh5lz3k6kSIzA\",\n                    \"quantidade\": 1,\n                    \"precoUnitario\": 470\n                }\n            ],\n            \"precoTotal\": 470,\n            \"quantidadeTotal\": 1,\n            \"idUsuario\": \"fxggp1OJoMm4UzQe\",\n            \"_id\": \"zeruc2hvC7G2wFUf\"\n        }\n    ]\n}"
								}
							]
						}
					]
				},
				{
					"name": "{_id}",
					"item": [
						{
							"name": "Buscar carrinho por ID",
							"item": [
								{
									"name": "CT_099: Buscar por carrinho válido",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Checks the response body\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.produtos).length.greaterThan(0);\r",
													"    pm.expect(jsonData.precoTotal).to.be.a('number');\r",
													"    pm.expect(jsonData.quantidadeTotal).greaterThan(0);\r",
													"    pm.expect(jsonData.idUsuario).not.null;\r",
													"    pm.expect(jsonData._id).to.be.equal(pm.collectionVariables.get('defaultCartId'));\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/carrinhos/:_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"carrinhos",
												":_id"
											],
											"variable": [
												{
													"key": "_id",
													"value": "{{defaultCartId}}"
												}
											]
										}
									},
									"response": [
										{
											"name": "Buscar por carrinho válido",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/carrinhos/:_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"carrinhos",
														":_id"
													],
													"variable": [
														{
															"key": "_id",
															"value": "{{defaultCartId}}"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "x-dns-prefetch-control",
													"value": "off"
												},
												{
													"key": "x-frame-options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "strict-transport-security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "x-download-options",
													"value": "noopen"
												},
												{
													"key": "x-content-type-options",
													"value": "nosniff"
												},
												{
													"key": "x-xss-protection",
													"value": "1; mode=block"
												},
												{
													"key": "x-moesif-transaction-id",
													"value": "8cfaca5c-4c66-4bfb-a929-6cecf088e528"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "401"
												},
												{
													"key": "Date",
													"value": "Sat, 07 Oct 2023 17:42:58 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"body": "{\n    \"produtos\": [\n        {\n            \"idProduto\": \"BeeJh5lz3k6kSIzA\",\n            \"quantidade\": 2,\n            \"precoUnitario\": 470\n        },\n        {\n            \"idProduto\": \"K6leHdftCeOJj8BJ\",\n            \"quantidade\": 1,\n            \"precoUnitario\": 5240\n        }\n    ],\n    \"precoTotal\": 6180,\n    \"quantidadeTotal\": 3,\n    \"idUsuario\": \"oUb7aGkMtSEPf6BZ\",\n    \"_id\": \"qbMqntef4iTOwWfg\"\n}"
										}
									]
								},
								{
									"name": "CT_100: Buscar por carrinho inválido",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"Checks the response body\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.message).to.be.equal(\"Carrinho não encontrado\");\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/carrinhos/:_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"carrinhos",
												":_id"
											],
											"variable": [
												{
													"key": "_id",
													"value": "{{$randomPassword}}"
												}
											]
										}
									},
									"response": [
										{
											"name": "Buscar por carrinho inválido",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/carrinhos/:_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"carrinhos",
														":_id"
													],
													"variable": [
														{
															"key": "_id",
															"value": "{{$randomPassword}}"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "x-dns-prefetch-control",
													"value": "off"
												},
												{
													"key": "x-frame-options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "strict-transport-security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "x-download-options",
													"value": "noopen"
												},
												{
													"key": "x-content-type-options",
													"value": "nosniff"
												},
												{
													"key": "x-xss-protection",
													"value": "1; mode=block"
												},
												{
													"key": "x-moesif-transaction-id",
													"value": "0061b243-b331-43e1-bc38-3b5de561e605"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "45"
												},
												{
													"key": "Date",
													"value": "Sat, 07 Oct 2023 17:45:49 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"body": "{\n    \"message\": \"Carrinho não encontrado\"\n}"
										}
									]
								}
							]
						}
					]
				},
				{
					"name": "concluir-compra",
					"item": [
						{
							"name": "Concluir compra",
							"item": [
								{
									"name": "CT_101: Concluir compra com carrinho válido",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const name = pm.variables.replaceIn('{{$randomFullName}}');\r",
													"pm.collectionVariables.set(\"randomName\", name);\r",
													"const email = pm.variables.replaceIn('{{$randomExampleEmail}}');\r",
													"pm.collectionVariables.set(\"randomEmail\", email);\r",
													"\r",
													"pm.sendRequest({\r",
													"    url: pm.environment.get('baseUrl') + '/usuarios',\r",
													"    method: 'POST',\r",
													"    header: {\r",
													"        'Accept': 'application/json',\r",
													"        'Content-Type': 'application/json'\r",
													"      },\r",
													"    body: {\r",
													"        mode: 'raw',\r",
													"        raw: JSON.stringify({\r",
													"            \"nome\": pm.collectionVariables.get('randomName'),\r",
													"            \"email\": pm.collectionVariables.get('randomEmail'),\r",
													"            \"password\": pm.collectionVariables.get('validPassword'),\r",
													"            \"administrador\": \"false\"\r",
													"        })\r",
													"    }\r",
													"}, function (err, res) {\r",
													"    if (err) {\r",
													"            console.error(err);\r",
													"            return;\r",
													"    }\r",
													"\r",
													"    pm.sendRequest({\r",
													"        url: pm.environment.get('baseUrl') + '/login',\r",
													"        method: 'POST',\r",
													"        header: {\r",
													"            'Accept': 'application/json',\r",
													"            'Content-Type': 'application/json'\r",
													"        },\r",
													"        body: {\r",
													"            mode: 'raw',\r",
													"            raw: JSON.stringify({\r",
													"                \"email\": pm.collectionVariables.get('randomEmail'),\r",
													"                \"password\": pm.collectionVariables.get('validPassword')\r",
													"            })\r",
													"        }\r",
													"    }, function (err, res) {\r",
													"        if (err) {\r",
													"            console.error(err);\r",
													"            return;\r",
													"        }\r",
													"\r",
													"        pm.collectionVariables.set('token', res.json().authorization);\r",
													"\r",
													"        pm.sendRequest({\r",
													"            url: pm.environment.get('baseUrl') + '/carrinhos',\r",
													"            method: 'POST',\r",
													"            header: {\r",
													"                'Accept': 'application/json',\r",
													"                'Content-Type': 'application/json',\r",
													"                'Authorization': pm.collectionVariables.get('token')\r",
													"            },\r",
													"            body: {\r",
													"                mode: 'raw',\r",
													"                raw: JSON.stringify({\r",
													"                    \"produtos\": [\r",
													"                        {\r",
													"                        \"idProduto\": pm.collectionVariables.get('defaultProductId'),\r",
													"                        \"quantidade\": 1\r",
													"                        }\r",
													"                    ]\r",
													"                })\r",
													"            }\r",
													"        }, function (err, res) {\r",
													"            if (err) {\r",
													"                    console.error(err);\r",
													"                    return;\r",
													"            }\r",
													"        });\r",
													"    });\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Checks the response body\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.message).to.be.equal(\"Registro excluído com sucesso\");\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "value",
													"value": "{{token}}",
													"type": "string"
												},
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/carrinhos/concluir-compra",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"carrinhos",
												"concluir-compra"
											]
										}
									},
									"response": [
										{
											"name": "Concluir compra com carrinho válido",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/carrinhos/concluir-compra",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"carrinhos",
														"concluir-compra"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "x-dns-prefetch-control",
													"value": "off"
												},
												{
													"key": "x-frame-options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "strict-transport-security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "x-download-options",
													"value": "noopen"
												},
												{
													"key": "x-content-type-options",
													"value": "nosniff"
												},
												{
													"key": "x-xss-protection",
													"value": "1; mode=block"
												},
												{
													"key": "x-moesif-transaction-id",
													"value": "4446f0c8-a5a4-4844-97be-9331378c09cf"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "51"
												},
												{
													"key": "Date",
													"value": "Sat, 07 Oct 2023 17:46:35 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"body": "{\n    \"message\": \"Registro excluído com sucesso\"\n}"
										}
									]
								},
								{
									"name": "CT_102: Concluir compra com carrinho inexistente",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const name = pm.variables.replaceIn('{{$randomFullName}}');\r",
													"pm.collectionVariables.set(\"randomName\", name);\r",
													"const email = pm.variables.replaceIn('{{$randomExampleEmail}}');\r",
													"pm.collectionVariables.set(\"randomEmail\", email);\r",
													"\r",
													"pm.sendRequest({\r",
													"    url: pm.environment.get('baseUrl') + '/usuarios',\r",
													"    method: 'POST',\r",
													"    header: {\r",
													"        'Accept': 'application/json',\r",
													"        'Content-Type': 'application/json'\r",
													"      },\r",
													"    body: {\r",
													"        mode: 'raw',\r",
													"        raw: JSON.stringify({\r",
													"            \"nome\": pm.collectionVariables.get('randomName'),\r",
													"            \"email\": pm.collectionVariables.get('randomEmail'),\r",
													"            \"password\": pm.collectionVariables.get('validPassword'),\r",
													"            \"administrador\": \"false\"\r",
													"        })\r",
													"    }\r",
													"}, function (err, res) {\r",
													"    if (err) {\r",
													"            console.error(err);\r",
													"            return;\r",
													"    }\r",
													"\r",
													"    pm.sendRequest({\r",
													"        url: pm.environment.get('baseUrl') + '/login',\r",
													"        method: 'POST',\r",
													"        header: {\r",
													"            'Accept': 'application/json',\r",
													"            'Content-Type': 'application/json'\r",
													"        },\r",
													"        body: {\r",
													"            mode: 'raw',\r",
													"            raw: JSON.stringify({\r",
													"                \"email\": pm.collectionVariables.get('randomEmail'),\r",
													"                \"password\": pm.collectionVariables.get('validPassword')\r",
													"            })\r",
													"        }\r",
													"    }, function (err, res) {\r",
													"        if (err) {\r",
													"            console.error(err);\r",
													"            return;\r",
													"        }\r",
													"\r",
													"        pm.collectionVariables.set('token', res.json().authorization);\r",
													"    });\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Checks the response body\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.message).to.be.equal(\"Não foi encontrado carrinho para esse usuário\");\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "value",
													"value": "{{token}}",
													"type": "string"
												},
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/carrinhos/concluir-compra",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"carrinhos",
												"concluir-compra"
											]
										}
									},
									"response": [
										{
											"name": "Concluir compra com carrinho inexistente",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/carrinhos/concluir-compra",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"carrinhos",
														"concluir-compra"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "x-dns-prefetch-control",
													"value": "off"
												},
												{
													"key": "x-frame-options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "strict-transport-security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "x-download-options",
													"value": "noopen"
												},
												{
													"key": "x-content-type-options",
													"value": "nosniff"
												},
												{
													"key": "x-xss-protection",
													"value": "1; mode=block"
												},
												{
													"key": "x-moesif-transaction-id",
													"value": "08836f00-8348-44e1-9b5d-15fa4ca3385e"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "68"
												},
												{
													"key": "Date",
													"value": "Sat, 07 Oct 2023 17:47:14 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"body": "{\n    \"message\": \"Não foi encontrado carrinho para esse usuário\"\n}"
										}
									]
								},
								{
									"name": "CT_103: Concluir compra sem estar autenticado",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 401\", function () {\r",
													"    pm.response.to.have.status(401);\r",
													"});\r",
													"\r",
													"pm.test(\"Checks the response body\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.message).to.be.equal(\"Token de acesso ausente, inválido, expirado ou usuário do token não existe mais\");\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/carrinhos/concluir-compra",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"carrinhos",
												"concluir-compra"
											]
										}
									},
									"response": [
										{
											"name": "Concluir compra sem estar autenticado",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/carrinhos/concluir-compra",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"carrinhos",
														"concluir-compra"
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "x-dns-prefetch-control",
													"value": "off"
												},
												{
													"key": "x-frame-options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "strict-transport-security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "x-download-options",
													"value": "noopen"
												},
												{
													"key": "x-content-type-options",
													"value": "nosniff"
												},
												{
													"key": "x-xss-protection",
													"value": "1; mode=block"
												},
												{
													"key": "x-moesif-transaction-id",
													"value": "4fb72c8f-afba-48fb-84db-0891762e32db"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "103"
												},
												{
													"key": "Date",
													"value": "Sat, 07 Oct 2023 17:47:58 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"body": "{\n    \"message\": \"Token de acesso ausente, inválido, expirado ou usuário do token não existe mais\"\n}"
										}
									]
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						}
					]
				},
				{
					"name": "cancelar-compra",
					"item": [
						{
							"name": "Excluir carrinho e retornar produtos para estoque",
							"item": [
								{
									"name": "CT_104: Cancelar compra com carrinho válido",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const name = pm.variables.replaceIn('{{$randomFullName}}');\r",
													"pm.collectionVariables.set(\"randomName\", name);\r",
													"const email = pm.variables.replaceIn('{{$randomExampleEmail}}');\r",
													"pm.collectionVariables.set(\"randomEmail\", email);\r",
													"\r",
													"pm.sendRequest({\r",
													"    url: pm.environment.get('baseUrl') + '/usuarios',\r",
													"    method: 'POST',\r",
													"    header: {\r",
													"        'Accept': 'application/json',\r",
													"        'Content-Type': 'application/json'\r",
													"      },\r",
													"    body: {\r",
													"        mode: 'raw',\r",
													"        raw: JSON.stringify({\r",
													"            \"nome\": pm.collectionVariables.get('randomName'),\r",
													"            \"email\": pm.collectionVariables.get('randomEmail'),\r",
													"            \"password\": pm.collectionVariables.get('validPassword'),\r",
													"            \"administrador\": \"false\"\r",
													"        })\r",
													"    }\r",
													"}, function (err, res) {\r",
													"    if (err) {\r",
													"            console.error(err);\r",
													"            return;\r",
													"    }\r",
													"\r",
													"    pm.sendRequest({\r",
													"        url: pm.environment.get('baseUrl') + '/login',\r",
													"        method: 'POST',\r",
													"        header: {\r",
													"            'Accept': 'application/json',\r",
													"            'Content-Type': 'application/json'\r",
													"        },\r",
													"        body: {\r",
													"            mode: 'raw',\r",
													"            raw: JSON.stringify({\r",
													"                \"email\": pm.collectionVariables.get('randomEmail'),\r",
													"                \"password\": pm.collectionVariables.get('validPassword')\r",
													"            })\r",
													"        }\r",
													"    }, function (err, res) {\r",
													"        if (err) {\r",
													"            console.error(err);\r",
													"            return;\r",
													"        }\r",
													"\r",
													"        pm.collectionVariables.set('token', res.json().authorization);\r",
													"\r",
													"        pm.sendRequest({\r",
													"            url: pm.environment.get('baseUrl') + '/carrinhos',\r",
													"            method: 'POST',\r",
													"            header: {\r",
													"                'Accept': 'application/json',\r",
													"                'Content-Type': 'application/json',\r",
													"                'Authorization': pm.collectionVariables.get('token')\r",
													"            },\r",
													"            body: {\r",
													"                mode: 'raw',\r",
													"                raw: JSON.stringify({\r",
													"                    \"produtos\": [\r",
													"                        {\r",
													"                        \"idProduto\": pm.collectionVariables.get('defaultProductId'),\r",
													"                        \"quantidade\": 1\r",
													"                        }\r",
													"                    ]\r",
													"                })\r",
													"            }\r",
													"        }, function (err, res) {\r",
													"            if (err) {\r",
													"                    console.error(err);\r",
													"                    return;\r",
													"            }\r",
													"        });\r",
													"    });\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Checks the response body\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.message).to.be.equal(\"Registro excluído com sucesso. Estoque dos produtos reabastecido\");\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "value",
													"value": "{{token}}",
													"type": "string"
												},
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/carrinhos/cancelar-compra",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"carrinhos",
												"cancelar-compra"
											]
										}
									},
									"response": [
										{
											"name": "Cancelar compra com carrinho válido",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/carrinhos/cancelar-compra",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"carrinhos",
														"cancelar-compra"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "x-dns-prefetch-control",
													"value": "off"
												},
												{
													"key": "x-frame-options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "strict-transport-security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "x-download-options",
													"value": "noopen"
												},
												{
													"key": "x-content-type-options",
													"value": "nosniff"
												},
												{
													"key": "x-xss-protection",
													"value": "1; mode=block"
												},
												{
													"key": "x-moesif-transaction-id",
													"value": "451682c4-ded8-4cb6-bdc9-339a6bbb4d6e"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "86"
												},
												{
													"key": "Date",
													"value": "Sat, 07 Oct 2023 17:48:38 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"body": "{\n    \"message\": \"Registro excluído com sucesso. Estoque dos produtos reabastecido\"\n}"
										}
									]
								},
								{
									"name": "CT_105: Cancelar compra com carrinho inexistente",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const name = pm.variables.replaceIn('{{$randomFullName}}');\r",
													"pm.collectionVariables.set(\"randomName\", name);\r",
													"const email = pm.variables.replaceIn('{{$randomExampleEmail}}');\r",
													"pm.collectionVariables.set(\"randomEmail\", email);\r",
													"\r",
													"pm.sendRequest({\r",
													"    url: pm.environment.get('baseUrl') + '/usuarios',\r",
													"    method: 'POST',\r",
													"    header: {\r",
													"        'Accept': 'application/json',\r",
													"        'Content-Type': 'application/json'\r",
													"      },\r",
													"    body: {\r",
													"        mode: 'raw',\r",
													"        raw: JSON.stringify({\r",
													"            \"nome\": pm.collectionVariables.get('randomName'),\r",
													"            \"email\": pm.collectionVariables.get('randomEmail'),\r",
													"            \"password\": pm.collectionVariables.get('validPassword'),\r",
													"            \"administrador\": \"false\"\r",
													"        })\r",
													"    }\r",
													"}, function (err, res) {\r",
													"    if (err) {\r",
													"            console.error(err);\r",
													"            return;\r",
													"    }\r",
													"\r",
													"    pm.sendRequest({\r",
													"        url: pm.environment.get('baseUrl') + '/login',\r",
													"        method: 'POST',\r",
													"        header: {\r",
													"            'Accept': 'application/json',\r",
													"            'Content-Type': 'application/json'\r",
													"        },\r",
													"        body: {\r",
													"            mode: 'raw',\r",
													"            raw: JSON.stringify({\r",
													"                \"email\": pm.collectionVariables.get('randomEmail'),\r",
													"                \"password\": pm.collectionVariables.get('validPassword')\r",
													"            })\r",
													"        }\r",
													"    }, function (err, res) {\r",
													"        if (err) {\r",
													"            console.error(err);\r",
													"            return;\r",
													"        }\r",
													"\r",
													"        pm.collectionVariables.set('token', res.json().authorization);\r",
													"    });\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Checks the response body\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.message).to.be.equal(\"Não foi encontrado carrinho para esse usuário\");\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "value",
													"value": "{{token}}",
													"type": "string"
												},
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/carrinhos/cancelar-compra",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"carrinhos",
												"cancelar-compra"
											]
										}
									},
									"response": [
										{
											"name": "Cancelar compra com carrinho inexistente",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/carrinhos/cancelar-compra",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"carrinhos",
														"cancelar-compra"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "x-dns-prefetch-control",
													"value": "off"
												},
												{
													"key": "x-frame-options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "strict-transport-security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "x-download-options",
													"value": "noopen"
												},
												{
													"key": "x-content-type-options",
													"value": "nosniff"
												},
												{
													"key": "x-xss-protection",
													"value": "1; mode=block"
												},
												{
													"key": "x-moesif-transaction-id",
													"value": "42827c16-5a0e-4dbc-bdff-53a16e546d0e"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "68"
												},
												{
													"key": "Date",
													"value": "Sat, 07 Oct 2023 17:49:15 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"body": "{\n    \"message\": \"Não foi encontrado carrinho para esse usuário\"\n}"
										}
									]
								},
								{
									"name": "CT_106: Cancelar compra sem autenticação",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 401\", function () {\r",
													"    pm.response.to.have.status(401);\r",
													"});\r",
													"\r",
													"pm.test(\"Checks the response body\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.message).to.be.equal(\"Token de acesso ausente, inválido, expirado ou usuário do token não existe mais\");\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/carrinhos/cancelar-compra",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"carrinhos",
												"cancelar-compra"
											]
										}
									},
									"response": [
										{
											"name": "Cancelar compra sem autenticação",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/carrinhos/cancelar-compra",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"carrinhos",
														"cancelar-compra"
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "x-dns-prefetch-control",
													"value": "off"
												},
												{
													"key": "x-frame-options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "strict-transport-security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "x-download-options",
													"value": "noopen"
												},
												{
													"key": "x-content-type-options",
													"value": "nosniff"
												},
												{
													"key": "x-xss-protection",
													"value": "1; mode=block"
												},
												{
													"key": "x-moesif-transaction-id",
													"value": "5fdb3a23-2ef0-4aa8-b8d0-43a008d34d62"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "103"
												},
												{
													"key": "Date",
													"value": "Sat, 07 Oct 2023 17:50:20 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"body": "{\n    \"message\": \"Token de acesso ausente, inválido, expirado ou usuário do token não existe mais\"\n}"
										}
									]
								}
							]
						}
					]
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "token",
			"value": "",
			"type": "string"
		},
		{
			"key": "adminEmail",
			"value": "fulano@qa.com",
			"type": "string"
		},
		{
			"key": "adminPassword",
			"value": "teste",
			"type": "string"
		},
		{
			"key": "adminId",
			"value": "0uxuPY0cbmQhpEz1",
			"type": "string"
		},
		{
			"key": "defaultProductId",
			"value": "BeeJh5lz3k6kSIzA",
			"type": "string"
		},
		{
			"key": "defaultProductName",
			"value": "Logitech MX Vertical",
			"type": "string"
		},
		{
			"key": "defaultCartId",
			"value": "qbMqntef4iTOwWfg",
			"type": "string"
		},
		{
			"key": "validPassword",
			"value": ""
		},
		{
			"key": "shortPassword",
			"value": ""
		},
		{
			"key": "longPassword",
			"value": ""
		},
		{
			"key": "randomName",
			"value": ""
		},
		{
			"key": "randomEmail",
			"value": ""
		},
		{
			"key": "newUserId",
			"value": ""
		},
		{
			"key": "newProductId",
			"value": "",
			"type": "string"
		},
		{
			"key": "randomProductName",
			"value": ""
		},
		{
			"key": "randomProductPrice",
			"value": ""
		},
		{
			"key": "randomProductDescription",
			"value": ""
		},
		{
			"key": "randomProductQuantity",
			"value": ""
		}
	]
}